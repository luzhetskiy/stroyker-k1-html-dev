"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}$(document).ready(function(){$(".catalog-filter-accordion a.opener").click(function(){return $(this).parent().find("ul:first").slideToggle(),$(this).parent().toggleClass("active"),!1}),$(".product-item__image-sector").on("mousemove",t=>{var t=$(t.currentTarget),e=t.attr("data-sector"),t=t.parent().parent();t.find(".product-item__image-img_active").removeClass("product-item__image-img_active"),t.find(".product-item__image-dot_active").removeClass("product-item__image-dot_active"),t.find(`[data-sector-image="${e}"]`).addClass("product-item__image-img_active"),t.find(`[data-sector-dot="${e}"]`).addClass("product-item__image-dot_active")});let o=0,i;$(".product-item__image-sectors").on("touchstart",t=>{o=t.changedTouches[0].screenX}),$(".product-item__image-sectors").on("touchend",t=>{i=t.changedTouches[0].screenX;var t=$(t.currentTarget).parent(),e=t.find(".product-item__image-img_active"),e=Number(e.attr("data-sector-image")),a=t.find(".product-item__image-img").length;if(i<o){if(t.find(".product-item__image-img_active").removeClass("product-item__image-img_active"),t.find(".product-item__image-dot_active").removeClass("product-item__image-dot_active"),a<=e)return t.find('[data-sector-image="1"]').addClass("product-item__image-img_active"),void t.find('[data-sector-dot="1"]').addClass("product-item__image-dot_active");t.find(`[data-sector-image="${e+1}"]`).addClass("product-item__image-img_active"),t.find(`[data-sector-dot="${e+1}"]`).addClass("product-item__image-dot_active")}i>o&&(t.find(".product-item__image-img_active").removeClass("product-item__image-img_active"),t.find(".product-item__image-dot_active").removeClass("product-item__image-dot_active"),(e<=1?(t.find(`[data-sector-image="${a}"]`).addClass("product-item__image-img_active"),t.find(`[data-sector-dot="${a}"]`)):(t.find(`[data-sector-image="${e-1}"]`).addClass("product-item__image-img_active"),t.find(`[data-sector-dot="${e-1}"]`))).addClass("product-item__image-dot_active"))})}),$(".like-btn").on("click",function(t){t.preventDefault(),$(this).toggleClass("active")}),$(".city-selection__link").click(function(){$(".city-selection__list").toggle(0)}),$(window).click(function(t){t.target.classList.contains("city-selection__link")||$(".city-selection__list").toggle(!1)}),$(".burger-menu").click(function(){$(".mobile-menu").toggle(0)}),$(".catalog-inner-btn").click(function(t){t.preventDefault(),$(this).toggleClass("open"),$(".catalog-header-content").toggle(0)}),$(".catalog-inner-btn,.catalog-menu__head a").click(function(t){t.preventDefault(),$(".catalog-menu").toggle(0)}),$(".burger-catalog").click(function(t){t.preventDefault(),$(this).toggleClass("open")}),$(".share-btn").click(function(){$(".share-block__show").toggle(0)}),$(".close-panel").click(function(){$(".bottom-panel").toggle(0)}),$(".filter-btn, .close-btn-2").click(function(){$(".catalog-filter").toggle(0)}),$(".catalog-side__title").click(function(){$(".catalog-side__content").toggle(0),$(".catalog-side__content-accordeon").toggle(0)}),$(".catalog-opened").click(function(){$(".catalog-opened .submenu").toggle(0)}),$(".burger-menu").click(function(){$(this).toggleClass("menu-on")}),$(".catalog-inner").click(function(){$(this).toggleClass("open"),$(".catalog-inner-content").toggle(0)}),$(function(){$(".smoothScroll").click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var t=$(this.hash);if((t=t.length?t:$("[name="+this.hash.slice(1)+"]")).length)return $("html,body").animate({scrollTop:t.offset().top},1e3),!1}})});var bigSlides=$(".main-slider .owl-carousel"),autoPlayTimeoutSec=parseInt(bigSlides.data("autoplay-timeout")),radioButtons=(bigSlides.owlCarousel({loop:!0,margin:5,nav:!0,dots:!0,items:1,autoplay:!0,autoplayTimeout:1e3*autoPlayTimeoutSec,navText:['<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M9,0l1.4,1.4L2.8,9l7.6,7.6L9,18.1L0,9C0,9,9.1,0,9,0z"></path></svg>','<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M1.4,18.1L0,16.7l7.6-7.6L0,1.5L1.4,0l9,9.1C10.4,9.1,1.3,18.1,1.4,18.1z"></path></svg>']}),document.querySelectorAll('.delivery-selection input[type="radio"]')),choices=document.querySelectorAll(".delivery-choice"),keypressSliders=(radioButtons.forEach(function(t){t.addEventListener("change",function(){var e=this;choices.forEach(function(t){t.classList.contains(e.id)||t.classList.contains("delivery-type-"+e.value)?t.style.display="block":t.style.display="none"})})}),$(".shopping-cart-item__delete").click(function(){$(this).parent(".shopping-cart-item").remove()}),$(".slider .owl-carousel").owlCarousel({loop:!0,margin:0,items:1,nav:!0}),$(".news-slider .owl-carousel").owlCarousel({loop:!0,margin:0,items:4,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:2},768:{nav:!0,dots:!1,items:3},992:{items:4}}}),$(".action-slider .owl-carousel").owlCarousel({loop:!0,margin:20,nav:!0,dots:!1,items:3,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:2},768:{nav:!0,dots:!1,items:3}}}),$(".partners-slider .owl-carousel").owlCarousel({loop:!0,margin:0,nav:!0,dots:!1,items:5,responsive:{0:{dots:!0,nav:!1,items:1},566:{nav:!1,dots:!0,items:2},768:{nav:!1,dots:!0,items:3},900:{nav:!1,dots:!0,items:4},950:{dots:!1}}}),!function(s){s("select.custom-select").each(function(){var t=s(this),e=t.attr("id"),a=t.children("optgroup"),o="",i="";a.length?(a.each(function(){var t=s(this),e=t.attr("label");o+='<li class="optgroup">'+e+"</li>",t.children("option").each(function(){var t=s(this),e=t.attr("value"),a=t.html(),t=t.attr("selected");o+="selected"===t?'<li class="selected" data-value="'+e+'">'+(i=a)+"</li>":'<li data-value="'+e+'">'+a+"</li>"})}),t.children("option").each(function(){var t=s(this),e=t.attr("value"),a=t.html(),t=t.attr("selected");o="selected"===t?'<li class="selected" data-value="'+e+'">'+(i=a)+"</li>"+o:'<li data-value="'+e+'">'+a+"</li>"+o})):t.children("option").each(function(){var t=s(this),e=t.attr("value"),a=t.html(),t=t.attr("selected");o+="selected"===t?'<li class="selected" data-value="'+e+'">'+(i=a)+"</li>":'<li data-value="'+e+'">'+a+"</li>"}),s('<div class="dropdown-container"><div class="dropdown-select entypo-down-open-big"><svg class="icon"><use xlink:href="#tab-arrow"></use></svg><span>'+i+'</span></div><ul class="dropdown-select-ul" data-role="'+e+'">'+o+"</ul></div> \x3c!-- .custom-select-wrapper --\x3e").insertAfter(t)});var t=s(".dropdown-select"),e=s(".dropdown-select-ul"),a=s(".dropdown-select-ul li");t.on("click",function(){s(this).parent(".dropdown-container").toggleClass("active")}),e.on("mouseleave",function(){s(this).parent(".dropdown-container").removeClass("active")}),a.on("click",function(){var t,e,a,o,i,n=s(this);n.hasClass("optgroup")||(e=(t=n.parent("ul")).siblings(".dropdown-select"),a=n.html(),o=n.attr("data-value"),i="#"+t.attr("data-role"),t.parent(".dropdown-container").toggleClass("active"),n.siblings("li").removeClass("selected"),n.addClass("selected"),s(i).val(o),e.children("span").html(a))})}(jQuery),$(".tab-content").hide(),$(".tab-content:first").show(),$("ul.tabs li,.product-card__review-link a,.schedule-btn a").click(function(){$(".tab-content").hide();var t=$(this).attr("rel");$("#"+t).fadeIn(),$("ul.tabs li").removeClass("active"),$(this).addClass("active"),$(".tab_drawer_heading").removeClass("d_active"),$(".tab_drawer_heading[rel^='"+t+"']").addClass("d_active")}),$(".tab_drawer_heading").click(function(){var t=$(this).attr("rel"),e=$("#"+t+":hidden"),a=$(this).not(".d_active");$(".tab-content").hide(),e.fadeIn(),$(".tab_drawer_heading").removeClass("d_active"),a.addClass("d_active"),$("ul.tabs li").removeClass("active"),$("ul.tabs li[rel^='"+t+"']").addClass("active")}),$("ul.tabs li").last().addClass("tab_last"),jQuery(document).ready(function(){jQuery(".schedule-btn a").click(function(){jQuery(".schedule-link").toggleClass("active")})}),jQuery(document).ready(function(){jQuery(".product-card__review-link a").click(function(){jQuery(".review-tab-link").toggleClass("active")})}),$(document).ready(function(){var e=$("#sync1"),i=$("#sync2");e.owlCarousel({items:1,slideSpeed:2e3,nav:!0,autoplay:!1,dots:!0,loop:!0,responsiveRefreshRate:200,margin:10}).on("changed.owl.carousel",function(t){var e=t.item.count-1,t=Math.round(t.item.index-t.item.count/2-.5);t<0&&(t=e);e<t&&(t=0);i.find(".owl-item").removeClass("current").eq(t).addClass("current");var e=i.find(".owl-item.active").length-1,a=i.find(".owl-item.active").first().index(),o=i.find(".owl-item.active").last().index();o<t&&i.data("owl.carousel").to(t,100,!0);t<a&&i.data("owl.carousel").to(t-e,100,!0)}),i.on("initialized.owl.carousel",function(){i.find(".owl-item").eq(0).addClass("current")}).owlCarousel({items:3,dots:!0,nav:!0,margin:10,smartSpeed:200,slideSpeed:500,slideBy:3,responsiveRefreshRate:100}).on("changed.owl.carousel",function(t){{t=t.item.index;e.data("owl.carousel").to(t,100,!0)}}),i.on("click",".owl-item",function(t){t.preventDefault();t=$(this).index();e.data("owl.carousel").to(t,300,!0)})}),!function(S){var T="cscrlb";function i(t,a){var i,n,s,o,e,r=t,l=S(t),c=l.find(".cscrlb-content"),d=7/8,u="vert",m="scrollTop",h="height",p="top";function v(t){t.preventDefault();var e=t.pageY;"horiz"===u&&(e=t.pageX),o=e-s.offset()[p],S(document).on("mousemove",g),S(document).on("mouseup",f)}function g(t){t.preventDefault();var e=t.pageY,t=((e="horiz"===u?t.pageX:e)-n.offset()[p]-o)/n[h]()*c[h]();i[m](t)}function f(){S(document).off("mousemove",g),S(document).off("mouseup",f)}function w(t){var e;t.target!==s[0]&&(e=d*i[h](),t=("vert"===u?t.originalEvent.layerY:t.originalEvent.layerX)<s.position()[p]?i[m]()-e:i[m]()+e,i[m](t))}function b(t){_()}function y(){var t=c[h](),e=i[m](),a=n[h](),o=a/t,e=Math.round(o*e),o=Math.floor(o*(a+2));a<t?("vert"===u?s.css({top:e,height:o}):s.css({left:e,width:o}),n.show()):n.hide()}function _(){y(),$()}function $(){s.addClass("visible"),a.autoHide&&("number"==typeof e&&window.clearTimeout(e),e=window.setTimeout(function(){s.removeClass("visible"),"number"==typeof e&&window.clearTimeout(e)},1e3))}function C(){("vert"===u?(i.width(l.width()+k()),i):(i.width(l.width()),i.height(l.height()+k()),c)).height(l.height())}function k(){var t=S('<div class="scrollbar-width-tester" style="width:50px;height:50px;overflow-y:scroll;position:absolute;top:-200px;left:-200px;"><div style="height:100px;"></div>'),e=(S("body").append(t),S(t).innerWidth()),a=S("div",t).innerWidth();return t.remove(),e===a&&-1<navigator.userAgent.toLowerCase().indexOf("firefox")?17:e-a}function x(){C(),y()}return a=S.extend({},S.fn[T].defaults,a),window.onload=function(){c.focus()},l.hasClass("horizontal")&&(u="horiz",m="scrollLeft",h="width",p="left"),l.prepend('<div class="cscrlb-scrollbar"><div class="drag-handle"></div></div>'),n=l.find(".cscrlb-scrollbar"),s=l.find(".drag-handle"),a.wrapContent&&c.wrap('<div class="cscrlb-scroll-content" />'),i=l.find(".cscrlb-scroll-content"),C(),a.autoHide&&l.on("mouseenter",_),s.on("mousedown",v),n.on("mousedown",w),i.on("scroll",b),y(),S(window).on("resize",function(){x()}),a.autoHide||$(),{option:function(t,e){if(!e)return a[t];a[t]=e},destroy:function(){var t;c.insertBefore(n),n.remove(),i.remove(),c.css({height:l.height()+"px","overflow-y":"scroll"}),void 0!==a[t="onDestroy"]&&a[t].call(r),l.removeData("plugin_"+T)},recalculate:x}}S.fn[T]=function(t){var e,a,o;return"string"==typeof t?(e=t,a=Array.prototype.slice.call(arguments,1),this.each(function(){if(!S.data(this,"plugin_"+T)||"function"!=typeof S.data(this,"plugin_"+T)[e])throw new Error(" "+e+" "+T);o=S.data(this,"plugin_"+T)[e].apply(this,a)}),void 0!==o?o:this):"object"!==_typeof(t)&&t?void 0:this.each(function(){S.data(this,"plugin_"+T)||S.data(this,"plugin_"+T,new i(this,t))})},S.fn[T].defaults={onInit:function(){},onDestroy:function(){},wrapContent:!0,autoHide:!1}}(jQuery),$(function(){$(".cscrlb-scrollable").cscrlb()}),(()=>{const e=$(".button1"),a=$(".button2"),o=$(".button3"),i=$(".product-item");a.click(t=>{e.removeClass("current"),o.removeClass("current"),$(t.currentTarget).addClass("current"),localStorage.setItem("catalogGrid","wide"),i.removeClass("product-item--line"),i.addClass("product-item--wide")}),o.click(t=>{a.removeClass("current"),e.removeClass("current"),$(t.currentTarget).addClass("current"),localStorage.setItem("catalogGrid","wide"),i.removeClass("product-item--wide"),i.addClass("product-item--line")}),e.click(t=>{a.removeClass("current"),o.removeClass("current"),$(t.currentTarget).addClass("current"),localStorage.setItem("catalogGrid","default"),i.removeClass("product-item--wide"),i.removeClass("product-item--line")})})(),$(".range-slider"));function _defineProperties(t,e){for(var a=0;a<e.length;a++){var o=e[a];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function _createClass(t,e,a){return e&&_defineProperties(t.prototype,e),a&&_defineProperties(t,a),t}function _createForOfIteratorHelper(t,e){var a,o;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(a=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length)return a&&(t=a),o=0,{s:e=function(){},n:function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}},e:function(t){throw t},f:e};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,n=!0,s=!1;return{s:function(){a=t[Symbol.iterator]()},n:function(){var t=a.next();return n=t.done,t},e:function(t){s=!0,i=t},f:function(){try{n||null==a.return||a.return()}finally{if(s)throw i}}}}function _unsupportedIterableToArray(t,e){var a;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(a="Object"===(a=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:a)||"Set"===a?Array.from(t):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(t,e):void 0}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var a=0,o=new Array(e);a<e;a++)o[a]=t[a];return o}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}$(keypressSliders).each(function(t,s){var e,a,o,i,n=$(s).data("name"),r=document.getElementById("id_"+n+"_0"),l=document.getElementById("id_"+n+"_1"),c=[r,l],r=(r&&l&&(e=parseInt(r.dataset.currentValue),a=parseInt(l.dataset.currentValue),o=parseInt(r.dataset.minValue),i=parseInt(l.dataset.maxValue)),"");function d(t,e){var a=[null,null];a[t]=e,s.noUiSlider.set(a)}"price_range"==n&&(r=" ₽"),"undefined"!=typeof noUiSlider&&noUiSlider.create(s,{start:[e,a],connect:!0,range:{min:o,max:i},format:wNumb({decimals:0,thousand:" ",postfix:r}),step:1}),null!==s&&s.noUiSlider&&s.noUiSlider.on("update",function(t,e){c[e].value=t[e]}),c.forEach(function(t,n){null!==t&&(t.addEventListener("change",function(){d(n,this.value)}),t.addEventListener("keydown",function(t){var e,a=s.noUiSlider.get(),o=Number(a[n]),i=s.noUiSlider.steps()[n];switch(t.which){case 13:d(n,this.value);break;case 38:null!==(e=!1===(e=i[1])?1:e)&&d(n,o+e);break;case 40:null!==(e=!1===(e=i[0])?1:e)&&d(n,o-e)}}))})}),$(".acc__toggle:not(.not_toggle)").click(function(t){var e=$(this);e.next().hasClass("show")?(e.next().removeClass("show"),e.removeClass("active"),e.next().slideUp(200)):(e.parent().parent().find("li .inner").removeClass("show"),e.parent().parent().find("li .acc__toggle").removeClass("active"),e.parent().parent().find("li .inner").slideUp(200),e.next().toggleClass("show"),e.toggleClass("active"),e.next().slideToggle(200))});var breakpoints={xs:0,sm:576,md:768,lg:1024,xl:1280};function throttle(t,e,a){var o=!1;return function(){o||(t.apply(a||this,arguments),o=!0,setTimeout(function(){return o=!1},e))}}function debounce(a,o,i){var n=!1;return function(){var t=arguments,e=this;n&&clearTimeout(n),n=setTimeout(function(){a.apply(i||e,t)},o)}}function homeBanner(){var t=$(".home-banner .owl-carousel");t.length&&t.owlCarousel({loop:!0,nav:!0,smartSpeed:500,dots:!0,items:1,lazyLoad:!0,autoplay:!0,autoplayTimeout:1e3*(+t.data("autoplay-timeout")||5),navText:['<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M9,0l1.4,1.4L2.8,9l7.6,7.6L9,18.1L0,9C0,9,9.1,0,9,0z"></path></svg>','<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M1.4,18.1L0,16.7l7.6-7.6L0,1.5L1.4,0l9,9.1C10.4,9.1,1.3,18.1,1.4,18.1z"></path></svg>']})}function header(){var t,e=$("header");let a=!1;function o(){e.hasClass("header_landing")||(t=$(window).scrollTop(),e.height()<t?e.addClass("fixed"):e.removeClass("fixed"))}o(),$(window).scroll(function(){a||(a=!0,setTimeout(()=>{o(),a=!1},100))})}function gallery(){$.fancybox&&$(".owl-item [data-fancybox]").on("click",function(){var t=$(this).parents(".owl-carousel").find(".owl-item:not(.cloned) [data-fancybox]");return $.fancybox.open(t,{selector:t,backFocus:!1},t.index(this)),!1})}function landing_sliders(){var t=$(".landing-slider .owl-carousel");t.length&&t.each(function(){var t,e,a,o,i=$(this);i.is(".landing-slider_1 .owl-carousel")?(e=t=2,a=3,o=4):i.is(".landing-slider_2 .owl-carousel")&&(t=1,e=2,a=3,o=4),i.owlCarousel({loop:!0,margin:20,responsive:{0:{items:t,margin:16},576:{items:e},768:{items:a},992:{items:o}}})})}function toggle(){var t=$(".toggle-section");t.each(function(){var t,a,e=$(this),o=e.children(".toggle-section__trigger"),i=e.children(".toggle-section__content"),n=i.find(".toggle-section__close"),s=!!e.hasClass("active");function r(){s?(e.add(i).add(o).addClass("active"),e.is("[data-slide]")&&i.slideDown(250)):(e.add(o).add(i).removeClass("active"),e.is("[data-slide]")&&(t?i.stop().slideUp(250):i.hide(0)))}o.on("click",function(){s=!s,r()}),n.on("click",function(){s=!1,r()}),e.is("[data-hover]")&&(o.add(i).on("mouseenter",function(t){isTouch||(a&&clearTimeout(a),s=!0,r())}),o.add(i).on("mouseleave",function(t){var e;isTouch||(e=$(this).is(o)?500:100,a=setTimeout(function(){s=!1,r()},e))})),(e.is("[data-out-hide]")||e.is("[data-hover]"))&&$(document).on("click touchstart",function(t){t=$(t.target);t.closest(i).length||t.closest(o).length||!s||(s=!1,r())}),r(),t=!0})}function up(){var t=$(".js-up");function e(){50<$(window).scrollTop()?t.addClass("visible"):t.removeClass("visible")}let a=!1;$(window).on("scroll",function(){a||(a=!0,setTimeout(()=>{e(),a=!1},100))}),e(),t.on("click",function(t){t.preventDefault(),$("html, body").animate({scrollTop:0},500)})}function chatBlock(){var t=$(".chat-block"),e=$("[data-chat-open]"),a=$("[data-chat-close]");e.on("click",function(){t.addClass("active")}),a.on("click",function(){t.removeClass("active")})}$(document).ready(function(){homeBanner(),header(),gallery(),landing_sliders(),up(),chatBlock(),toggle(),new СustomInteraction({targets:"a, button, [data-custom-interaction], .image-zoom"}),document.querySelectorAll(".slider-constructor").forEach(function(t){new SliderConstructor(t).init()})});var СustomInteraction=function t(){function e(t){for(var a=[],e=(a[0]=t.target!==document?t.target.closest(s.targets):null,a[0]),o=0;a[0]&&(e=e.parentNode)!==document;)e.matches(a.value)&&(a[++o]=e);if("touchstart"==t.type){if(s.touched=!0,s.timeout&&clearTimeout(s.timeout),a[0]){var i,n=_createForOfIteratorHelper(a);try{for(n.s();!(i=n.n()).done;)i.value.setAttribute("data-touch","")}catch(t){n.e(t)}finally{n.f()}}}else("touchend"==t.type||"contextmenu"==t.type&&s.touched)&&(s.timeout=setTimeout(function(){s.touched=!1},s.touchendDelay),a[0])&&setTimeout(function(){var t,e=_createForOfIteratorHelper(a);try{for(e.s();!(t=e.n()).done;)t.value.removeAttribute("data-touch")}catch(t){e.e(t)}finally{e.f()}},s.touchendDelay);"mouseenter"==t.type&&!s.touched&&a[0]&&a[0]==t.target?a[0].setAttribute("data-hover",""):"mouseleave"==t.type&&!s.touched&&a[0]&&a[0]==t.target&&(a[0].removeAttribute("data-click"),a[0].removeAttribute("data-hover")),"mousedown"==t.type&&!s.touched&&a[0]?a[0].setAttribute("data-click",""):"mouseup"==t.type&&!s.touched&&a[0]&&a[0].removeAttribute("data-click")}var s=this,a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};_classCallCheck(this,t),this.targets=a.targets,this.touchendDelay=a.touchendDelay||100;document.addEventListener("touchstart",e),document.addEventListener("touchend",e),document.addEventListener("mouseenter",e,!0),document.addEventListener("mouseleave",e,!0),document.addEventListener("mousedown",e),document.addEventListener("mouseup",e),document.addEventListener("contextmenu",e)},SliderConstructor=function(){function e(t){_classCallCheck(this,e),this.element=t}return _createClass(e,[{key:"init",value:function(){var i=this,t=(this.params={},this.params.autoplay=null!==this.element.getAttribute("data-autoplay-timeout"),this.params.autoplayTimeout=+this.element.getAttribute("data-autoplay-timeout")||5e3,this.params.arrows=null===this.element.getAttribute("data-no-arrows"),window.matchMedia("(min-width: 575.98px)"));t.matches?this.params.dots=null===this.element.getAttribute("data-no-dots"):this.params.dots=!0,this.params.adaptiveHeight=null!==this.element.getAttribute("data-adaptive-height"),this.params.centerMode=null!==this.element.getAttribute("data-center"),this.params.count={},this.params.count.xs=+this.element.getAttribute("data-slides")||1,this.params.count.sm=+this.element.getAttribute("data-sm-slides")||this.params.count.xs,this.params.count.md=+this.element.getAttribute("data-md-slides")||this.params.count.sm,this.params.count.lg=+this.element.getAttribute("data-lg-slides")||this.params.count.md,this.params.count.xl=+this.element.getAttribute("data-xl-slides")||this.params.count.lg,this.params.rows={},this.params.rows.xs=+this.element.getAttribute("data-rows")||1,this.params.rows.sm=+this.element.getAttribute("data-sm-rows")||this.params.rows.xs,this.params.rows.md=+this.element.getAttribute("data-md-rows")||this.params.rows.sm,this.params.rows.lg=+this.element.getAttribute("data-lg-rows")||this.params.rows.md,this.params.rows.xl=+this.element.getAttribute("data-xl-rows")||this.params.rows.lg,this.params.state={},Object.keys(breakpoints).forEach(function(t,e){var a,o=i.element.getAttribute("data".concat(0!==e?"-"+t+"-":"-","mounted"));null===o&&0!==e?(a=Object.keys(breakpoints)[e-1],i.params.state[t]=i.params.state[a]):i.params.state[t]="true"===o||0===e&&"false"!==o}),this.slides=[],this.containsMobileHiddenSlides=!1,this.element.childNodes.forEach(function(t){t.tagName&&(null!==t.getAttribute("data-slide-mobile-hidden")&&(i.containsMobileHiddenSlides=!0),i.slides.push(t))}),this.createIcons(),this.checkSliderState(),this.checkSliderStateDebounced=debounce(this.checkSliderState,500,this),window.addEventListener("resize",this.checkSliderStateDebounced)}},{key:"createIcons",value:function(){var o='\n      <svg viewBox="0 0 11 19" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n        <path d="M1.4 18.1L0 16.7L7.6 9.10001L0 1.5L1.4 0L10.4 9.10001C10.4 9.10001 1.3 18.1 1.4 18.1Z"/>\n      </svg>\n    ',i='\n      <svg viewBox="0 0 11 19" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n        <path d="M9.00039 7.24792e-05L10.4004 1.40007L2.80039 9.00009L10.4004 16.6001L9.00039 18.1001L0.000391006 9.00009C0.000391006 9.00009 9.10039 7.24792e-05 9.00039 7.24792e-05Z"/>\n      </svg>\n    ',n="custom-icon-left",s="custom-icon-right";this.element.querySelectorAll(".".concat(n,", .").concat(s)).forEach(function(t){var e=t.classList.contains(n),a=t.classList.contains(s);e?(t.classList.remove(n),o=t.outerHTML):a&&(t.classList.remove(s),i=t.outerHTML),t.remove()}),this.nextArrow='<button type="button" class="button button_style-1 slick-next">'.concat(o,"</button>"),this.prevArrow='<button type="button" class="button button_style-1 slick-prev">'.concat(i,"</button>")}},{key:"checkSliderState",value:function(){if(!this.mounted||this.savedWindowWidth!==window.innerWidth){var t,e;for(e in this.savedWindowWidth=window.innerWidth,this.mounted&&this.unmount(),breakpoints)window.innerWidth>=breakpoints[e]&&(t=this.params.state[e]);t?(this.element.classList.remove("visible"),this.containsMobileHiddenSlides&&this.checkSlidesVisibility(),this.mount()):this.element.classList.add("visible")}}},{key:"checkSlidesVisibility",value:function(){var o=this;this.slides.forEach(function(t){t.remove()}),this.slides.forEach(function(t){var e=null!==t.getAttribute("data-slide-mobile-hidden"),a=window.innerWidth<breakpoints.sm;e&&a||o.element.insertAdjacentElement("beforeend",t)})}},{key:"mount",value:function(){$(this.element).slick({autoplay:this.params.autoplay,autoplaySpeed:this.params.autoplayTimeout,mobileFirst:!0,slidesToShow:this.params.count.xs,slidesToScroll:this.params.count.xs,rows:this.params.rows.xs,prevArrow:this.prevArrow,nextArrow:this.nextArrow,arrows:this.params.arrows,adaptiveHeight:this.params.adaptiveHeight,dots:this.params.dots,centerMode:this.params.centerMode,accessibility:!1,responsive:[{breakpoint:breakpoints.sm-1,settings:{slidesToShow:this.params.count.sm,slidesToScroll:this.params.count.sm,rows:this.params.rows.sm}},{breakpoint:breakpoints.md-1,settings:{slidesToShow:this.params.count.md,slidesToScroll:this.params.count.md,rows:this.params.rows.md}},{breakpoint:breakpoints.lg-1,settings:{slidesToShow:this.params.count.lg,slidesToScroll:this.params.count.lg,rows:this.params.rows.lg}},{breakpoint:breakpoints.xl-1,settings:{slidesToShow:this.params.count.xl,slidesToScroll:this.params.count.xl,rows:this.params.rows.xl}}]}),this.mounted=!0}},{key:"unmount",value:function(){$(this.element).slick("unslick"),this.mounted=!1}}]),e}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
