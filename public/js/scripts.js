"use strict";function _typeof(t){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_typeof(t)}$(document).ready((function(){$(".catalog-filter-accordion a.opener").click((function(){return $(this).parent().find("ul:first").slideToggle(),$(this).parent().toggleClass("active"),!1})),$("[data-expand]").on("click",(function(t){var e=$(t.currentTarget),a=e.parent();a.find("[data-collapse-content]").removeClass("d-none"),a.find("[data-collapse]").removeClass("d-none"),e.addClass("d-none")})),$("[data-collapse]").on("click",(function(t){var e=$(t.currentTarget),a=e.parent();a.find("[data-collapse-content]").addClass("d-none"),a.find("[data-expand]").removeClass("d-none"),e.addClass("d-none")})),$(".product-card-slideshow__sector").on("mousemove",(function(t){var e=$(t.currentTarget),a=e.attr("data-sector"),o=e.parent().parent();o.find(".product-card-slideshow__image_active").removeClass("product-card-slideshow__image_active"),o.find(".product-card-slideshow__dot_active").removeClass("product-card-slideshow__dot_active"),o.find('[data-sector-image="'.concat(a,'"]')).addClass("product-card-slideshow__image_active"),o.find('[data-sector-dot="'.concat(a,'"]')).addClass("product-card-slideshow__dot_active")}));var t=0,e=0;$(".product-card-slideshow__sectors").on("touchstart",(function(e){t=e.changedTouches[0].screenX})),$(".product-card-slideshow__sectors").on("touchend",(function(a){e=a.changedTouches[0].screenX;var o=$(a.currentTarget).parent(),n=o.find(".product-card-slideshow__image_active"),i=Number(n.attr("data-sector-image")),s=o.find(".product-card-slideshow__image").length;if(e<t){if(o.find(".product-card-slideshow__image_active").removeClass("product-card-slideshow__image_active"),o.find(".product-card-slideshow__dot_active").removeClass("product-card-slideshow__dot_active"),i>=s)return o.find('[data-sector-image="'.concat(1,'"]')).addClass("product-card-slideshow__image_active"),void o.find('[data-sector-dot="'.concat(1,'"]')).addClass("product-card-slideshow__dot_active");o.find('[data-sector-image="'.concat(i+1,'"]')).addClass("product-card-slideshow__image_active"),o.find('[data-sector-dot="'.concat(i+1,'"]')).addClass("product-card-slideshow__dot_active")}if(e>t){if(o.find(".product-card-slideshow__image_active").removeClass("product-card-slideshow__image_active"),o.find(".product-card-slideshow__dot_active").removeClass("product-card-slideshow__dot_active"),i<=1)return o.find('[data-sector-image="'.concat(s,'"]')).addClass("product-card-slideshow__image_active"),void o.find('[data-sector-dot="'.concat(s,'"]')).addClass("product-card-slideshow__dot_active");o.find('[data-sector-image="'.concat(i-1,'"]')).addClass("product-card-slideshow__image_active"),o.find('[data-sector-dot="'.concat(i-1,'"]')).addClass("product-card-slideshow__dot_active")}}))})),$(".like-btn").on("click",(function(t){t.preventDefault(),$(this).toggleClass("active")})),$(".city-selection__link").click((function(){$(".city-selection__list").toggle(0)})),$(window).click((function(t){t.target.classList.contains("city-selection__link")||$(".city-selection__list").toggle(!1)})),$(".burger-menu").click((function(){$(".mobile-menu").toggle(0)})),$(".catalog-inner-btn").click((function(t){t.preventDefault(),$(this).toggleClass("open"),$(".catalog-header-content").toggle(0)})),$(".catalog-inner-btn,.catalog-menu__head a").click((function(t){t.preventDefault(),$(".catalog-menu").toggle(0)})),$(".burger-catalog").click((function(t){t.preventDefault(),$(this).toggleClass("open")})),$(".share-btn").click((function(){$(".share-block__show").toggle(0)})),$(".close-panel").click((function(){$(".bottom-panel").toggle(0)})),$(".filter-btn, .close-btn-2").click((function(){$(".catalog-filter").toggle(0)})),$(".catalog-side__title").click((function(){$(".catalog-side__content").toggle(0),$(".catalog-side__content-accordeon").toggle(0)})),$(".catalog-opened").click((function(){$(".catalog-opened .submenu").toggle(0)})),$(".burger-menu").click((function(){$(this).toggleClass("menu-on")})),$(".catalog-inner").click((function(){$(this).toggleClass("open"),$(".catalog-inner-content").toggle(0)})),$((function(){$(".smoothScroll").click((function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var t=$(this.hash);if((t=t.length?t:$("[name="+this.hash.slice(1)+"]")).length)return $("html,body").animate({scrollTop:t.offset().top},1e3),!1}}))}));var bigSlides=$(".main-slider .owl-carousel"),autoPlayTimeoutSec=parseInt(bigSlides.data("autoplay-timeout"));bigSlides.owlCarousel({loop:!0,margin:5,nav:!0,dots:!0,items:1,autoplay:!0,autoplayTimeout:1e3*autoPlayTimeoutSec,navText:['<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M9,0l1.4,1.4L2.8,9l7.6,7.6L9,18.1L0,9C0,9,9.1,0,9,0z"></path></svg>','<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M1.4,18.1L0,16.7l7.6-7.6L0,1.5L1.4,0l9,9.1C10.4,9.1,1.3,18.1,1.4,18.1z"></path></svg>']});var radioButtons=document.querySelectorAll('.delivery-selection input[type="radio"]'),choices=document.querySelectorAll(".delivery-choice");radioButtons.forEach((function(t){t.addEventListener("change",(function(){var t=this;choices.forEach((function(e){e.classList.contains(t.id)||e.classList.contains("delivery-type-"+t.value)?e.style.display="block":e.style.display="none"}))}))})),$(".shopping-cart-item__delete").click((function(){$(this).parent(".shopping-cart-item").remove()})),$(".slider .owl-carousel").owlCarousel({loop:!0,margin:0,items:1,nav:!0}),$(".news-slider .owl-carousel").owlCarousel({loop:!0,margin:0,items:4,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:2},768:{nav:!0,dots:!1,items:3},992:{items:4}}}),$(".action-slider .owl-carousel").owlCarousel({loop:!0,margin:20,nav:!0,dots:!1,items:3,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:2},768:{nav:!0,dots:!1,items:3}}}),$(".partners-slider .owl-carousel").owlCarousel({loop:!0,margin:0,nav:!0,dots:!1,items:5,responsive:{0:{dots:!0,nav:!1,items:1},566:{nav:!1,dots:!0,items:2},768:{nav:!1,dots:!0,items:3},900:{nav:!1,dots:!0,items:4},950:{dots:!1}}}),function(t){t("select.custom-select").each((function(){var e=t(this),a=e.attr("id"),o=e.children("optgroup"),n="",i="";o.length?(o.each((function(){var e=t(this),a=e.attr("label");n+='<li class="optgroup">'+a+"</li>",e.children("option").each((function(){var e=t(this),a=e.attr("value"),o=e.html();"selected"===e.attr("selected")?(i=o,n+='<li class="selected" data-value="'+a+'">'+o+"</li>"):n+='<li data-value="'+a+'">'+o+"</li>"}))})),e.children("option").each((function(){var e=t(this),a=e.attr("value"),o=e.html();"selected"===e.attr("selected")?(i=o,n='<li class="selected" data-value="'+a+'">'+o+"</li>"+n):n='<li data-value="'+a+'">'+o+"</li>"+n}))):e.children("option").each((function(){var e=t(this),a=e.attr("value"),o=e.html();"selected"===e.attr("selected")?(i=o,n+='<li class="selected" data-value="'+a+'">'+o+"</li>"):n+='<li data-value="'+a+'">'+o+"</li>"})),t('<div class="dropdown-container"><div class="dropdown-select entypo-down-open-big"><svg class="icon"><use xlink:href="#tab-arrow"></use></svg><span>'+i+'</span></div><ul class="dropdown-select-ul" data-role="'+a+'">'+n+"</ul></div> \x3c!-- .custom-select-wrapper --\x3e").insertAfter(e)}));var e=t(".dropdown-select"),a=t(".dropdown-select-ul"),o=t(".dropdown-select-ul li");e.on("click",(function(){t(this).parent(".dropdown-container").toggleClass("active")})),a.on("mouseleave",(function(){t(this).parent(".dropdown-container").removeClass("active")})),o.on("click",(function(){var e=t(this);if(!e.hasClass("optgroup")){var a=e.parent("ul"),o=a.siblings(".dropdown-select"),n=e.html(),i=e.attr("data-value"),s="#"+a.attr("data-role");a.parent(".dropdown-container").toggleClass("active"),e.siblings("li").removeClass("selected"),e.addClass("selected"),t(s).val(i),o.children("span").html(n)}}))}(jQuery),$(".tab-content").hide(),$(".tab-content:first").show(),$("ul.tabs li,.product-card__review-link a,.schedule-btn a").click((function(){$(".tab-content").hide();var t=$(this).attr("rel");$("#"+t).fadeIn(),$("ul.tabs li").removeClass("active"),$(this).addClass("active"),$(".tab_drawer_heading").removeClass("d_active"),$(".tab_drawer_heading[rel^='"+t+"']").addClass("d_active")})),$(".tab_drawer_heading").click((function(){var t=$(this).attr("rel"),e=$("#"+t+":hidden"),a=$(this).not(".d_active");$(".tab-content").hide(),e.fadeIn(),$(".tab_drawer_heading").removeClass("d_active"),a.addClass("d_active"),$("ul.tabs li").removeClass("active"),$("ul.tabs li[rel^='"+t+"']").addClass("active")})),$("ul.tabs li").last().addClass("tab_last"),jQuery(document).ready((function(){jQuery(".schedule-btn a").click((function(){jQuery(".schedule-link").toggleClass("active")}))})),jQuery(document).ready((function(){jQuery(".product-card__review-link a").click((function(){jQuery(".review-tab-link").toggleClass("active")}))})),$(document).ready((function(){var t=$("#sync1"),e=$("#sync2");t.owlCarousel({items:1,slideSpeed:2e3,nav:!0,autoplay:!1,dots:!0,loop:!0,responsiveRefreshRate:200,margin:10}).on("changed.owl.carousel",(function(t){var a=t.item.count-1,o=Math.round(t.item.index-t.item.count/2-.5);o<0&&(o=a);o>a&&(o=0);e.find(".owl-item").removeClass("current").eq(o).addClass("current");var n=e.find(".owl-item.active").length-1,i=e.find(".owl-item.active").first().index(),s=e.find(".owl-item.active").last().index();o>s&&e.data("owl.carousel").to(o,100,!0);o<i&&e.data("owl.carousel").to(o-n,100,!0)})),e.on("initialized.owl.carousel",(function(){e.find(".owl-item").eq(0).addClass("current")})).owlCarousel({items:3,dots:!0,nav:!0,margin:10,smartSpeed:200,slideSpeed:500,slideBy:3,responsiveRefreshRate:100}).on("changed.owl.carousel",(function(e){var a=e.item.index;t.data("owl.carousel").to(a,100,!0)})),e.on("click",".owl-item",(function(e){e.preventDefault();var a=$(this).index();t.data("owl.carousel").to(a,300,!0)}))})),function(t){var e="cscrlb";function a(a,o){var n,i,s,r,l,c=a,d=t(a),u=d.find(".cscrlb-content"),h=7/8,m="vert",p="scrollTop",v="height",f="top";function g(e){e.preventDefault();var a=e.pageY;"horiz"===m&&(a=e.pageX),r=a-s.offset()[f],t(document).on("mousemove",w),t(document).on("mouseup",b)}function w(t){t.preventDefault();var e=t.pageY;"horiz"===m&&(e=t.pageX);var a=(e-i.offset()[f]-r)/i[v]()*u[v]();n[p](a)}function b(){t(document).off("mousemove",w),t(document).off("mouseup",b)}function _(t){if(t.target!==s[0]){var e=h*n[v](),a=("vert"===m?t.originalEvent.layerY:t.originalEvent.layerX)<s.position()[f]?n[p]()-e:n[p]()+e;n[p](a)}}function y(t){C()}function $(){var t=u[v](),e=n[p](),a=i[v](),o=a/t,r=Math.round(o*e),l=Math.floor(o*(a+2));a<t?("vert"===m?s.css({top:r,height:l}):s.css({left:r,width:l}),i.show()):i.hide()}function C(){$(),k()}function k(){s.addClass("visible"),o.autoHide&&("number"==typeof l&&window.clearTimeout(l),l=window.setTimeout((function(){s.removeClass("visible"),"number"==typeof l&&window.clearTimeout(l)}),1e3))}function x(){"vert"===m?(n.width(d.width()+S()),n.height(d.height())):(n.width(d.width()),n.height(d.height()+S()),u.height(d.height()))}function S(){var e=t('<div class="scrollbar-width-tester" style="width:50px;height:50px;overflow-y:scroll;position:absolute;top:-200px;left:-200px;"><div style="height:100px;"></div>');t("body").append(e);var a=t(e).innerWidth(),o=t("div",e).innerWidth();return e.remove(),a===o&&navigator.userAgent.toLowerCase().indexOf("firefox")>-1?17:a-o}function T(){x(),$()}return o=t.extend({},t.fn[e].defaults,o),window.onload=function(){u.focus()},d.hasClass("horizontal")&&(m="horiz",p="scrollLeft",v="width",f="left"),d.prepend('<div class="cscrlb-scrollbar"><div class="drag-handle"></div></div>'),i=d.find(".cscrlb-scrollbar"),s=d.find(".drag-handle"),o.wrapContent&&u.wrap('<div class="cscrlb-scroll-content" />'),n=d.find(".cscrlb-scroll-content"),x(),o.autoHide&&d.on("mouseenter",C),s.on("mousedown",g),i.on("mousedown",_),n.on("scroll",y),$(),t(window).on("resize",(function(){T()})),o.autoHide||k(),{option:function(t,e){if(!e)return o[t];o[t]=e},destroy:function(){var t;u.insertBefore(i),i.remove(),n.remove(),u.css({height:d.height()+"px","overflow-y":"scroll"}),void 0!==o[t="onDestroy"]&&o[t].call(c),d.removeData("plugin_"+e)},recalculate:T}}t.fn[e]=function(o){if("string"==typeof arguments[0]){var n,i=arguments[0],s=Array.prototype.slice.call(arguments,1);return this.each((function(){if(!t.data(this,"plugin_"+e)||"function"!=typeof t.data(this,"plugin_"+e)[i])throw new Error(" "+i+" "+e);n=t.data(this,"plugin_"+e)[i].apply(this,s)})),void 0!==n?n:this}if("object"===_typeof(o)||!o)return this.each((function(){t.data(this,"plugin_"+e)||t.data(this,"plugin_"+e,new a(this,o))}))},t.fn[e].defaults={onInit:function(){},onDestroy:function(){},wrapContent:!0,autoHide:!1}}(jQuery),$((function(){$(".cscrlb-scrollable").cscrlb()})),function(){var t=$(".button1"),e=$(".button2"),a=$(".button3"),o=$(".product-item");e.click((function(e){t.removeClass("current"),a.removeClass("current"),$(e.currentTarget).addClass("current"),localStorage.setItem("catalogGrid","wide"),o.removeClass("product-item--line"),o.addClass("product-item--wide")})),a.click((function(a){e.removeClass("current"),t.removeClass("current"),$(a.currentTarget).addClass("current"),localStorage.setItem("catalogGrid","wide"),o.removeClass("product-item--wide"),o.addClass("product-item--line")})),t.click((function(t){e.removeClass("current"),a.removeClass("current"),$(t.currentTarget).addClass("current"),localStorage.setItem("catalogGrid","default"),o.removeClass("product-item--wide"),o.removeClass("product-item--line")}))}();var keypressSliders=$(".range-slider");function _defineProperties(t,e){for(var a=0;a<e.length;a++){var o=e[a];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function _createClass(t,e,a){return e&&_defineProperties(t.prototype,e),a&&_defineProperties(t,a),t}function _createForOfIteratorHelper(t,e){var a;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(a=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length){a&&(t=a);var o=0,n=function(){};return{s:n,n:function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,s=!0,r=!1;return{s:function(){a=t[Symbol.iterator]()},n:function(){var t=a.next();return s=t.done,t},e:function(t){r=!0,i=t},f:function(){try{s||null==a.return||a.return()}finally{if(r)throw i}}}}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var a=Object.prototype.toString.call(t).slice(8,-1);return"Object"===a&&t.constructor&&(a=t.constructor.name),"Map"===a||"Set"===a?Array.from(t):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(t,e):void 0}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var a=0,o=new Array(e);a<e;a++)o[a]=t[a];return o}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}$(keypressSliders).each((function(t,e){var a=$(e).data("name"),o=document.getElementById("id_"+a+"_0"),n=document.getElementById("id_"+a+"_1"),i=[o,n];if(o&&n)var s=parseInt(o.dataset.currentValue),r=parseInt(n.dataset.currentValue),l=parseInt(o.dataset.minValue),c=parseInt(n.dataset.maxValue);var d="";function u(t,a){var o=[null,null];o[t]=a,e.noUiSlider.set(o)}"price_range"==a&&(d=" ₽"),"undefined"!=typeof noUiSlider&&noUiSlider.create(e,{start:[s,r],connect:!0,range:{min:l,max:c},format:wNumb({decimals:0,thousand:" ",postfix:d}),step:1}),null!==e&&e.noUiSlider&&e.noUiSlider.on("update",(function(t,e){i[e].value=t[e]})),i.forEach((function(t,a){null!==t&&(t.addEventListener("change",(function(){u(a,this.value)})),t.addEventListener("keydown",(function(t){var o,n=e.noUiSlider.get(),i=Number(n[a]),s=e.noUiSlider.steps()[a];switch(t.which){case 13:u(a,this.value);break;case 38:!1===(o=s[1])&&(o=1),null!==o&&u(a,i+o);break;case 40:!1===(o=s[0])&&(o=1),null!==o&&u(a,i-o)}})))}))})),$(".acc__toggle:not(.not_toggle)").click((function(t){var e=$(this);e.next().hasClass("show")?(e.next().removeClass("show"),e.removeClass("active"),e.next().slideUp(200)):(e.parent().parent().find("li .inner").removeClass("show"),e.parent().parent().find("li .acc__toggle").removeClass("active"),e.parent().parent().find("li .inner").slideUp(200),e.next().toggleClass("show"),e.toggleClass("active"),e.next().slideToggle(200))}));var breakpoints={xs:0,sm:576,md:768,lg:1024,xl:1280};function throttle(t,e,a){var o=!1;return function(){o||(t.apply(a||this,arguments),o=!0,setTimeout((function(){return o=!1}),e))}}function debounce(t,e,a){var o=!1;return function(){var n=arguments,i=this;o&&clearTimeout(o),o=setTimeout((function(){t.apply(a||i,n)}),e)}}function homeBanner(){var t=$(".home-banner .owl-carousel");t.length&&t.owlCarousel({loop:!0,nav:!0,smartSpeed:500,dots:!0,items:1,lazyLoad:!0,autoplay:!0,autoplayTimeout:1e3*(+t.data("autoplay-timeout")||5),navText:['<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M9,0l1.4,1.4L2.8,9l7.6,7.6L9,18.1L0,9C0,9,9.1,0,9,0z"></path></svg>','<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M1.4,18.1L0,16.7l7.6-7.6L0,1.5L1.4,0l9,9.1C10.4,9.1,1.3,18.1,1.4,18.1z"></path></svg>']})}function header(){var t,e,a=$("header"),o=!1;function n(){a.hasClass("header_landing")||(e=$(window).scrollTop(),t=a.height(),e>t?a.addClass("fixed"):a.removeClass("fixed"))}n(),$(window).scroll((function(){o||(o=!0,setTimeout((function(){n(),o=!1}),100))}))}function gallery(){$.fancybox&&$(".owl-item [data-fancybox]").on("click",(function(){var t=$(this).parents(".owl-carousel").find(".owl-item:not(.cloned) [data-fancybox]");return $.fancybox.open(t,{selector:t,backFocus:!1},t.index(this)),!1}))}function landing_sliders(){var t=$(".landing-slider .owl-carousel");t.length&&t.each((function(){var t,e,a,o,n=$(this);n.is(".landing-slider_1 .owl-carousel")?(t=2,e=2,a=3,o=4):n.is(".landing-slider_2 .owl-carousel")&&(t=1,e=2,a=3,o=4),n.owlCarousel({loop:!0,margin:20,responsive:{0:{items:t,margin:16},576:{items:e},768:{items:a},992:{items:o}}})}))}function toggle(){var t=$(".toggle-section");t.each((function(){var t,e,a=$(this),o=a.children(".toggle-section__trigger"),n=a.children(".toggle-section__content"),i=n.find(".toggle-section__close"),s=!!a.hasClass("active");(o.on("click",(function(){s=!s,r()})),i.on("click",(function(){s=!1,r()})),a.is("[data-hover]"))&&(o.add(n).on("mouseenter",(function(t){isTouch||(e&&clearTimeout(e),s=!0,r())})),o.add(n).on("mouseleave",(function(t){var a;isTouch||(a=$(this).is(o)?500:100,e=setTimeout((function(){s=!1,r()}),a))})));function r(){s?(a.add(n).add(o).addClass("active"),a.is("[data-slide]")&&n.slideDown(250)):(a.add(o).add(n).removeClass("active"),a.is("[data-slide]")&&(t?n.stop().slideUp(250):n.hide(0)))}(a.is("[data-out-hide]")||a.is("[data-hover]"))&&$(document).on("click touchstart",(function(t){var e=$(t.target);e.closest(n).length||e.closest(o).length||!s||(s=!1,r())})),r(),t=!0}))}function up(){var t=$(".js-up");function e(){$(window).scrollTop()>50?t.addClass("visible"):t.removeClass("visible")}var a=!1;$(window).on("scroll",(function(){a||(a=!0,setTimeout((function(){e(),a=!1}),100))})),e(),t.on("click",(function(t){t.preventDefault(),$("html, body").animate({scrollTop:0},500)}))}function chatBlock(){var t=$(".chat-block"),e=$("[data-chat-open]"),a=$("[data-chat-close]");e.on("click",(function(){t.addClass("active")})),a.on("click",(function(){t.removeClass("active")}))}$(document).ready((function(){homeBanner(),header(),gallery(),landing_sliders(),up(),chatBlock(),toggle(),new СustomInteraction({targets:"a, button, [data-custom-interaction], .image-zoom"}),document.querySelectorAll(".slider-constructor").forEach((function(t){new SliderConstructor(t).init()}))}));var СustomInteraction=function t(){var e=this,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};_classCallCheck(this,t),this.targets=a.targets,this.touchendDelay=a.touchendDelay||100;var o=function(t){var a=[];a[0]=t.target!==document?t.target.closest(e.targets):null;for(var o=a[0],n=0;a[0]&&(o=o.parentNode)!==document;)o.matches(a.value)&&(n++,a[n]=o);if("touchstart"==t.type){if(e.touched=!0,e.timeout&&clearTimeout(e.timeout),a[0]){var i,s=_createForOfIteratorHelper(a);try{for(s.s();!(i=s.n()).done;){i.value.setAttribute("data-touch","")}}catch(t){s.e(t)}finally{s.f()}}}else("touchend"==t.type||"contextmenu"==t.type&&e.touched)&&(e.timeout=setTimeout((function(){e.touched=!1}),e.touchendDelay),a[0]&&setTimeout((function(){var t,e=_createForOfIteratorHelper(a);try{for(e.s();!(t=e.n()).done;){t.value.removeAttribute("data-touch")}}catch(t){e.e(t)}finally{e.f()}}),e.touchendDelay));"mouseenter"==t.type&&!e.touched&&a[0]&&a[0]==t.target?a[0].setAttribute("data-hover",""):"mouseleave"==t.type&&!e.touched&&a[0]&&a[0]==t.target&&(a[0].removeAttribute("data-click"),a[0].removeAttribute("data-hover")),"mousedown"==t.type&&!e.touched&&a[0]?a[0].setAttribute("data-click",""):"mouseup"==t.type&&!e.touched&&a[0]&&a[0].removeAttribute("data-click")};document.addEventListener("touchstart",o),document.addEventListener("touchend",o),document.addEventListener("mouseenter",o,!0),document.addEventListener("mouseleave",o,!0),document.addEventListener("mousedown",o),document.addEventListener("mouseup",o),document.addEventListener("contextmenu",o)},SliderConstructor=function(){function t(e){_classCallCheck(this,t),this.element=e}return _createClass(t,[{key:"init",value:function(){var t=this;this.params={},this.params.autoplay=null!==this.element.getAttribute("data-autoplay-timeout"),this.params.autoplayTimeout=+this.element.getAttribute("data-autoplay-timeout")||5e3,this.params.arrows=null===this.element.getAttribute("data-no-arrows"),window.matchMedia("(min-width: 575.98px)").matches?this.params.dots=null===this.element.getAttribute("data-no-dots"):this.params.dots=!0,this.params.adaptiveHeight=null!==this.element.getAttribute("data-adaptive-height"),this.params.centerMode=null!==this.element.getAttribute("data-center"),this.params.count={},this.params.count.xs=+this.element.getAttribute("data-slides")||1,this.params.count.sm=+this.element.getAttribute("data-sm-slides")||this.params.count.xs,this.params.count.md=+this.element.getAttribute("data-md-slides")||this.params.count.sm,this.params.count.lg=+this.element.getAttribute("data-lg-slides")||this.params.count.md,this.params.count.xl=+this.element.getAttribute("data-xl-slides")||this.params.count.lg,this.params.rows={},this.params.rows.xs=+this.element.getAttribute("data-rows")||1,this.params.rows.sm=+this.element.getAttribute("data-sm-rows")||this.params.rows.xs,this.params.rows.md=+this.element.getAttribute("data-md-rows")||this.params.rows.sm,this.params.rows.lg=+this.element.getAttribute("data-lg-rows")||this.params.rows.md,this.params.rows.xl=+this.element.getAttribute("data-xl-rows")||this.params.rows.lg,this.params.state={},Object.keys(breakpoints).forEach((function(e,a){var o=0!==a?"-"+e+"-":"-",n=t.element.getAttribute("data".concat(o,"mounted"));if(null===n&&0!==a){var i=Object.keys(breakpoints)[a-1];t.params.state[e]=t.params.state[i]}else t.params.state[e]="true"===n||0===a&&"false"!==n})),this.slides=[],this.containsMobileHiddenSlides=!1,this.element.childNodes.forEach((function(e){e.tagName&&(null!==e.getAttribute("data-slide-mobile-hidden")&&(t.containsMobileHiddenSlides=!0),t.slides.push(e))})),this.createIcons(),this.checkSliderState(),this.checkSliderStateDebounced=debounce(this.checkSliderState,500,this),window.addEventListener("resize",this.checkSliderStateDebounced)}},{key:"createIcons",value:function(){var t='\n      <svg viewBox="0 0 11 19" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n        <path d="M1.4 18.1L0 16.7L7.6 9.10001L0 1.5L1.4 0L10.4 9.10001C10.4 9.10001 1.3 18.1 1.4 18.1Z"/>\n      </svg>\n    ',e='\n      <svg viewBox="0 0 11 19" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n        <path d="M9.00039 7.24792e-05L10.4004 1.40007L2.80039 9.00009L10.4004 16.6001L9.00039 18.1001L0.000391006 9.00009C0.000391006 9.00009 9.10039 7.24792e-05 9.00039 7.24792e-05Z"/>\n      </svg>\n    ',a="custom-icon-left",o="custom-icon-right";this.element.querySelectorAll(".".concat(a,", .").concat(o)).forEach((function(n){var i=n.classList.contains(a),s=n.classList.contains(o);i?(n.classList.remove(a),t=n.outerHTML):s&&(n.classList.remove(o),e=n.outerHTML),n.remove()})),this.nextArrow='<button type="button" class="button button_style-1 slick-next">'.concat(t,"</button>"),this.prevArrow='<button type="button" class="button button_style-1 slick-prev">'.concat(e,"</button>")}},{key:"checkSliderState",value:function(){if(!this.mounted||this.savedWindowWidth!==window.innerWidth){var t;for(var e in this.savedWindowWidth=window.innerWidth,this.mounted&&this.unmount(),breakpoints)window.innerWidth>=breakpoints[e]&&(t=this.params.state[e]);t?(this.element.classList.remove("visible"),this.containsMobileHiddenSlides&&this.checkSlidesVisibility(),this.mount()):this.element.classList.add("visible")}}},{key:"checkSlidesVisibility",value:function(){var t=this;this.slides.forEach((function(t){t.remove()})),this.slides.forEach((function(e){var a=null!==e.getAttribute("data-slide-mobile-hidden"),o=window.innerWidth<breakpoints.sm;a&&o||t.element.insertAdjacentElement("beforeend",e)}))}},{key:"mount",value:function(){$(this.element).slick({autoplay:this.params.autoplay,autoplaySpeed:this.params.autoplayTimeout,mobileFirst:!0,slidesToShow:this.params.count.xs,slidesToScroll:this.params.count.xs,rows:this.params.rows.xs,prevArrow:this.prevArrow,nextArrow:this.nextArrow,arrows:this.params.arrows,adaptiveHeight:this.params.adaptiveHeight,dots:this.params.dots,centerMode:this.params.centerMode,accessibility:!1,responsive:[{breakpoint:breakpoints.sm-1,settings:{slidesToShow:this.params.count.sm,slidesToScroll:this.params.count.sm,rows:this.params.rows.sm}},{breakpoint:breakpoints.md-1,settings:{slidesToShow:this.params.count.md,slidesToScroll:this.params.count.md,rows:this.params.rows.md}},{breakpoint:breakpoints.lg-1,settings:{slidesToShow:this.params.count.lg,slidesToScroll:this.params.count.lg,rows:this.params.rows.lg}},{breakpoint:breakpoints.xl-1,settings:{slidesToShow:this.params.count.xl,slidesToScroll:this.params.count.xl,rows:this.params.rows.xl}}]}),this.mounted=!0}},{key:"unmount",value:function(){$(this.element).slick("unslick"),this.mounted=!1}}]),t}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiX3R5cGVvZiIsIm9iaiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsImNsaWNrIiwidGhpcyIsInBhcmVudCIsImZpbmQiLCJzbGlkZVRvZ2dsZSIsInRvZ2dsZUNsYXNzIiwib24iLCJldmVudCIsInRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiaWQiLCJhdHRyIiwiY29uY2F0IiwidG91Y2hzdGFydFgiLCJ0b3VjaGVuZFgiLCJjaGFuZ2VkVG91Y2hlcyIsInNjcmVlblgiLCJpbWciLCJOdW1iZXIiLCJsZW5ndGgiLCJwcmV2ZW50RGVmYXVsdCIsInRvZ2dsZSIsIndpbmRvdyIsImUiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJyZXBsYWNlIiwiaG9zdG5hbWUiLCJoYXNoIiwic2xpY2UiLCJhbmltYXRlIiwic2Nyb2xsVG9wIiwib2Zmc2V0IiwidG9wIiwiYmlnU2xpZGVzIiwiYXV0b1BsYXlUaW1lb3V0U2VjIiwicGFyc2VJbnQiLCJkYXRhIiwib3dsQ2Fyb3VzZWwiLCJsb29wIiwibWFyZ2luIiwibmF2IiwiZG90cyIsIml0ZW1zIiwiYXV0b3BsYXkiLCJhdXRvcGxheVRpbWVvdXQiLCJuYXZUZXh0IiwicmFkaW9CdXR0b25zIiwicXVlcnlTZWxlY3RvckFsbCIsImNob2ljZXMiLCJmb3JFYWNoIiwiYnRuIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsaWNrZWQiLCJjaG9pY2UiLCJ2YWx1ZSIsInN0eWxlIiwiZGlzcGxheSIsInJlbW92ZSIsInJlc3BvbnNpdmUiLCJlYWNoIiwidGhhdCIsImxpc3RJRCIsImdyb3VwcyIsImNoaWxkcmVuIiwidGhlT3B0aW9ucyIsInN0YXJ0aW5nT3B0aW9uIiwiY3VyR3JvdXAiLCJjdXJOYW1lIiwiY3VyT3B0IiwiY3VyVmFsIiwiY3VySHRtbCIsImh0bWwiLCJpbnNlcnRBZnRlciIsInNlbGVjdGRkIiwic2VsZWN0dWwiLCJzZWxlY3RsaSIsImhhc0NsYXNzIiwicGFyZW50VWwiLCJ0aGlzZGQiLCJzaWJsaW5ncyIsImxpaHRtbCIsImxpdmFsdWUiLCJvcmlnaW5hbFNlbGVjdCIsInZhbCIsImpRdWVyeSIsImhpZGUiLCJzaG93IiwiYWN0aXZlVGFiIiwiZmFkZUluIiwiZF9hY3RpdmVUYWIiLCJhY3RpdmVUYWJCbG9jayIsIiR0aGlzQWN0aXZlIiwibm90IiwibGFzdCIsInN5bmMxIiwic3luYzIiLCJzbGlkZVNwZWVkIiwicmVzcG9uc2l2ZVJlZnJlc2hSYXRlIiwiZWwiLCJjb3VudCIsIml0ZW0iLCJjdXJyZW50IiwiTWF0aCIsInJvdW5kIiwiaW5kZXgiLCJlcSIsIm9uc2NyZWVuIiwic3RhcnQiLCJmaXJzdCIsImVuZCIsInRvIiwic21hcnRTcGVlZCIsInNsaWRlQnkiLCJudW1iZXIiLCJwbHVnaW5OYW1lIiwiUGx1Z2luIiwiZWxlbWVudCIsIm9wdGlvbnMiLCIkc2Nyb2xsQ29udGVudEVsIiwiJHNjcm9sbGJhckVsIiwiJGRyYWdIYW5kbGVFbCIsImRyYWdPZmZzZXQiLCJmbGFzaFRpbWVvdXQiLCIkZWwiLCIkY29udGVudEVsIiwicGFnZUp1bXBNdWx0cCIsInNjcm9sbERpcmVjdGlvbiIsInNjcm9sbE9mZnNldEF0dHIiLCJzaXplQXR0ciIsIm9mZnNldEF0dHIiLCJzdGFydERyYWciLCJldmVudE9mZnNldCIsInBhZ2VZIiwicGFnZVgiLCJkcmFnIiwiZW5kRHJhZyIsInNjcm9sbFBvcyIsIm9mZiIsImp1bXBTY3JvbGwiLCJqdW1wQW10Iiwib3JpZ2luYWxFdmVudCIsImxheWVyWSIsImxheWVyWCIsInBvc2l0aW9uIiwib25TY3JvbGxlZCIsImZsYXNoU2Nyb2xsYmFyIiwicmVzaXplU2Nyb2xsYmFyIiwiY29udGVudFNpemUiLCJzY3JvbGxPZmZzZXQiLCJzY3JvbGxiYXJTaXplIiwic2Nyb2xsYmFyUmF0aW8iLCJoYW5kbGVPZmZzZXQiLCJoYW5kbGVTaXplIiwiZmxvb3IiLCJjc3MiLCJoZWlnaHQiLCJsZWZ0Iiwid2lkdGgiLCJzaG93U2Nyb2xsYmFyIiwiYXV0b0hpZGUiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwicmVzaXplU2Nyb2xsQ29udGVudCIsInNjcm9sbGJhcldpZHRoIiwidGVtcEVsIiwiYXBwZW5kIiwiaW5uZXJXaWR0aCIsIndpZHRoTWludXNTY3JvbGxiYXJzIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidG9Mb3dlckNhc2UiLCJpbmRleE9mIiwicmVjYWxjdWxhdGUiLCJleHRlbmQiLCJmbiIsImRlZmF1bHRzIiwib25sb2FkIiwiZm9jdXMiLCJwcmVwZW5kIiwid3JhcENvbnRlbnQiLCJ3cmFwIiwib3B0aW9uIiwia2V5IiwiZGVzdHJveSIsImhvb2tOYW1lIiwiaW5zZXJ0QmVmb3JlIiwidW5kZWZpbmVkIiwiY2FsbCIsInJlbW92ZURhdGEiLCJhcmd1bWVudHMiLCJyZXR1cm5WYWwiLCJtZXRob2ROYW1lIiwiYXJncyIsIkFycmF5IiwiRXJyb3IiLCJhcHBseSIsIm9uSW5pdCIsIm9uRGVzdHJveSIsImNzY3JsYiIsImJ1dHRvbkRlZmF1bHRWaWV3IiwiYnV0dG9uV2lkZVZpZXciLCJidXR0b25MaW5lVmlldyIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJrZXlwcmVzc1NsaWRlcnMiLCJfZGVmaW5lUHJvcGVydGllcyIsInByb3BzIiwiaSIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsIl9jcmVhdGVDbGFzcyIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJvIiwiYWxsb3dBcnJheUxpa2UiLCJpdCIsImlzQXJyYXkiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJGIiwicyIsIm4iLCJkb25lIiwiX2UiLCJmIiwiVHlwZUVycm9yIiwiZXJyIiwibm9ybWFsQ29tcGxldGlvbiIsImRpZEVyciIsInN0ZXAiLCJuZXh0IiwiX2UyIiwicmV0dXJuIiwibWluTGVuIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJ0b1N0cmluZyIsIm5hbWUiLCJmcm9tIiwidGVzdCIsImFyciIsImxlbiIsImFycjIiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsImtleXByZXNzU2xpZGVyIiwiZmllbGRfbmFtZSIsImlucHV0MCIsImdldEVsZW1lbnRCeUlkIiwiaW5wdXQxIiwiaW5wdXRzIiwic3RhcnRWYWwiLCJkYXRhc2V0IiwiY3VycmVudFZhbHVlIiwiZW5kVmFsIiwibWluVmFsIiwibWluVmFsdWUiLCJtYXhWYWwiLCJtYXhWYWx1ZSIsInBvc3RmaXgiLCJzZXRTbGlkZXJIYW5kbGUiLCJyIiwibm9VaVNsaWRlciIsInNldCIsImNyZWF0ZSIsImNvbm5lY3QiLCJyYW5nZSIsIm1pbiIsIm1heCIsImZvcm1hdCIsIndOdW1iIiwiZGVjaW1hbHMiLCJ0aG91c2FuZCIsInZhbHVlcyIsImhhbmRsZSIsImlucHV0IiwiZ2V0Iiwic3RlcHMiLCJ3aGljaCIsIiR0aGlzIiwic2xpZGVVcCIsImJyZWFrcG9pbnRzIiwieHMiLCJzbSIsIm1kIiwibGciLCJ4bCIsInRocm90dGxlIiwiZnVuYyIsImludGVydmFsIiwiY29udGV4dCIsImlzQ29vbGRvd24iLCJkZWJvdW5jZSIsInRpbWVvdXQiLCJfYXJndW1lbnRzIiwiX3RoaXMiLCJob21lQmFubmVyIiwiJHNsaWRlciIsImxhenlMb2FkIiwiaGVhZGVyIiwic2Nyb2xsIiwiJGhlYWRlciIsImlzVGhyb3R0bGVkIiwiY2hlY2siLCJnYWxsZXJ5IiwiZmFuY3lib3giLCIkc2VsZWN0b3IiLCJwYXJlbnRzIiwib3BlbiIsInNlbGVjdG9yIiwiYmFja0ZvY3VzIiwibGFuZGluZ19zbGlkZXJzIiwiJHNsaWRlcnMiLCJjb3VudDEiLCJjb3VudDIiLCJjb3VudDMiLCJjb3VudDQiLCJpcyIsIiRzZWN0aW9uIiwiaW5pdGlhbGl6ZWQiLCIkdG9nZ2xlIiwiJGNvbnRlbnQiLCIkY2xvc2UiLCJzdGF0ZSIsImFkZCIsImlzVG91Y2giLCJkZWxheSIsInNsaWRlRG93biIsInN0b3AiLCIkdGFyZ2V0IiwiY2xvc2VzdCIsInVwIiwiJGJ0biIsImNoYXRCbG9jayIsIiRibG9jayIsIiRvcGVuIiwi0KF1c3RvbUludGVyYWN0aW9uIiwidGFyZ2V0cyIsIlNsaWRlckNvbnN0cnVjdG9yIiwiaW5pdCIsIl90aGlzMiIsInRvdWNoZW5kRGVsYXkiLCJldmVudHMiLCIkdGFyZ2V0cyIsIiRlbGVtZW50IiwicGFyZW50Tm9kZSIsIm1hdGNoZXMiLCJ0eXBlIiwidG91Y2hlZCIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwic2V0QXR0cmlidXRlIiwiX3N0ZXAyIiwiX2l0ZXJhdG9yMiIsInJlbW92ZUF0dHJpYnV0ZSIsIl90aGlzMyIsInBhcmFtcyIsImdldEF0dHJpYnV0ZSIsImFycm93cyIsIm1hdGNoTWVkaWEiLCJhZGFwdGl2ZUhlaWdodCIsImNlbnRlck1vZGUiLCJyb3dzIiwia2V5cyIsImJyZWFrcG9pbnQiLCJwcmV2S2V5Iiwic2xpZGVzIiwiY29udGFpbnNNb2JpbGVIaWRkZW5TbGlkZXMiLCJjaGlsZE5vZGVzIiwic2xpZGUiLCJ0YWdOYW1lIiwicHVzaCIsImNyZWF0ZUljb25zIiwiY2hlY2tTbGlkZXJTdGF0ZSIsImNoZWNrU2xpZGVyU3RhdGVEZWJvdW5jZWQiLCJsZWZ0SWNvbiIsInJpZ2h0SWNvbiIsImxlZnRJY29uQ2xhc3MiLCJyaWdodEljb25DbGFzcyIsImljb24iLCJpc0xlZnRJY29uIiwiaXNSaWdodEljb24iLCJvdXRlckhUTUwiLCJuZXh0QXJyb3ciLCJwcmV2QXJyb3ciLCJtb3VudGVkIiwic2F2ZWRXaW5kb3dXaWR0aCIsInVubW91bnQiLCJjaGVja1NsaWRlc1Zpc2liaWxpdHkiLCJtb3VudCIsIl90aGlzNCIsInNob3VsZEJlSGlkZGVuIiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50Iiwic2xpY2siLCJhdXRvcGxheVNwZWVkIiwibW9iaWxlRmlyc3QiLCJzbGlkZXNUb1Nob3ciLCJzbGlkZXNUb1Njcm9sbCIsImFjY2Vzc2liaWxpdHkiLCJzZXR0aW5ncyJdLCJtYXBwaW5ncyI6IkFBQUEsYUFFQSxTQUFTQSxRQUFRQyxHQWdCZixPQWJFRCxRQURvQixtQkFBWEUsUUFBb0QsaUJBQXBCQSxPQUFPQyxTQUN0QyxTQUFpQkYsR0FDekIsY0FBY0EsQ0FDaEIsRUFFVSxTQUFpQkEsR0FDekIsT0FBT0EsR0FDYSxtQkFBWEMsUUFDUEQsRUFBSUcsY0FBZ0JGLFFBQ3BCRCxJQUFRQyxPQUFPRyxVQUNiLGdCQUNPSixDQUNiLEVBRUtELFFBQVFDLEVBQ2pCLENBRUFLLEVBQUVDLFVBQVVDLE9BQU0sV0FDaEJGLEVBQUUsc0NBQXNDRyxPQUFNLFdBRzVDLE9BRkFILEVBQUVJLE1BQU1DLFNBQVNDLEtBQUssWUFBWUMsY0FDbENQLEVBQUVJLE1BQU1DLFNBQVNHLFlBQVksV0FDdEIsQ0FDVCxJQUVBUixFQUFFLGlCQUFpQlMsR0FBRyxTQUFTLFNBQUNDLEdBQzlCLElBQU1DLEVBQVNYLEVBQUVVLEVBQU1FLGVBQ2pCUCxFQUFTTSxFQUFPTixTQUN0QkEsRUFBT0MsS0FBSywyQkFBMkJPLFlBQVksVUFDbkRSLEVBQU9DLEtBQUssbUJBQW1CTyxZQUFZLFVBQzNDRixFQUFPRyxTQUFTLFNBQ2xCLElBRUFkLEVBQUUsbUJBQW1CUyxHQUFHLFNBQVMsU0FBQ0MsR0FDaEMsSUFBTUMsRUFBU1gsRUFBRVUsRUFBTUUsZUFDakJQLEVBQVNNLEVBQU9OLFNBQ3RCQSxFQUFPQyxLQUFLLDJCQUEyQlEsU0FBUyxVQUNoRFQsRUFBT0MsS0FBSyxpQkFBaUJPLFlBQVksVUFDekNGLEVBQU9HLFNBQVMsU0FDbEIsSUFFQWQsRUFBRSxtQ0FBbUNTLEdBQUcsYUFBYSxTQUFDQyxHQUNwRCxJQUFNQyxFQUFTWCxFQUFFVSxFQUFNRSxlQUNqQkcsRUFBS0osRUFBT0ssS0FB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QUFPclEsTUFBTTZMLEdBQ2hDaUgsZUFBZ0JyWixLQUFLNFcsT0FBT3JRLE1BQU02TCxHQUNsQzhFLEtBQU1sWCxLQUFLNFcsT0FBT00sS0FBSzlFLEtBRzNCLENBQ0VnRixXQUFZbkYsWUFBWUksR0FBSyxFQUM3QmtILFNBQVUsQ0FDUkgsYUFBY3BaLEtBQUs0VyxPQUFPclEsTUFBTThMLEdBQ2hDZ0gsZUFBZ0JyWixLQUFLNFcsT0FBT3JRLE1BQU04TCxHQUNsQzZFLEtBQU1sWCxLQUFLNFcsT0FBT00sS0FBSzdFLEtBRzNCLENBQ0UrRSxXQUFZbkYsWUFBWUssR0FBSyxFQUM3QmlILFNBQVUsQ0FDUkgsYUFBY3BaLEtBQUs0VyxPQUFPclEsTUFBTStMLEdBQ2hDK0csZUFBZ0JyWixLQUFLNFcsT0FBT3JRLE1BQU0rTCxHQUNsQzRFLEtBQU1sWCxLQUFLNFcsT0FBT00sS0FBSzVFLFFBSy9CdFMsS0FBS3lZLFNBQVUsQ0FDakIsR0FFRixDQUNFL00sSUFBSyxVQUNMaEksTUFBTyxXQUNMOUQsRUFBRUksS0FBS3dILFNBQVN5UixNQUFNLFdBQ3RCalosS0FBS3lZLFNBQVUsQ0FDakIsS0FJRy9DLENBQ1QsQ0E5TnVDIiwiZmlsZSI6InNjcmlwdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XHJcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xyXG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xyXG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XHJcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xyXG4gICAgfTtcclxuICB9IGVsc2Uge1xyXG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XHJcbiAgICAgIHJldHVybiBvYmogJiZcclxuICAgICAgICB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiZcclxuICAgICAgICBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJlxyXG4gICAgICAgIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZVxyXG4gICAgICAgID8gXCJzeW1ib2xcIlxyXG4gICAgICAgIDogdHlwZW9mIG9iajtcclxuICAgIH07XHJcbiAgfVxyXG4gIHJldHVybiBfdHlwZW9mKG9iaik7XHJcbn1cclxuXHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAkKFwiLmNhdGFsb2ctZmlsdGVyLWFjY29yZGlvbiBhLm9wZW5lclwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAkKHRoaXMpLnBhcmVudCgpLmZpbmQoXCJ1bDpmaXJzdFwiKS5zbGlkZVRvZ2dsZSgpO1xyXG4gICAgJCh0aGlzKS5wYXJlbnQoKS50b2dnbGVDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9KTtcclxuXHJcbiAgJChcIltkYXRhLWV4cGFuZF1cIikub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcclxuICAgIGNvbnN0IHRhcmdldCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XHJcbiAgICBjb25zdCBwYXJlbnQgPSB0YXJnZXQucGFyZW50KCk7XHJcbiAgICBwYXJlbnQuZmluZChcIltkYXRhLWNvbGxhcHNlLWNvbnRlbnRdXCIpLnJlbW92ZUNsYXNzKFwiZC1ub25lXCIpO1xyXG4gICAgcGFyZW50LmZpbmQoXCJbZGF0YS1jb2xsYXBzZV1cIikucmVtb3ZlQ2xhc3MoXCJkLW5vbmVcIik7XHJcbiAgICB0YXJnZXQuYWRkQ2xhc3MoXCJkLW5vbmVcIik7XHJcbiAgfSk7XHJcblxyXG4gICQoXCJbZGF0YS1jb2xsYXBzZV1cIikub24oXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcclxuICAgIGNvbnN0IHRhcmdldCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XHJcbiAgICBjb25zdCBwYXJlbnQgPSB0YXJnZXQucGFyZW50KCk7XHJcbiAgICBwYXJlbnQuZmluZChcIltkYXRhLWNvbGxhcHNlLWNvbnRlbnRdXCIpLmFkZENsYXNzKFwiZC1ub25lXCIpO1xyXG4gICAgcGFyZW50LmZpbmQoXCJbZGF0YS1leHBhbmRdXCIpLnJlbW92ZUNsYXNzKFwiZC1ub25lXCIpO1xyXG4gICAgdGFyZ2V0LmFkZENsYXNzKFwiZC1ub25lXCIpO1xyXG4gIH0pO1xyXG5cclxuICAkKFwiLnByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX3NlY3RvclwiKS5vbihcIm1vdXNlbW92ZVwiLCAoZXZlbnQpID0+IHtcclxuICAgIGNvbnN0IHRhcmdldCA9ICQoZXZlbnQuY3VycmVudFRhcmdldCk7XHJcbiAgICBjb25zdCBpZCA9IHRhcmdldC5hdHRyKFwiZGF0YS1zZWN0b3JcIik7XHJcbiAgICBjb25zdCBwYXJlbnQgPSB0YXJnZXQucGFyZW50KCkucGFyZW50KCk7XHJcbiAgICBwYXJlbnRcclxuICAgIC5maW5kKFwiLnByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX2ltYWdlX2FjdGl2ZVwiKVxyXG4gICAgLnJlbW92ZUNsYXNzKFwicHJvZHVjdC1jYXJkLXNsaWRlc2hvd19faW1hZ2VfYWN0aXZlXCIpO1xyXG4gICAgcGFyZW50XHJcbiAgICAuZmluZChcIi5wcm9kdWN0LWNhcmQtc2xpZGVzaG93X19kb3RfYWN0aXZlXCIpXHJcbiAgICAucmVtb3ZlQ2xhc3MoXCJwcm9kdWN0LWNhcmQtc2xpZGVzaG93X19kb3RfYWN0aXZlXCIpO1xyXG4gICAgcGFyZW50LmZpbmQoYFtkYXRhLXNlY3Rvci1pbWFnZT1cIiR7aWR9XCJdYCkuYWRkQ2xhc3MoXCJwcm9kdWN0LWNhcmQtc2xpZGVzaG93X19pbWFnZV9hY3RpdmVcIik7XHJcbiAgICBwYXJlbnQuZmluZChgW2RhdGEtc2VjdG9yLWRvdD1cIiR7aWR9XCJdYCkuYWRkQ2xhc3MoXCJwcm9kdWN0LWNhcmQtc2xpZGVzaG93X19kb3RfYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG5cclxuICBsZXQgdG91Y2hzdGFydFggPSAwO1xyXG4gIGxldCB0b3VjaGVuZFggPSAwO1xyXG5cclxuICAkKFwiLnByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX3NlY3RvcnNcIikub24oXCJ0b3VjaHN0YXJ0XCIsIChldmVudCkgPT4ge1xyXG4gICAgdG91Y2hzdGFydFggPSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5zY3JlZW5YO1xyXG4gIH0pO1xyXG5cclxuICAkKFwiLnByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX3NlY3RvcnNcIikub24oXCJ0b3VjaGVuZFwiLCAoZXZlbnQpID0+IHtcclxuICAgIHRvdWNoZW5kWCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLnNjcmVlblg7XHJcbiAgICBjb25zdCBwYXJlbnQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLnBhcmVudCgpO1xyXG4gICAgY29uc3QgaW1nID0gcGFyZW50LmZpbmQoXCIucHJvZHVjdC1jYXJkLXNsaWRlc2hvd19faW1hZ2VfYWN0aXZlXCIpO1xyXG4gICAgY29uc3QgaWQgPSBOdW1iZXIoaW1nLmF0dHIoXCJkYXRhLXNlY3Rvci1pbWFnZVwiKSk7XHJcbiAgICBjb25zdCBsZW5ndGggPSBwYXJlbnQuZmluZChcIi5wcm9kdWN0LWNhcmQtc2xpZGVzaG93X19pbWFnZVwiKS5sZW5ndGg7XHJcblxyXG4gICAgaWYgKHRvdWNoZW5kWCA8IHRvdWNoc3RhcnRYKSB7XHJcbiAgICAgIHBhcmVudFxyXG4gICAgICAuZmluZChcIi5wcm9kdWN0LWNhcmQtc2xpZGVzaG93X19pbWFnZV9hY3RpdmVcIilcclxuICAgICAgLnJlbW92ZUNsYXNzKFwicHJvZHVjdC1jYXJkLXNsaWRlc2hvd19faW1hZ2VfYWN0aXZlXCIpO1xyXG4gICAgICBwYXJlbnRcclxuICAgICAgLmZpbmQoXCIucHJvZHVjdC1jYXJkLXNsaWRlc2hvd19fZG90X2FjdGl2ZVwiKVxyXG4gICAgICAucmVtb3ZlQ2xhc3MoXCJwcm9kdWN0LWNhcmQtc2xpZGVzaG93X19kb3RfYWN0aXZlXCIpO1xyXG4gICAgICBpZiAoaWQgPj0gbGVuZ3RoKSB7XHJcbiAgICAgICAgcGFyZW50LmZpbmQoYFtkYXRhLXNlY3Rvci1pbWFnZT1cIiR7MX1cIl1gKS5hZGRDbGFzcyhcInByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX2ltYWdlX2FjdGl2ZVwiKTtcclxuICAgICAgICBwYXJlbnQuZmluZChgW2RhdGEtc2VjdG9yLWRvdD1cIiR7MX1cIl1gKS5hZGRDbGFzcyhcInByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX2RvdF9hY3RpdmVcIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIHBhcmVudFxyXG4gICAgICAuZmluZChgW2RhdGEtc2VjdG9yLWltYWdlPVwiJHtpZCArIDF9XCJdYClcclxuICAgICAgLmFkZENsYXNzKFwicHJvZHVjdC1jYXJkLXNsaWRlc2hvd19faW1hZ2VfYWN0aXZlXCIpO1xyXG4gICAgICBwYXJlbnQuZmluZChgW2RhdGEtc2VjdG9yLWRvdD1cIiR7aWQgKyAxfVwiXWApLmFkZENsYXNzKFwicHJvZHVjdC1jYXJkLXNsaWRlc2hvd19fZG90X2FjdGl2ZVwiKTtcclxuICAgIH1cclxuICAgIGlmICh0b3VjaGVuZFggPiB0b3VjaHN0YXJ0WCkge1xyXG4gICAgICBwYXJlbnRcclxuICAgICAgLmZpbmQoXCIucHJvZHVjdC1jYXJkLXNsaWRlc2hvd19faW1hZ2VfYWN0aXZlXCIpXHJcbiAgICAgIC5yZW1vdmVDbGFzcyhcInByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX2ltYWdlX2FjdGl2ZVwiKTtcclxuICAgICAgcGFyZW50XHJcbiAgICAgIC5maW5kKFwiLnByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX2RvdF9hY3RpdmVcIilcclxuICAgICAgLnJlbW92ZUNsYXNzKFwicHJvZHVjdC1jYXJkLXNsaWRlc2hvd19fZG90X2FjdGl2ZVwiKTtcclxuICAgICAgaWYgKGlkIDw9IDEpIHtcclxuICAgICAgICBwYXJlbnRcclxuICAgICAgICAuZmluZChgW2RhdGEtc2VjdG9yLWltYWdlPVwiJHtsZW5ndGh9XCJdYClcclxuICAgICAgICAuYWRkQ2xhc3MoXCJwcm9kdWN0LWNhcmQtc2xpZGVzaG93X19pbWFnZV9hY3RpdmVcIik7XHJcbiAgICAgICAgcGFyZW50LmZpbmQoYFtkYXRhLXNlY3Rvci1kb3Q9XCIke2xlbmd0aH1cIl1gKS5hZGRDbGFzcyhcInByb2R1Y3QtY2FyZC1zbGlkZXNob3dfX2RvdF9hY3RpdmVcIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIHBhcmVudFxyXG4gICAgICAuZmluZChgW2RhdGEtc2VjdG9yLWltYWdlPVwiJHtpZCAtIDF9XCJdYClcclxuICAgICAgLmFkZENsYXNzKFwicHJvZHVjdC1jYXJkLXNsaWRlc2hvd19faW1hZ2VfYWN0aXZlXCIpO1xyXG4gICAgICBwYXJlbnQuZmluZChgW2RhdGEtc2VjdG9yLWRvdD1cIiR7aWQgLSAxfVwiXWApLmFkZENsYXNzKFwicHJvZHVjdC1jYXJkLXNsaWRlc2hvd19fZG90X2FjdGl2ZVwiKTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcbiQoXCIubGlrZS1idG5cIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICQodGhpcykudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbn0pO1xyXG4kKFwiLmNpdHktc2VsZWN0aW9uX19saW5rXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAkKFwiLmNpdHktc2VsZWN0aW9uX19saXN0XCIpLnRvZ2dsZSgwKTtcclxufSk7XHJcbiQod2luZG93KS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gIGlmICghZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2l0eS1zZWxlY3Rpb25fX2xpbmtcIikpIHtcclxuICAgICQoXCIuY2l0eS1zZWxlY3Rpb25fX2xpc3RcIikudG9nZ2xlKGZhbHNlKTtcclxuICB9XHJcbn0pO1xyXG4kKFwiLmJ1cmdlci1tZW51XCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAkKFwiLm1vYmlsZS1tZW51XCIpLnRvZ2dsZSgwKTtcclxufSk7XHJcbiQoXCIuY2F0YWxvZy1pbm5lci1idG5cIikuY2xpY2soZnVuY3Rpb24gKGUpIHtcclxuICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgJCh0aGlzKS50b2dnbGVDbGFzcyhcIm9wZW5cIik7XHJcbiAgJChcIi5jYXRhbG9nLWhlYWRlci1jb250ZW50XCIpLnRvZ2dsZSgwKTtcclxufSk7XHJcbiQoXCIuY2F0YWxvZy1pbm5lci1idG4sLmNhdGFsb2ctbWVudV9faGVhZCBhXCIpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICQoXCIuY2F0YWxvZy1tZW51XCIpLnRvZ2dsZSgwKTtcclxufSk7XHJcbiQoXCIuYnVyZ2VyLWNhdGFsb2dcIikuY2xpY2soZnVuY3Rpb24gKGUpIHtcclxuICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgJCh0aGlzKS50b2dnbGVDbGFzcyhcIm9wZW5cIik7XHJcbn0pO1xyXG4kKFwiLnNoYXJlLWJ0blwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgJChcIi5zaGFyZS1ibG9ja19fc2hvd1wiKS50b2dnbGUoMCk7XHJcbn0pO1xyXG4kKFwiLmNsb3NlLXBhbmVsXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAkKFwiLmJvdHRvbS1wYW5lbFwiKS50b2dnbGUoMCk7XHJcbn0pO1xyXG4kKFwiLmZpbHRlci1idG4sIC5jbG9zZS1idG4tMlwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgJChcIi5jYXRhbG9nLWZpbHRlclwiKS50b2dnbGUoMCk7XHJcbn0pO1xyXG4kKFwiLmNhdGFsb2ctc2lkZV9fdGl0bGVcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICQoXCIuY2F0YWxvZy1zaWRlX19jb250ZW50XCIpLnRvZ2dsZSgwKTtcclxuICAkKFwiLmNhdGFsb2ctc2lkZV9fY29udGVudC1hY2NvcmRlb25cIikudG9nZ2xlKDApO1xyXG59KTtcclxuJChcIi5jYXRhbG9nLW9wZW5lZFwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgJChcIi5jYXRhbG9nLW9wZW5lZCAuc3VibWVudVwiKS50b2dnbGUoMCk7XHJcbn0pO1xyXG4kKFwiLmJ1cmdlci1tZW51XCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAkKHRoaXMpLnRvZ2dsZUNsYXNzKFwibWVudS1vblwiKTtcclxufSk7XHJcbiQoXCIuY2F0YWxvZy1pbm5lclwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgJCh0aGlzKS50b2dnbGVDbGFzcyhcIm9wZW5cIik7XHJcbiAgJChcIi5jYXRhbG9nLWlubmVyLWNvbnRlbnRcIikudG9nZ2xlKDApO1xyXG59KTtcclxuXHJcbiQoZnVuY3Rpb24gKCkge1xyXG4gIC8vIFRoaXMgd2lsbCBzZWxlY3QgZXZlcnl0aGluZyB3aXRoIHRoZSBjbGFzcyBzbW9vdGhTY3JvbGxcclxuICAvLyBUaGlzIHNob3VsZCBwcmV2ZW50IHByb2JsZW1zIHdpdGggY2Fyb3VzZWwsIHNjcm9sbHNweSwgZXRjLi4uXHJcbiAgJChcIi5zbW9vdGhTY3JvbGxcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKFxyXG4gICAgICBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9eXFwvLywgXCJcIikgPT0gdGhpcy5wYXRobmFtZS5yZXBsYWNlKC9eXFwvLywgXCJcIikgJiZcclxuICAgICAgbG9jYXRpb24uaG9zdG5hbWUgPT0gdGhpcy5ob3N0bmFtZVxyXG4gICAgKSB7XHJcbiAgICAgIHZhciB0YXJnZXQgPSAkKHRoaXMuaGFzaCk7XHJcbiAgICAgIHRhcmdldCA9IHRhcmdldC5sZW5ndGggPyB0YXJnZXQgOiAkKFwiW25hbWU9XCIgKyB0aGlzLmhhc2guc2xpY2UoMSkgKyBcIl1cIik7XHJcblxyXG4gICAgICBpZiAodGFyZ2V0Lmxlbmd0aCkge1xyXG4gICAgICAgICQoXCJodG1sLGJvZHlcIikuYW5pbWF0ZShcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgc2Nyb2xsVG9wOiB0YXJnZXQub2Zmc2V0KCkudG9wLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIDEwMDBcclxuICAgICAgICApOyAvLyBUaGUgbnVtYmVyIGhlcmUgcmVwcmVzZW50cyB0aGUgc3BlZWQgb2YgdGhlIHNjcm9sbCBpbiBtaWxsaXNlY29uZHNcclxuXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSk7XHJcbn0pO1xyXG52YXIgYmlnU2xpZGVzID0gJChcIi5tYWluLXNsaWRlciAub3dsLWNhcm91c2VsXCIpLFxyXG4gIGF1dG9QbGF5VGltZW91dFNlYyA9IHBhcnNlSW50KGJpZ1NsaWRlcy5kYXRhKFwiYXV0b3BsYXktdGltZW91dFwiKSk7XHJcbmJpZ1NsaWRlcy5vd2xDYXJvdXNlbCh7XHJcbiAgbG9vcDogdHJ1ZSxcclxuICBtYXJnaW46IDUsXHJcbiAgbmF2OiB0cnVlLFxyXG4gIGRvdHM6IHRydWUsXHJcbiAgaXRlbXM6IDEsXHJcbiAgYXV0b3BsYXk6IHRydWUsXHJcbiAgYXV0b3BsYXlUaW1lb3V0OiBhdXRvUGxheVRpbWVvdXRTZWMgKiAxMDAwLFxyXG4gIG5hdlRleHQ6IFtcclxuICAgICc8c3ZnIGNsYXNzPVwiaWNvblwiIHZpZXdCb3g9XCIwIDAgMTAuNSAxOC4xXCI+PHBhdGggc3Ryb2tlPVwibm9uZVwiIGQ9XCJNOSwwbDEuNCwxLjRMMi44LDlsNy42LDcuNkw5LDE4LjFMMCw5QzAsOSw5LjEsMCw5LDB6XCI+PC9wYXRoPjwvc3ZnPicsXHJcbiAgICAnPHN2ZyBjbGFzcz1cImljb25cIiB2aWV3Qm94PVwiMCAwIDEwLjUgMTguMVwiPjxwYXRoIHN0cm9rZT1cIm5vbmVcIiBkPVwiTTEuNCwxOC4xTDAsMTYuN2w3LjYtNy42TDAsMS41TDEuNCwwbDksOS4xQzEwLjQsOS4xLDEuMywxOC4xLDEuNCwxOC4xelwiPjwvcGF0aD48L3N2Zz4nLFxyXG4gIF0sXHJcbn0pO1xyXG52YXIgcmFkaW9CdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRlbGl2ZXJ5LXNlbGVjdGlvbiBpbnB1dFt0eXBlPVwicmFkaW9cIl0nKTtcclxudmFyIGNob2ljZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmRlbGl2ZXJ5LWNob2ljZVwiKTtcclxucmFkaW9CdXR0b25zLmZvckVhY2goZnVuY3Rpb24gKGJ0bikge1xyXG4gIGJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBjbGlja2VkID0gdGhpcztcclxuICAgIGNob2ljZXMuZm9yRWFjaChmdW5jdGlvbiAoY2hvaWNlKSB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICBjaG9pY2UuY2xhc3NMaXN0LmNvbnRhaW5zKGNsaWNrZWQuaWQpIHx8XHJcbiAgICAgICAgY2hvaWNlLmNsYXNzTGlzdC5jb250YWlucyhcImRlbGl2ZXJ5LXR5cGUtXCIgKyBjbGlja2VkLnZhbHVlKVxyXG4gICAgICApIHtcclxuICAgICAgICBjaG9pY2Uuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjaG9pY2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcbiQoXCIuc2hvcHBpbmctY2FydC1pdGVtX19kZWxldGVcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICQodGhpcykucGFyZW50KFwiLnNob3BwaW5nLWNhcnQtaXRlbVwiKS5yZW1vdmUoKTtcclxufSk7XHJcbiQoXCIuc2xpZGVyIC5vd2wtY2Fyb3VzZWxcIikub3dsQ2Fyb3VzZWwoe1xyXG4gIGxvb3A6IHRydWUsXHJcbiAgbWFyZ2luOiAwLFxyXG4gIGl0ZW1zOiAxLFxyXG4gIG5hdjogdHJ1ZSxcclxufSk7XHJcbiQoXCIubmV3cy1zbGlkZXIgLm93bC1jYXJvdXNlbFwiKS5vd2xDYXJvdXNlbCh7XHJcbiAgbG9vcDogdHJ1ZSxcclxuICBtYXJnaW46IDAsXHJcbiAgaXRlbXM6IDQsXHJcbiAgcmVzcG9uc2l2ZToge1xyXG4gICAgMDoge1xyXG4gICAgICBuYXY6IGZhbHNlLFxyXG4gICAgICBkb3RzOiB0cnVlLFxyXG4gICAgICBpdGVtczogMSxcclxuICAgIH0sXHJcbiAgICA0Nzk6IHtcclxuICAgICAgbmF2OiBmYWxzZSxcclxuICAgICAgZG90czogdHJ1ZSxcclxuICAgICAgaXRlbXM6IDIsXHJcbiAgICB9LFxyXG4gICAgNzY4OiB7XHJcbiAgICAgIG5hdjogdHJ1ZSxcclxuICAgICAgZG90czogZmFsc2UsXHJcbiAgICAgIGl0ZW1zOiAzLFxyXG4gICAgfSxcclxuICAgIDk5Mjoge1xyXG4gICAgICBpdGVtczogNCxcclxuICAgIH0sXHJcbiAgfSxcclxufSk7XHJcbiQoXCIuYWN0aW9uLXNsaWRlciAub3dsLWNhcm91c2VsXCIpLm93bENhcm91c2VsKHtcclxuICBsb29wOiB0cnVlLFxyXG4gIG1hcmdpbjogMjAsXHJcbiAgbmF2OiB0cnVlLFxyXG4gIGRvdHM6IGZhbHNlLFxyXG4gIGl0ZW1zOiAzLFxyXG4gIHJlc3BvbnNpdmU6IHtcclxuICAgIDA6IHtcclxuICAgICAgbmF2OiBmYWxzZSxcclxuICAgICAgZG90czogdHJ1ZSxcclxuICAgICAgaXRlbXM6IDEsXHJcbiAgICB9LFxyXG4gICAgNDc5OiB7XHJcbiAgICAgIG5hdjogZmFsc2UsXHJcbiAgICAgIGRvdHM6IHRydWUsXHJcbiAgICAgIGl0ZW1zOiAyLFxyXG4gICAgfSxcclxuICAgIDc2ODoge1xyXG4gICAgICBuYXY6IHRydWUsXHJcbiAgICAgIGRvdHM6IGZhbHNlLFxyXG4gICAgICBpdGVtczogMyxcclxuICAgIH0sXHJcbiAgfSxcclxufSk7XHJcbiQoXCIucGFydG5lcnMtc2xpZGVyIC5vd2wtY2Fyb3VzZWxcIikub3dsQ2Fyb3VzZWwoe1xyXG4gIGxvb3A6IHRydWUsXHJcbiAgbWFyZ2luOiAwLFxyXG4gIG5hdjogdHJ1ZSxcclxuICBkb3RzOiBmYWxzZSxcclxuICBpdGVtczogNSxcclxuICByZXNwb25zaXZlOiB7XHJcbiAgICAwOiB7XHJcbiAgICAgIGRvdHM6IHRydWUsXHJcbiAgICAgIG5hdjogZmFsc2UsXHJcbiAgICAgIGl0ZW1zOiAxLFxyXG4gICAgfSxcclxuICAgIDU2Njoge1xyXG4gICAgICBuYXY6IGZhbHNlLFxyXG4gICAgICBkb3RzOiB0cnVlLFxyXG4gICAgICBpdGVtczogMixcclxuICAgIH0sXHJcbiAgICA3Njg6IHtcclxuICAgICAgbmF2OiBmYWxzZSxcclxuICAgICAgZG90czogdHJ1ZSxcclxuICAgICAgaXRlbXM6IDMsXHJcbiAgICB9LFxyXG4gICAgOTAwOiB7XHJcbiAgICAgIG5hdjogZmFsc2UsXHJcbiAgICAgIGRvdHM6IHRydWUsXHJcbiAgICAgIGl0ZW1zOiA0LFxyXG4gICAgfSxcclxuICAgIDk1MDoge1xyXG4gICAgICBkb3RzOiBmYWxzZSxcclxuICAgIH0sXHJcbiAgfSxcclxufSk7XHJcblxyXG4vKiBzZWxlY3QgKi9cclxuXHJcbihmdW5jdGlvbiAoJCkge1xyXG4gIHZhciBjdXN0b21TZWxlY3QgPSAkKFwic2VsZWN0LmN1c3RvbS1zZWxlY3RcIik7IC8vIEZJUlNULCBjcmVhdGUgdGhlIGN1c3RvbSBzZWxlY3QgbWVudXMgZnJvbSB0aGUgZXhpc3Rpbmcgc2VsZWN0XHJcblxyXG4gIGN1c3RvbVNlbGVjdC5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciB0aGF0ID0gJCh0aGlzKTtcclxuICAgIHZhciBsaXN0SUQgPSB0aGF0LmF0dHIoXCJpZFwiKSxcclxuICAgICAgZ3JvdXBzID0gdGhhdC5jaGlsZHJlbihcIm9wdGdyb3VwXCIpLFxyXG4gICAgICB0aGVPcHRpb25zID0gXCJcIixcclxuICAgICAgc3RhcnRpbmdPcHRpb24gPSBcIlwiLFxyXG4gICAgICBjdXN0b21TZWxlY3QgPSBcIlwiOyAvL2NoZWNrIGlmIHRoZXJlIGFyZSBvcHRpb24gZ3JvdXBzXHJcblxyXG4gICAgaWYgKGdyb3Vwcy5sZW5ndGgpIHtcclxuICAgICAgZ3JvdXBzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXJHcm91cCA9ICQodGhpcyk7XHJcbiAgICAgICAgdmFyIGN1ck5hbWUgPSBjdXJHcm91cC5hdHRyKFwibGFiZWxcIik7IC8vT3BlbiB0aGUgb3B0aW9uIGdyb3VwXHJcblxyXG4gICAgICAgIHRoZU9wdGlvbnMgKz0gJzxsaSBjbGFzcz1cIm9wdGdyb3VwXCI+JyArIGN1ck5hbWUgKyBcIjwvbGk+XCI7IC8vZ2V0IHRoZSBvcHRpb25zXHJcblxyXG4gICAgICAgIGN1ckdyb3VwLmNoaWxkcmVuKFwib3B0aW9uXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgdmFyIGN1ck9wdCA9ICQodGhpcyk7XHJcbiAgICAgICAgICB2YXIgY3VyVmFsID0gY3VyT3B0LmF0dHIoXCJ2YWx1ZVwiKSxcclxuICAgICAgICAgICAgY3VySHRtbCA9IGN1ck9wdC5odG1sKCksXHJcbiAgICAgICAgICAgIGlzU2VsZWN0ZWQgPSBjdXJPcHQuYXR0cihcInNlbGVjdGVkXCIpO1xyXG5cclxuICAgICAgICAgIGlmIChpc1NlbGVjdGVkID09PSBcInNlbGVjdGVkXCIpIHtcclxuICAgICAgICAgICAgc3RhcnRpbmdPcHRpb24gPSBjdXJIdG1sO1xyXG4gICAgICAgICAgICB0aGVPcHRpb25zICs9ICc8bGkgY2xhc3M9XCJzZWxlY3RlZFwiIGRhdGEtdmFsdWU9XCInICsgY3VyVmFsICsgJ1wiPicgKyBjdXJIdG1sICsgXCI8L2xpPlwiO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhlT3B0aW9ucyArPSAnPGxpIGRhdGEtdmFsdWU9XCInICsgY3VyVmFsICsgJ1wiPicgKyBjdXJIdG1sICsgXCI8L2xpPlwiO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pOyAvL0Nsb3NlIHRoZSBvcHRpb24gZ3JvdXBcclxuICAgICAgICAvL3RoZU9wdGlvbnMgKz0gJzxsaSBjbGFzcz1cIm9wdGdyb3VwLWNsb3NlXCI+PC9saT4nO1xyXG4gICAgICB9KTsgLy9hZGQgb3B0aW9ucyBub3QgaW4gYSBncm91cCB0byB0aGUgdG9wIG9mIHRoZSBsaXN0XHJcblxyXG4gICAgICB0aGF0LmNoaWxkcmVuKFwib3B0aW9uXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXJPcHQgPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciBjdXJWYWwgPSBjdXJPcHQuYXR0cihcInZhbHVlXCIpLFxyXG4gICAgICAgICAgY3VySHRtbCA9IGN1ck9wdC5odG1sKCksXHJcbiAgICAgICAgICBpc1NlbGVjdGVkID0gY3VyT3B0LmF0dHIoXCJzZWxlY3RlZFwiKTtcclxuXHJcbiAgICAgICAgaWYgKGlzU2VsZWN0ZWQgPT09IFwic2VsZWN0ZWRcIikge1xyXG4gICAgICAgICAgc3RhcnRpbmdPcHRpb24gPSBjdXJIdG1sO1xyXG4gICAgICAgICAgdGhlT3B0aW9ucyA9XHJcbiAgICAgICAgICAgICc8bGkgY2xhc3M9XCJzZWxlY3RlZFwiIGRhdGEtdmFsdWU9XCInICsgY3VyVmFsICsgJ1wiPicgKyBjdXJIdG1sICsgXCI8L2xpPlwiICsgdGhlT3B0aW9ucztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhlT3B0aW9ucyA9ICc8bGkgZGF0YS12YWx1ZT1cIicgKyBjdXJWYWwgKyAnXCI+JyArIGN1ckh0bWwgKyBcIjwvbGk+XCIgKyB0aGVPcHRpb25zO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGF0LmNoaWxkcmVuKFwib3B0aW9uXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXJPcHQgPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciBjdXJWYWwgPSBjdXJPcHQuYXR0cihcInZhbHVlXCIpLFxyXG4gICAgICAgICAgY3VySHRtbCA9IGN1ck9wdC5odG1sKCksXHJcbiAgICAgICAgICBpc1NlbGVjdGVkID0gY3VyT3B0LmF0dHIoXCJzZWxlY3RlZFwiKTtcclxuXHJcbiAgICAgICAgaWYgKGlzU2VsZWN0ZWQgPT09IFwic2VsZWN0ZWRcIikge1xyXG4gICAgICAgICAgc3RhcnRpbmdPcHRpb24gPSBjdXJIdG1sO1xyXG4gICAgICAgICAgdGhlT3B0aW9ucyArPSAnPGxpIGNsYXNzPVwic2VsZWN0ZWRcIiBkYXRhLXZhbHVlPVwiJyArIGN1clZhbCArICdcIj4nICsgY3VySHRtbCArIFwiPC9saT5cIjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhlT3B0aW9ucyArPSAnPGxpIGRhdGEtdmFsdWU9XCInICsgY3VyVmFsICsgJ1wiPicgKyBjdXJIdG1sICsgXCI8L2xpPlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9IC8vYnVpbGQgdGhlIGN1c3RvbSBzZWxlY3RcclxuXHJcbiAgICBjdXN0b21TZWxlY3QgPVxyXG4gICAgICAnPGRpdiBjbGFzcz1cImRyb3Bkb3duLWNvbnRhaW5lclwiPjxkaXYgY2xhc3M9XCJkcm9wZG93bi1zZWxlY3QgZW50eXBvLWRvd24tb3Blbi1iaWdcIj48c3ZnIGNsYXNzPVwiaWNvblwiPjx1c2UgeGxpbms6aHJlZj1cIiN0YWItYXJyb3dcIj48L3VzZT48L3N2Zz48c3Bhbj4nICtcclxuICAgICAgc3RhcnRpbmdPcHRpb24gK1xyXG4gICAgICAnPC9zcGFuPjwvZGl2Pjx1bCBjbGFzcz1cImRyb3Bkb3duLXNlbGVjdC11bFwiIGRhdGEtcm9sZT1cIicgK1xyXG4gICAgICBsaXN0SUQgK1xyXG4gICAgICAnXCI+JyArXHJcbiAgICAgIHRoZU9wdGlvbnMgK1xyXG4gICAgICBcIjwvdWw+PC9kaXY+IDwhLS0gLmN1c3RvbS1zZWxlY3Qtd3JhcHBlciAtLT5cIjsgLy9hcHBlbmQgaXQgYWZ0ZXIgdGhlIGFjdHVhbCBzZWxlY3RcclxuXHJcbiAgICAkKGN1c3RvbVNlbGVjdCkuaW5zZXJ0QWZ0ZXIodGhhdCk7XHJcbiAgfSk7XHJcbiAgdmFyIHNlbGVjdGRkID0gJChcIi5kcm9wZG93bi1zZWxlY3RcIiksXHJcbiAgICBzZWxlY3R1bCA9ICQoXCIuZHJvcGRvd24tc2VsZWN0LXVsXCIpLFxyXG4gICAgc2VsZWN0bGkgPSAkKFwiLmRyb3Bkb3duLXNlbGVjdC11bCBsaVwiKTsgLy9USEVOIG1ha2UgdGhlbSB3b3JrXHJcblxyXG4gIHNlbGVjdGRkLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgJCh0aGlzKS5wYXJlbnQoXCIuZHJvcGRvd24tY29udGFpbmVyXCIpLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gIH0pOyAvL0hpZGUgaXQgb24gbW91c2VsZWF2ZVxyXG5cclxuICBzZWxlY3R1bC5vbihcIm1vdXNlbGVhdmVcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgJCh0aGlzKS5wYXJlbnQoXCIuZHJvcGRvd24tY29udGFpbmVyXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gIH0pOyAvL3NlbGVjdCB0aGUgb3B0aW9uXHJcblxyXG4gIHNlbGVjdGxpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHRoYXQgPSAkKHRoaXMpOyAvL2Vuc3VyZSBjbGlja2luZyBncm91cCBsYWJlbHMgZG9lcyBub3QgY2F1c2UgY2hhbmdlXHJcblxyXG4gICAgaWYgKCF0aGF0Lmhhc0NsYXNzKFwib3B0Z3JvdXBcIikpIHtcclxuICAgICAgdmFyIHBhcmVudFVsID0gdGhhdC5wYXJlbnQoXCJ1bFwiKSxcclxuICAgICAgICB0aGlzZGQgPSBwYXJlbnRVbC5zaWJsaW5ncyhcIi5kcm9wZG93bi1zZWxlY3RcIiksXHJcbiAgICAgICAgbGlodG1sID0gdGhhdC5odG1sKCksXHJcbiAgICAgICAgbGl2YWx1ZSA9IHRoYXQuYXR0cihcImRhdGEtdmFsdWVcIiksXHJcbiAgICAgICAgb3JpZ2luYWxTZWxlY3QgPSBcIiNcIiArIHBhcmVudFVsLmF0dHIoXCJkYXRhLXJvbGVcIik7IC8vY2xvc2UgdGhlIGRyb3Bkb3duXHJcblxyXG4gICAgICBwYXJlbnRVbC5wYXJlbnQoXCIuZHJvcGRvd24tY29udGFpbmVyXCIpLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpOyAvL3JlbW92ZSBzZWxlY3RlZCBjbGFzcyBmcm9tIGFsbCBsaXN0IGl0ZW1zXHJcblxyXG4gICAgICB0aGF0LnNpYmxpbmdzKFwibGlcIikucmVtb3ZlQ2xhc3MoXCJzZWxlY3RlZFwiKTsgLy9hZGQgLnNlbGVjdGVkIHRvIGNsaWNrZWQgbGlcclxuXHJcbiAgICAgIHRoYXQuYWRkQ2xhc3MoXCJzZWxlY3RlZFwiKTsgLy9zZXQgdGhlIHZhbHVlIG9mIHRoZSBoaWRkZW4gaW5wdXRcclxuXHJcbiAgICAgICQob3JpZ2luYWxTZWxlY3QpLnZhbChsaXZhbHVlKTsgLy9jaGFuZ2UgdGhlIGRyb3Bkb3duIHRleHRcclxuXHJcbiAgICAgIHRoaXNkZC5jaGlsZHJlbihcInNwYW5cIikuaHRtbChsaWh0bWwpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KShqUXVlcnkpO1xyXG4vKiB0YWJzICovXHJcbi8vIHRhYmJlZCBjb250ZW50XHJcbi8vIGh0dHA6Ly93d3cuZW50aGVvc3dlYi5jb20vdHV0b3JpYWxzL2Nzcy90YWJzLmFzcFxyXG5cclxuJChcIi50YWItY29udGVudFwiKS5oaWRlKCk7XHJcbiQoXCIudGFiLWNvbnRlbnQ6Zmlyc3RcIikuc2hvdygpO1xyXG4vKiBpZiBpbiB0YWIgbW9kZSAqL1xyXG5cclxuJChcInVsLnRhYnMgbGksLnByb2R1Y3QtY2FyZF9fcmV2aWV3LWxpbmsgYSwuc2NoZWR1bGUtYnRuIGFcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICQoXCIudGFiLWNvbnRlbnRcIikuaGlkZSgpO1xyXG4gIHZhciBhY3RpdmVUYWIgPSAkKHRoaXMpLmF0dHIoXCJyZWxcIik7XHJcbiAgJChcIiNcIiArIGFjdGl2ZVRhYikuZmFkZUluKCk7XHJcbiAgJChcInVsLnRhYnMgbGlcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgJCh0aGlzKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAkKFwiLnRhYl9kcmF3ZXJfaGVhZGluZ1wiKS5yZW1vdmVDbGFzcyhcImRfYWN0aXZlXCIpO1xyXG4gICQoXCIudGFiX2RyYXdlcl9oZWFkaW5nW3JlbF49J1wiICsgYWN0aXZlVGFiICsgXCInXVwiKS5hZGRDbGFzcyhcImRfYWN0aXZlXCIpO1xyXG59KTtcclxuLyogaWYgaW4gZHJhd2VyIG1vZGUgKi9cclxuXHJcbiQoXCIudGFiX2RyYXdlcl9oZWFkaW5nXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICB2YXIgZF9hY3RpdmVUYWIgPSAkKHRoaXMpLmF0dHIoXCJyZWxcIiksXHJcbiAgICBhY3RpdmVUYWJCbG9jayA9ICQoXCIjXCIgKyBkX2FjdGl2ZVRhYiArIFwiOmhpZGRlblwiKSxcclxuICAgICR0aGlzQWN0aXZlID0gJCh0aGlzKS5ub3QoXCIuZF9hY3RpdmVcIik7XHJcbiAgJChcIi50YWItY29udGVudFwiKS5oaWRlKCk7XHJcbiAgYWN0aXZlVGFiQmxvY2suZmFkZUluKCk7XHJcbiAgJChcIi50YWJfZHJhd2VyX2hlYWRpbmdcIikucmVtb3ZlQ2xhc3MoXCJkX2FjdGl2ZVwiKTtcclxuICAkdGhpc0FjdGl2ZS5hZGRDbGFzcyhcImRfYWN0aXZlXCIpO1xyXG4gICQoXCJ1bC50YWJzIGxpXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICQoXCJ1bC50YWJzIGxpW3JlbF49J1wiICsgZF9hY3RpdmVUYWIgKyBcIiddXCIpLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG59KTtcclxuLyogRXh0cmEgY2xhc3MgXCJ0YWJfbGFzdFwiXHJcbiB0byBhZGQgYm9yZGVyIHRvIHJpZ2h0IHNpZGVcclxuIG9mIGxhc3QgdGFiICovXHJcblxyXG4kKFwidWwudGFicyBsaVwiKS5sYXN0KCkuYWRkQ2xhc3MoXCJ0YWJfbGFzdFwiKTtcclxualF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgalF1ZXJ5KFwiLnNjaGVkdWxlLWJ0biBhXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgIGpRdWVyeShcIi5zY2hlZHVsZS1saW5rXCIpLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG59KTtcclxualF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgalF1ZXJ5KFwiLnByb2R1Y3QtY2FyZF9fcmV2aWV3LWxpbmsgYVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICBqUXVlcnkoXCIucmV2aWV3LXRhYi1saW5rXCIpLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG59KTsgLy9zbGlkZXNob3dcclxuXHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICB2YXIgc3luYzEgPSAkKFwiI3N5bmMxXCIpO1xyXG4gIHZhciBzeW5jMiA9ICQoXCIjc3luYzJcIik7XHJcbiAgdmFyIHNsaWRlc1BlclBhZ2UgPSAzOyAvL2dsb2JhbHkgZGVmaW5lIG51bWJlciBvZiBlbGVtZW50cyBwZXIgcGFnZVxyXG5cclxuICB2YXIgc3luY2VkU2Vjb25kYXJ5ID0gdHJ1ZTtcclxuICBzeW5jMVxyXG4gIC5vd2xDYXJvdXNlbCh7XHJcbiAgICBpdGVtczogMSxcclxuICAgIHNsaWRlU3BlZWQ6IDIwMDAsXHJcbiAgICBuYXY6IHRydWUsXHJcbiAgICBhdXRvcGxheTogZmFsc2UsXHJcbiAgICBkb3RzOiB0cnVlLFxyXG4gICAgbG9vcDogdHJ1ZSxcclxuICAgIHJlc3BvbnNpdmVSZWZyZXNoUmF0ZTogMjAwLFxyXG4gICAgbWFyZ2luOiAxMCxcclxuICB9KVxyXG4gIC5vbihcImNoYW5nZWQub3dsLmNhcm91c2VsXCIsIHN5bmNQb3NpdGlvbik7XHJcbiAgc3luYzJcclxuICAub24oXCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWxcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgc3luYzIuZmluZChcIi5vd2wtaXRlbVwiKS5lcSgwKS5hZGRDbGFzcyhcImN1cnJlbnRcIik7XHJcbiAgfSlcclxuICAub3dsQ2Fyb3VzZWwoe1xyXG4gICAgaXRlbXM6IHNsaWRlc1BlclBhZ2UsXHJcbiAgICBkb3RzOiB0cnVlLFxyXG4gICAgbmF2OiB0cnVlLFxyXG4gICAgbWFyZ2luOiAxMCxcclxuICAgIHNtYXJ0U3BlZWQ6IDIwMCxcclxuICAgIHNsaWRlU3BlZWQ6IDUwMCxcclxuICAgIHNsaWRlQnk6IHNsaWRlc1BlclBhZ2UsXHJcbiAgICAvL2FsdGVybmF0aXZlbHkgeW91IGNhbiBzbGlkZSBieSAxLCB0aGlzIHdheSB0aGUgYWN0aXZlIHNsaWRlIHdpbGwgc3RpY2sgdG8gdGhlIGZpcnN0IGl0ZW0gaW4gdGhlIHNlY29uZCBjYXJvdXNlbFxyXG4gICAgcmVzcG9uc2l2ZVJlZnJlc2hSYXRlOiAxMDAsXHJcbiAgfSlcclxuICAub24oXCJjaGFuZ2VkLm93bC5jYXJvdXNlbFwiLCBzeW5jUG9zaXRpb24yKTtcclxuXHJcbiAgZnVuY3Rpb24gc3luY1Bvc2l0aW9uKGVsKSB7XHJcbiAgICAvL2lmIHlvdSBzZXQgbG9vcCB0byBmYWxzZSwgeW91IGhhdmUgdG8gcmVzdG9yZSB0aGlzIG5leHQgbGluZVxyXG4gICAgLy92YXIgY3VycmVudCA9IGVsLml0ZW0uaW5kZXg7XHJcbiAgICAvL2lmIHlvdSBkaXNhYmxlIGxvb3AgeW91IGhhdmUgdG8gY29tbWVudCB0aGlzIGJsb2NrXHJcbiAgICB2YXIgY291bnQgPSBlbC5pdGVtLmNvdW50IC0gMTtcclxuICAgIHZhciBjdXJyZW50ID0gTWF0aC5yb3VuZChlbC5pdGVtLmluZGV4IC0gZWwuaXRlbS5jb3VudCAvIDIgLSAwLjUpO1xyXG5cclxuICAgIGlmIChjdXJyZW50IDwgMCkge1xyXG4gICAgICBjdXJyZW50ID0gY291bnQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGN1cnJlbnQgPiBjb3VudCkge1xyXG4gICAgICBjdXJyZW50ID0gMDtcclxuICAgIH0gLy9lbmQgYmxvY2tcclxuXHJcbiAgICBzeW5jMi5maW5kKFwiLm93bC1pdGVtXCIpLnJlbW92ZUNsYXNzKFwiY3VycmVudFwiKS5lcShjdXJyZW50KS5hZGRDbGFzcyhcImN1cnJlbnRcIik7XHJcbiAgICB2YXIgb25zY3JlZW4gPSBzeW5jMi5maW5kKFwiLm93bC1pdGVtLmFjdGl2ZVwiKS5sZW5ndGggLSAxO1xyXG4gICAgdmFyIHN0YXJ0ID0gc3luYzIuZmluZChcIi5vd2wtaXRlbS5hY3RpdmVcIikuZmlyc3QoKS5pbmRleCgpO1xyXG4gICAgdmFyIGVuZCA9IHN5bmMyLmZpbmQoXCIub3dsLWl0ZW0uYWN0aXZlXCIpLmxhc3QoKS5pbmRleCgpO1xyXG5cclxuICAgIGlmIChjdXJyZW50ID4gZW5kKSB7XHJcbiAgICAgIHN5bmMyLmRhdGEoXCJvd2wuY2Fyb3VzZWxcIikudG8oY3VycmVudCwgMTAwLCB0cnVlKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoY3VycmVudCA8IHN0YXJ0KSB7XHJcbiAgICAgIHN5bmMyLmRhdGEoXCJvd2wuY2Fyb3VzZWxcIikudG8oY3VycmVudCAtIG9uc2NyZWVuLCAxMDAsIHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc3luY1Bvc2l0aW9uMihlbCkge1xyXG4gICAgaWYgKHN5bmNlZFNlY29uZGFyeSkge1xyXG4gICAgICB2YXIgbnVtYmVyID0gZWwuaXRlbS5pbmRleDtcclxuICAgICAgc3luYzEuZGF0YShcIm93bC5jYXJvdXNlbFwiKS50byhudW1iZXIsIDEwMCwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzeW5jMi5vbihcImNsaWNrXCIsIFwiLm93bC1pdGVtXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB2YXIgbnVtYmVyID0gJCh0aGlzKS5pbmRleCgpO1xyXG4gICAgc3luYzEuZGF0YShcIm93bC5jYXJvdXNlbFwiKS50byhudW1iZXIsIDMwMCwgdHJ1ZSk7XHJcbiAgfSk7XHJcbn0pO1xyXG4oZnVuY3Rpb24gKCQpIHtcclxuICB2YXIgcGx1Z2luTmFtZSA9IFwiY3NjcmxiXCI7XHJcblxyXG4gIGZ1bmN0aW9uIFBsdWdpbihlbGVtZW50LCBvcHRpb25zKSB7XHJcbiAgICB2YXIgZWwgPSBlbGVtZW50O1xyXG4gICAgdmFyICRlbCA9ICQoZWxlbWVudCk7XHJcbiAgICB2YXIgJHNjcm9sbENvbnRlbnRFbDtcclxuICAgIHZhciAkY29udGVudEVsID0gJGVsLmZpbmQoXCIuY3NjcmxiLWNvbnRlbnRcIik7XHJcbiAgICB2YXIgJHNjcm9sbGJhckVsO1xyXG4gICAgdmFyICRkcmFnSGFuZGxlRWw7XHJcbiAgICB2YXIgZHJhZ09mZnNldDtcclxuICAgIHZhciBmbGFzaFRpbWVvdXQ7XHJcbiAgICB2YXIgcGFnZUp1bXBNdWx0cCA9IDcgLyA4O1xyXG4gICAgdmFyIHNjcm9sbERpcmVjdGlvbiA9IFwidmVydFwiO1xyXG4gICAgdmFyIHNjcm9sbE9mZnNldEF0dHIgPSBcInNjcm9sbFRvcFwiO1xyXG4gICAgdmFyIHNpemVBdHRyID0gXCJoZWlnaHRcIjtcclxuICAgIHZhciBvZmZzZXRBdHRyID0gXCJ0b3BcIjtcclxuICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJC5mbltwbHVnaW5OYW1lXS5kZWZhdWx0cywgb3B0aW9ucyk7XHJcblxyXG4gICAgd2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgJGNvbnRlbnRFbC5mb2N1cygpO1xyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBpbml0KCkge1xyXG4gICAgICBpZiAoJGVsLmhhc0NsYXNzKFwiaG9yaXpvbnRhbFwiKSkge1xyXG4gICAgICAgIHNjcm9sbERpcmVjdGlvbiA9IFwiaG9yaXpcIjtcclxuICAgICAgICBzY3JvbGxPZmZzZXRBdHRyID0gXCJzY3JvbGxMZWZ0XCI7XHJcbiAgICAgICAgc2l6ZUF0dHIgPSBcIndpZHRoXCI7XHJcbiAgICAgICAgb2Zmc2V0QXR0ciA9IFwibGVmdFwiO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAkZWwucHJlcGVuZCgnPGRpdiBjbGFzcz1cImNzY3JsYi1zY3JvbGxiYXJcIj48ZGl2IGNsYXNzPVwiZHJhZy1oYW5kbGVcIj48L2Rpdj48L2Rpdj4nKTtcclxuICAgICAgJHNjcm9sbGJhckVsID0gJGVsLmZpbmQoXCIuY3NjcmxiLXNjcm9sbGJhclwiKTtcclxuICAgICAgJGRyYWdIYW5kbGVFbCA9ICRlbC5maW5kKFwiLmRyYWctaGFuZGxlXCIpO1xyXG5cclxuICAgICAgaWYgKG9wdGlvbnMud3JhcENvbnRlbnQpIHtcclxuICAgICAgICAkY29udGVudEVsLndyYXAoJzxkaXYgY2xhc3M9XCJjc2NybGItc2Nyb2xsLWNvbnRlbnRcIiAvPicpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAkc2Nyb2xsQ29udGVudEVsID0gJGVsLmZpbmQoXCIuY3NjcmxiLXNjcm9sbC1jb250ZW50XCIpO1xyXG4gICAgICByZXNpemVTY3JvbGxDb250ZW50KCk7XHJcblxyXG4gICAgICBpZiAob3B0aW9ucy5hdXRvSGlkZSkge1xyXG4gICAgICAgICRlbC5vbihcIm1vdXNlZW50ZXJcIiwgZmxhc2hTY3JvbGxiYXIpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAkZHJhZ0hhbmRsZUVsLm9uKFwibW91c2Vkb3duXCIsIHN0YXJ0RHJhZyk7XHJcbiAgICAgICRzY3JvbGxiYXJFbC5vbihcIm1vdXNlZG93blwiLCBqdW1wU2Nyb2xsKTtcclxuICAgICAgJHNjcm9sbENvbnRlbnRFbC5vbihcInNjcm9sbFwiLCBvblNjcm9sbGVkKTtcclxuICAgICAgcmVzaXplU2Nyb2xsYmFyKCk7XHJcbiAgICAgICQod2luZG93KS5vbihcInJlc2l6ZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmVjYWxjdWxhdGUoKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoIW9wdGlvbnMuYXV0b0hpZGUpIHtcclxuICAgICAgICBzaG93U2Nyb2xsYmFyKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzdGFydERyYWcoZSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHZhciBldmVudE9mZnNldCA9IGUucGFnZVk7XHJcblxyXG4gICAgICBpZiAoc2Nyb2xsRGlyZWN0aW9uID09PSBcImhvcml6XCIpIHtcclxuICAgICAgICBldmVudE9mZnNldCA9IGUucGFnZVg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGRyYWdPZmZzZXQgPSBldmVudE9mZnNldCAtICRkcmFnSGFuZGxlRWwub2Zmc2V0KClbb2Zmc2V0QXR0cl07XHJcbiAgICAgICQoZG9jdW1lbnQpLm9uKFwibW91c2Vtb3ZlXCIsIGRyYWcpO1xyXG4gICAgICAkKGRvY3VtZW50KS5vbihcIm1vdXNldXBcIiwgZW5kRHJhZyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZHJhZyhlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdmFyIGV2ZW50T2Zmc2V0ID0gZS5wYWdlWTtcclxuXHJcbiAgICAgIGlmIChzY3JvbGxEaXJlY3Rpb24gPT09IFwiaG9yaXpcIikge1xyXG4gICAgICAgIGV2ZW50T2Zmc2V0ID0gZS5wYWdlWDtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIGRyYWdQb3MgPSBldmVudE9mZnNldCAtICRzY3JvbGxiYXJFbC5vZmZzZXQoKVtvZmZzZXRBdHRyXSAtIGRyYWdPZmZzZXQ7XHJcbiAgICAgIHZhciBkcmFnUGVyYyA9IGRyYWdQb3MgLyAkc2Nyb2xsYmFyRWxbc2l6ZUF0dHJdKCk7XHJcbiAgICAgIHZhciBzY3JvbGxQb3MgPSBkcmFnUGVyYyAqICRjb250ZW50RWxbc2l6ZUF0dHJdKCk7XHJcbiAgICAgICRzY3JvbGxDb250ZW50RWxbc2Nyb2xsT2Zmc2V0QXR0cl0oc2Nyb2xsUG9zKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBlbmREcmFnKCkge1xyXG4gICAgICAkKGRvY3VtZW50KS5vZmYoXCJtb3VzZW1vdmVcIiwgZHJhZyk7XHJcbiAgICAgICQoZG9jdW1lbnQpLm9mZihcIm1vdXNldXBcIiwgZW5kRHJhZyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24ganVtcFNjcm9sbChlKSB7XHJcbiAgICAgIGlmIChlLnRhcmdldCA9PT0gJGRyYWdIYW5kbGVFbFswXSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgdmFyIGp1bXBBbXQgPSBwYWdlSnVtcE11bHRwICogJHNjcm9sbENvbnRlbnRFbFtzaXplQXR0cl0oKTtcclxuICAgICAgdmFyIGV2ZW50T2Zmc2V0ID1cclxuICAgICAgICBzY3JvbGxEaXJlY3Rpb24gPT09IFwidmVydFwiID8gZS5vcmlnaW5hbEV2ZW50LmxheWVyWSA6IGUub3JpZ2luYWxFdmVudC5sYXllclg7XHJcbiAgICAgIHZhciBkcmFnSGFuZGxlT2Zmc2V0ID0gJGRyYWdIYW5kbGVFbC5wb3NpdGlvbigpW29mZnNldEF0dHJdO1xyXG4gICAgICB2YXIgc2Nyb2xsUG9zID1cclxuICAgICAgICBldmVudE9mZnNldCA8IGRyYWdIYW5kbGVPZmZzZXRcclxuICAgICAgICAgID8gJHNjcm9sbENvbnRlbnRFbFtzY3JvbGxPZmZzZXRBdHRyXSgpIC0ganVtcEFtdFxyXG4gICAgICAgICAgOiAkc2Nyb2xsQ29udGVudEVsW3Njcm9sbE9mZnNldEF0dHJdKCkgKyBqdW1wQW10O1xyXG4gICAgICAkc2Nyb2xsQ29udGVudEVsW3Njcm9sbE9mZnNldEF0dHJdKHNjcm9sbFBvcyk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gb25TY3JvbGxlZChlKSB7XHJcbiAgICAgIGZsYXNoU2Nyb2xsYmFyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVzaXplU2Nyb2xsYmFyKCkge1xyXG4gICAgICB2YXIgY29udGVudFNpemUgPSAkY29udGVudEVsW3NpemVBdHRyXSgpO1xyXG4gICAgICB2YXIgc2Nyb2xsT2Zmc2V0ID0gJHNjcm9sbENvbnRlbnRFbFtzY3JvbGxPZmZzZXRBdHRyXSgpOyAvLyBzY3JvbGxUb3AoKSDjgYsgc2Nyb2xsTGVmdCgpXHJcblxyXG4gICAgICB2YXIgc2Nyb2xsYmFyU2l6ZSA9ICRzY3JvbGxiYXJFbFtzaXplQXR0cl0oKTtcclxuICAgICAgdmFyIHNjcm9sbGJhclJhdGlvID0gc2Nyb2xsYmFyU2l6ZSAvIGNvbnRlbnRTaXplO1xyXG4gICAgICB2YXIgaGFuZGxlT2Zmc2V0ID0gTWF0aC5yb3VuZChzY3JvbGxiYXJSYXRpbyAqIHNjcm9sbE9mZnNldCk7XHJcbiAgICAgIC8qICsgMjsgKi9cclxuXHJcbiAgICAgIHZhciBoYW5kbGVTaXplID0gTWF0aC5mbG9vcihzY3JvbGxiYXJSYXRpbyAqIChzY3JvbGxiYXJTaXplICsgMikpO1xyXG4gICAgICAvKiAgLSAyKSkgLSAyOyAqL1xyXG5cclxuICAgICAgaWYgKHNjcm9sbGJhclNpemUgPCBjb250ZW50U2l6ZSkge1xyXG4gICAgICAgIGlmIChzY3JvbGxEaXJlY3Rpb24gPT09IFwidmVydFwiKSB7XHJcbiAgICAgICAgICAkZHJhZ0hhbmRsZUVsLmNzcyh7XHJcbiAgICAgICAgICAgIHRvcDogaGFuZGxlT2Zmc2V0LFxyXG4gICAgICAgICAgICBoZWlnaHQ6IGhhbmRsZVNpemUsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgJGRyYWdIYW5kbGVFbC5jc3Moe1xyXG4gICAgICAgICAgICBsZWZ0OiBoYW5kbGVPZmZzZXQsXHJcbiAgICAgICAgICAgIHdpZHRoOiBoYW5kbGVTaXplLFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkc2Nyb2xsYmFyRWwuc2hvdygpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICRzY3JvbGxiYXJFbC5oaWRlKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBmbGFzaFNjcm9sbGJhcigpIHtcclxuICAgICAgcmVzaXplU2Nyb2xsYmFyKCk7XHJcbiAgICAgIHNob3dTY3JvbGxiYXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzaG93U2Nyb2xsYmFyKCkge1xyXG4gICAgICAkZHJhZ0hhbmRsZUVsLmFkZENsYXNzKFwidmlzaWJsZVwiKTtcclxuXHJcbiAgICAgIGlmICghb3B0aW9ucy5hdXRvSGlkZSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHR5cGVvZiBmbGFzaFRpbWVvdXQgPT09IFwibnVtYmVyXCIpIHtcclxuICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGZsYXNoVGltZW91dCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGZsYXNoVGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBoaWRlU2Nyb2xsYmFyKCk7XHJcbiAgICAgIH0sIDEwMDApO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGhpZGVTY3JvbGxiYXIoKSB7XHJcbiAgICAgICRkcmFnSGFuZGxlRWwucmVtb3ZlQ2xhc3MoXCJ2aXNpYmxlXCIpO1xyXG5cclxuICAgICAgaWYgKHR5cGVvZiBmbGFzaFRpbWVvdXQgPT09IFwibnVtYmVyXCIpIHtcclxuICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGZsYXNoVGltZW91dCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZXNpemVTY3JvbGxDb250ZW50KCkge1xyXG4gICAgICBpZiAoc2Nyb2xsRGlyZWN0aW9uID09PSBcInZlcnRcIikge1xyXG4gICAgICAgICRzY3JvbGxDb250ZW50RWwud2lkdGgoJGVsLndpZHRoKCkgKyBzY3JvbGxiYXJXaWR0aCgpKTtcclxuICAgICAgICAkc2Nyb2xsQ29udGVudEVsLmhlaWdodCgkZWwuaGVpZ2h0KCkpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgICRzY3JvbGxDb250ZW50RWwud2lkdGgoJGVsLndpZHRoKCkpO1xyXG4gICAgICAgICRzY3JvbGxDb250ZW50RWwuaGVpZ2h0KCRlbC5oZWlnaHQoKSArIHNjcm9sbGJhcldpZHRoKCkpO1xyXG4gICAgICAgICRjb250ZW50RWwuaGVpZ2h0KCRlbC5oZWlnaHQoKSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzY3JvbGxiYXJXaWR0aCgpIHtcclxuICAgICAgdmFyIHRlbXBFbCA9ICQoXHJcbiAgICAgICAgJzxkaXYgY2xhc3M9XCJzY3JvbGxiYXItd2lkdGgtdGVzdGVyXCIgc3R5bGU9XCJ3aWR0aDo1MHB4O2hlaWdodDo1MHB4O292ZXJmbG93LXk6c2Nyb2xsO3Bvc2l0aW9uOmFic29sdXRlO3RvcDotMjAwcHg7bGVmdDotMjAwcHg7XCI+PGRpdiBzdHlsZT1cImhlaWdodDoxMDBweDtcIj48L2Rpdj4nXHJcbiAgICAgICk7XHJcbiAgICAgICQoXCJib2R5XCIpLmFwcGVuZCh0ZW1wRWwpO1xyXG4gICAgICB2YXIgd2lkdGggPSAkKHRlbXBFbCkuaW5uZXJXaWR0aCgpO1xyXG4gICAgICB2YXIgd2lkdGhNaW51c1Njcm9sbGJhcnMgPSAkKFwiZGl2XCIsIHRlbXBFbCkuaW5uZXJXaWR0aCgpO1xyXG4gICAgICB0ZW1wRWwucmVtb3ZlKCk7XHJcblxyXG4gICAgICBpZiAoXHJcbiAgICAgICAgd2lkdGggPT09IHdpZHRoTWludXNTY3JvbGxiYXJzICYmXHJcbiAgICAgICAgbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoXCJmaXJlZm94XCIpID4gLTFcclxuICAgICAgKSB7XHJcbiAgICAgICAgcmV0dXJuIDE3O1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gd2lkdGggLSB3aWR0aE1pbnVzU2Nyb2xsYmFycztcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiByZWNhbGN1bGF0ZSgpIHtcclxuICAgICAgcmVzaXplU2Nyb2xsQ29udGVudCgpO1xyXG4gICAgICByZXNpemVTY3JvbGxiYXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBvcHRpb24oa2V5LCB2YWwpIHtcclxuICAgICAgaWYgKHZhbCkge1xyXG4gICAgICAgIG9wdGlvbnNba2V5XSA9IHZhbDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gb3B0aW9uc1trZXldO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZGVzdHJveSgpIHtcclxuICAgICAgJGNvbnRlbnRFbC5pbnNlcnRCZWZvcmUoJHNjcm9sbGJhckVsKTtcclxuICAgICAgJHNjcm9sbGJhckVsLnJlbW92ZSgpO1xyXG4gICAgICAkc2Nyb2xsQ29udGVudEVsLnJlbW92ZSgpO1xyXG4gICAgICAkY29udGVudEVsLmNzcyh7XHJcbiAgICAgICAgaGVpZ2h0OiAkZWwuaGVpZ2h0KCkgKyBcInB4XCIsXHJcbiAgICAgICAgXCJvdmVyZmxvdy15XCI6IFwic2Nyb2xsXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgICBob29rKFwib25EZXN0cm95XCIpO1xyXG4gICAgICAkZWwucmVtb3ZlRGF0YShcInBsdWdpbl9cIiArIHBsdWdpbk5hbWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGhvb2soaG9va05hbWUpIHtcclxuICAgICAgaWYgKG9wdGlvbnNbaG9va05hbWVdICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBvcHRpb25zW2hvb2tOYW1lXS5jYWxsKGVsKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGluaXQoKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG9wdGlvbjogb3B0aW9uLFxyXG4gICAgICBkZXN0cm95OiBkZXN0cm95LFxyXG4gICAgICByZWNhbGN1bGF0ZTogcmVjYWxjdWxhdGUsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgJC5mbltwbHVnaW5OYW1lXSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICBpZiAodHlwZW9mIGFyZ3VtZW50c1swXSA9PT0gXCJzdHJpbmdcIikge1xyXG4gICAgICB2YXIgbWV0aG9kTmFtZSA9IGFyZ3VtZW50c1swXTtcclxuICAgICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xyXG4gICAgICB2YXIgcmV0dXJuVmFsO1xyXG4gICAgICB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgICQuZGF0YSh0aGlzLCBcInBsdWdpbl9cIiArIHBsdWdpbk5hbWUpICYmXHJcbiAgICAgICAgICB0eXBlb2YgJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgcGx1Z2luTmFtZSlbbWV0aG9kTmFtZV0gPT09IFwiZnVuY3Rpb25cIlxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgcmV0dXJuVmFsID0gJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgcGx1Z2luTmFtZSlbbWV0aG9kTmFtZV0uYXBwbHkodGhpcywgYXJncyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIiBcIiArIG1ldGhvZE5hbWUgKyBcIiBcIiArIHBsdWdpbk5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAocmV0dXJuVmFsICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICByZXR1cm4gcmV0dXJuVmFsO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKF90eXBlb2Yob3B0aW9ucykgPT09IFwib2JqZWN0XCIgfHwgIW9wdGlvbnMpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCEkLmRhdGEodGhpcywgXCJwbHVnaW5fXCIgKyBwbHVnaW5OYW1lKSkge1xyXG4gICAgICAgICAgJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgcGx1Z2luTmFtZSwgbmV3IFBsdWdpbih0aGlzLCBvcHRpb25zKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICAkLmZuW3BsdWdpbk5hbWVdLmRlZmF1bHRzID0ge1xyXG4gICAgb25Jbml0OiBmdW5jdGlvbiBvbkluaXQoKSB7fSxcclxuICAgIG9uRGVzdHJveTogZnVuY3Rpb24gb25EZXN0cm95KCkge30sXHJcbiAgICB3cmFwQ29udGVudDogdHJ1ZSxcclxuICAgIGF1dG9IaWRlOiBmYWxzZSxcclxuICB9O1xyXG59KShqUXVlcnkpO1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgJChcIi5jc2NybGItc2Nyb2xsYWJsZVwiKS5jc2NybGIoKTtcclxufSk7IC8vIGNhdGFsb2dcclxuXHJcbigoKSA9PiB7XHJcbiAgY29uc3QgYnV0dG9uRGVmYXVsdFZpZXcgPSAkKFwiLmJ1dHRvbjFcIik7XHJcbiAgY29uc3QgYnV0dG9uV2lkZVZpZXcgPSAkKFwiLmJ1dHRvbjJcIik7XHJcbiAgY29uc3QgYnV0dG9uTGluZVZpZXcgPSAkKFwiLmJ1dHRvbjNcIik7XHJcbiAgY29uc3QgaXRlbXMgPSAkKFwiLnByb2R1Y3QtaXRlbVwiKTtcclxuXHJcbiAgYnV0dG9uV2lkZVZpZXcuY2xpY2soKGV2ZW50KSA9PiB7XHJcbiAgICBidXR0b25EZWZhdWx0Vmlldy5yZW1vdmVDbGFzcyhcImN1cnJlbnRcIik7XHJcbiAgICBidXR0b25MaW5lVmlldy5yZW1vdmVDbGFzcyhcImN1cnJlbnRcIik7XHJcbiAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmFkZENsYXNzKFwiY3VycmVudFwiKTtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY2F0YWxvZ0dyaWRcIiwgXCJ3aWRlXCIpO1xyXG4gICAgaXRlbXMucmVtb3ZlQ2xhc3MoXCJwcm9kdWN0LWl0ZW0tLWxpbmVcIik7XHJcbiAgICBpdGVtcy5hZGRDbGFzcyhcInByb2R1Y3QtaXRlbS0td2lkZVwiKTtcclxuICB9KTtcclxuXHJcbiAgYnV0dG9uTGluZVZpZXcuY2xpY2soKGV2ZW50KSA9PiB7XHJcbiAgICBidXR0b25XaWRlVmlldy5yZW1vdmVDbGFzcyhcImN1cnJlbnRcIik7XHJcbiAgICBidXR0b25EZWZhdWx0Vmlldy5yZW1vdmVDbGFzcyhcImN1cnJlbnRcIik7XHJcbiAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmFkZENsYXNzKFwiY3VycmVudFwiKTtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY2F0YWxvZ0dyaWRcIiwgXCJ3aWRlXCIpO1xyXG4gICAgaXRlbXMucmVtb3ZlQ2xhc3MoXCJwcm9kdWN0LWl0ZW0tLXdpZGVcIik7XHJcbiAgICBpdGVtcy5hZGRDbGFzcyhcInByb2R1Y3QtaXRlbS0tbGluZVwiKTtcclxuICB9KTtcclxuXHJcbiAgYnV0dG9uRGVmYXVsdFZpZXcuY2xpY2soKGV2ZW50KSA9PiB7XHJcbiAgICBidXR0b25XaWRlVmlldy5yZW1vdmVDbGFzcyhcImN1cnJlbnRcIik7XHJcbiAgICBidXR0b25MaW5lVmlldy5yZW1vdmVDbGFzcyhcImN1cnJlbnRcIik7XHJcbiAgICAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmFkZENsYXNzKFwiY3VycmVudFwiKTtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY2F0YWxvZ0dyaWRcIiwgXCJkZWZhdWx0XCIpO1xyXG4gICAgaXRlbXMucmVtb3ZlQ2xhc3MoXCJwcm9kdWN0LWl0ZW0tLXdpZGVcIik7XHJcbiAgICBpdGVtcy5yZW1vdmVDbGFzcyhcInByb2R1Y3QtaXRlbS0tbGluZVwiKTtcclxuICB9KTtcclxufSkoKTtcclxuLyogcmFuZ2Ugc2xpZGVyICovXHJcblxyXG52YXIga2V5cHJlc3NTbGlkZXJzID0gJChcIi5yYW5nZS1zbGlkZXJcIik7XHJcbiQoa2V5cHJlc3NTbGlkZXJzKS5lYWNoKGZ1bmN0aW9uIChpbmRleCwga2V5cHJlc3NTbGlkZXIpIHtcclxuICB2YXIgZmllbGRfbmFtZSA9ICQoa2V5cHJlc3NTbGlkZXIpLmRhdGEoXCJuYW1lXCIpO1xyXG4gIHZhciBpbnB1dDAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImlkX1wiICsgZmllbGRfbmFtZSArIFwiXzBcIik7XHJcbiAgdmFyIGlucHV0MSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaWRfXCIgKyBmaWVsZF9uYW1lICsgXCJfMVwiKTtcclxuICB2YXIgaW5wdXRzID0gW2lucHV0MCwgaW5wdXQxXTtcclxuXHJcbiAgaWYgKGlucHV0MCAmJiBpbnB1dDEpIHtcclxuICAgIHZhciBzdGFydFZhbCA9IHBhcnNlSW50KGlucHV0MC5kYXRhc2V0LmN1cnJlbnRWYWx1ZSksXHJcbiAgICAgIGVuZFZhbCA9IHBhcnNlSW50KGlucHV0MS5kYXRhc2V0LmN1cnJlbnRWYWx1ZSk7XHJcbiAgICB2YXIgbWluVmFsID0gcGFyc2VJbnQoaW5wdXQwLmRhdGFzZXQubWluVmFsdWUpLFxyXG4gICAgICBtYXhWYWwgPSBwYXJzZUludChpbnB1dDEuZGF0YXNldC5tYXhWYWx1ZSk7XHJcbiAgfVxyXG5cclxuICB2YXIgcG9zdGZpeCA9IFwiXCI7XHJcblxyXG4gIGlmIChmaWVsZF9uYW1lID09IFwicHJpY2VfcmFuZ2VcIikge1xyXG4gICAgcG9zdGZpeCA9IFwiIOKCvVwiO1xyXG4gIH1cclxuXHJcbiAgaWYgKHR5cGVvZiBub1VpU2xpZGVyICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICBub1VpU2xpZGVyLmNyZWF0ZShrZXlwcmVzc1NsaWRlciwge1xyXG4gICAgICBzdGFydDogW3N0YXJ0VmFsLCBlbmRWYWxdLFxyXG4gICAgICBjb25uZWN0OiB0cnVlLFxyXG4gICAgICByYW5nZToge1xyXG4gICAgICAgIG1pbjogbWluVmFsLFxyXG4gICAgICAgIG1heDogbWF4VmFsLFxyXG4gICAgICB9LFxyXG4gICAgICBmb3JtYXQ6IHdOdW1iKHtcclxuICAgICAgICBkZWNpbWFsczogMCxcclxuICAgICAgICB0aG91c2FuZDogXCIgXCIsXHJcbiAgICAgICAgcG9zdGZpeDogcG9zdGZpeCxcclxuICAgICAgfSksXHJcbiAgICAgIHN0ZXA6IDEsXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGlmIChrZXlwcmVzc1NsaWRlciAhPT0gbnVsbCAmJiBrZXlwcmVzc1NsaWRlci5ub1VpU2xpZGVyKSB7XHJcbiAgICBrZXlwcmVzc1NsaWRlci5ub1VpU2xpZGVyLm9uKFwidXBkYXRlXCIsIGZ1bmN0aW9uICh2YWx1ZXMsIGhhbmRsZSkge1xyXG4gICAgICBpbnB1dHNbaGFuZGxlXS52YWx1ZSA9IHZhbHVlc1toYW5kbGVdO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBzZXRTbGlkZXJIYW5kbGUoaSwgdmFsdWUpIHtcclxuICAgIHZhciByID0gW251bGwsIG51bGxdO1xyXG4gICAgcltpXSA9IHZhbHVlO1xyXG4gICAga2V5cHJlc3NTbGlkZXIubm9VaVNsaWRlci5zZXQocik7XHJcbiAgfSAvLyBMaXN0ZW4gdG8ga2V5ZG93biBldmVudHMgb24gdGhlIGlucHV0IGZpZWxkLlxyXG5cclxuICBpbnB1dHMuZm9yRWFjaChmdW5jdGlvbiAoaW5wdXQsIGhhbmRsZSkge1xyXG4gICAgaWYgKGlucHV0ID09PSBudWxsKSByZXR1cm47XHJcbiAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgc2V0U2xpZGVySGFuZGxlKGhhbmRsZSwgdGhpcy52YWx1ZSk7XHJcbiAgICB9KTtcclxuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgIHZhciB2YWx1ZXMgPSBrZXlwcmVzc1NsaWRlci5ub1VpU2xpZGVyLmdldCgpO1xyXG4gICAgICB2YXIgdmFsdWUgPSBOdW1iZXIodmFsdWVzW2hhbmRsZV0pOyAvLyBbW2hhbmRsZTBfZG93biwgaGFuZGxlMF91cF0sIFtoYW5kbGUxX2Rvd24sIGhhbmRsZTFfdXBdXVxyXG5cclxuICAgICAgdmFyIHN0ZXBzID0ga2V5cHJlc3NTbGlkZXIubm9VaVNsaWRlci5zdGVwcygpOyAvLyBbZG93biwgdXBdXHJcblxyXG4gICAgICB2YXIgc3RlcCA9IHN0ZXBzW2hhbmRsZV07XHJcbiAgICAgIHZhciBwb3NpdGlvbjsgLy8gMTMgaXMgZW50ZXIsXHJcbiAgICAgIC8vIDM4IGlzIGtleSB1cCxcclxuICAgICAgLy8gNDAgaXMga2V5IGRvd24uXHJcblxyXG4gICAgICBzd2l0Y2ggKGUud2hpY2gpIHtcclxuICAgICAgICBjYXNlIDEzOlxyXG4gICAgICAgICAgc2V0U2xpZGVySGFuZGxlKGhhbmRsZSwgdGhpcy52YWx1ZSk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAzODpcclxuICAgICAgICAgIC8vIEdldCBzdGVwIHRvIGdvIGluY3JlYXNlIHNsaWRlciB2YWx1ZSAodXApXHJcbiAgICAgICAgICBwb3NpdGlvbiA9IHN0ZXBbMV07IC8vIGZhbHNlID0gbm8gc3RlcCBpcyBzZXRcclxuXHJcbiAgICAgICAgICBpZiAocG9zaXRpb24gPT09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uID0gMTtcclxuICAgICAgICAgIH0gLy8gbnVsbCA9IGVkZ2Ugb2Ygc2xpZGVyXHJcblxyXG4gICAgICAgICAgaWYgKHBvc2l0aW9uICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHNldFNsaWRlckhhbmRsZShoYW5kbGUsIHZhbHVlICsgcG9zaXRpb24pO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlIDQwOlxyXG4gICAgICAgICAgcG9zaXRpb24gPSBzdGVwWzBdO1xyXG5cclxuICAgICAgICAgIGlmIChwb3NpdGlvbiA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgcG9zaXRpb24gPSAxO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGlmIChwb3NpdGlvbiAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBzZXRTbGlkZXJIYW5kbGUoaGFuZGxlLCB2YWx1ZSAtIHBvc2l0aW9uKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSk7XHJcbn0pO1xyXG5cclxuLy8gYWNjb3JkaW9uXHJcbiQoXCIuYWNjX190b2dnbGU6bm90KC5ub3RfdG9nZ2xlKVwiKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gIC8vIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgdmFyICR0aGlzID0gJCh0aGlzKTtcclxuICBpZiAoJHRoaXMubmV4dCgpLmhhc0NsYXNzKFwic2hvd1wiKSkge1xyXG4gICAgJHRoaXMubmV4dCgpLnJlbW92ZUNsYXNzKFwic2hvd1wiKTtcclxuICAgICR0aGlzLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgJHRoaXMubmV4dCgpLnNsaWRlVXAoMjAwKTtcclxuICB9IGVsc2Uge1xyXG4gICAgJHRoaXMucGFyZW50KCkucGFyZW50KCkuZmluZChcImxpIC5pbm5lclwiKS5yZW1vdmVDbGFzcyhcInNob3dcIik7XHJcbiAgICAkdGhpcy5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKFwibGkgLmFjY19fdG9nZ2xlXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgJHRoaXMucGFyZW50KCkucGFyZW50KCkuZmluZChcImxpIC5pbm5lclwiKS5zbGlkZVVwKDIwMCk7XHJcbiAgICAkdGhpcy5uZXh0KCkudG9nZ2xlQ2xhc3MoXCJzaG93XCIpO1xyXG4gICAgJHRoaXMudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAkdGhpcy5uZXh0KCkuc2xpZGVUb2dnbGUoMjAwKTtcclxuICB9XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcclxuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XHJcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XHJcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XHJcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xyXG4gIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xyXG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcclxuICByZXR1cm4gQ29uc3RydWN0b3I7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKG8sIGFsbG93QXJyYXlMaWtlKSB7XHJcbiAgdmFyIGl0O1xyXG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8IG9bU3ltYm9sLml0ZXJhdG9yXSA9PSBudWxsKSB7XHJcbiAgICBpZiAoXHJcbiAgICAgIEFycmF5LmlzQXJyYXkobykgfHxcclxuICAgICAgKGl0ID0gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8pKSB8fFxyXG4gICAgICAoYWxsb3dBcnJheUxpa2UgJiYgbyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpXHJcbiAgICApIHtcclxuICAgICAgaWYgKGl0KSBvID0gaXQ7XHJcbiAgICAgIHZhciBpID0gMDtcclxuICAgICAgdmFyIEYgPSBmdW5jdGlvbiBGKCkge307XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgczogRixcclxuICAgICAgICBuOiBmdW5jdGlvbiBuKCkge1xyXG4gICAgICAgICAgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7IGRvbmU6IHRydWUgfTtcclxuICAgICAgICAgIHJldHVybiB7IGRvbmU6IGZhbHNlLCB2YWx1ZTogb1tpKytdIH07XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlOiBmdW5jdGlvbiBlKF9lKSB7XHJcbiAgICAgICAgICB0aHJvdyBfZTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGY6IEYsXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxyXG4gICAgICBcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCJcclxuICAgICk7XHJcbiAgfVxyXG4gIHZhciBub3JtYWxDb21wbGV0aW9uID0gdHJ1ZSxcclxuICAgIGRpZEVyciA9IGZhbHNlLFxyXG4gICAgZXJyO1xyXG4gIHJldHVybiB7XHJcbiAgICBzOiBmdW5jdGlvbiBzKCkge1xyXG4gICAgICBpdCA9IG9bU3ltYm9sLml0ZXJhdG9yXSgpO1xyXG4gICAgfSxcclxuICAgIG46IGZ1bmN0aW9uIG4oKSB7XHJcbiAgICAgIHZhciBzdGVwID0gaXQubmV4dCgpO1xyXG4gICAgICBub3JtYWxDb21wbGV0aW9uID0gc3RlcC5kb25lO1xyXG4gICAgICByZXR1cm4gc3RlcDtcclxuICAgIH0sXHJcbiAgICBlOiBmdW5jdGlvbiBlKF9lMikge1xyXG4gICAgICBkaWRFcnIgPSB0cnVlO1xyXG4gICAgICBlcnIgPSBfZTI7XHJcbiAgICB9LFxyXG4gICAgZjogZnVuY3Rpb24gZigpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBpZiAoIW5vcm1hbENvbXBsZXRpb24gJiYgaXQucmV0dXJuICE9IG51bGwpIGl0LnJldHVybigpO1xyXG4gICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgIGlmIChkaWRFcnIpIHRocm93IGVycjtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XHJcbiAgaWYgKCFvKSByZXR1cm47XHJcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcclxuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XHJcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcclxuICBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTtcclxuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlcclxuICAgIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xyXG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xyXG4gIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykge1xyXG4gICAgYXJyMltpXSA9IGFycltpXTtcclxuICB9XHJcbiAgcmV0dXJuIGFycjI7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcclxuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xyXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcclxuICB9XHJcbn1cclxuXHJcbnZhciBicmVha3BvaW50cyA9IHtcclxuICB4czogMCxcclxuICBzbTogNTc2LFxyXG4gIG1kOiA3NjgsXHJcbiAgbGc6IDEwMjQsXHJcbiAgeGw6IDEyODAsXHJcbn07XHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICBob21lQmFubmVyKCk7XHJcbiAgaGVhZGVyKCk7XHJcbiAgZ2FsbGVyeSgpO1xyXG4gIGxhbmRpbmdfc2xpZGVycygpO1xyXG4gIHVwKCk7XHJcbiAgY2hhdEJsb2NrKCk7XHJcbiAgdG9nZ2xlKCk7IC8vaW50ZXJhY3Rpb25cclxuXHJcbiAgbmV3INChdXN0b21JbnRlcmFjdGlvbih7XHJcbiAgICB0YXJnZXRzOiBcImEsIGJ1dHRvbiwgW2RhdGEtY3VzdG9tLWludGVyYWN0aW9uXSwgLmltYWdlLXpvb21cIixcclxuICB9KTsgLy9zbGlkZXIgY29uc3RydWN0b3JcclxuXHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zbGlkZXItY29uc3RydWN0b3JcIikuZm9yRWFjaChmdW5jdGlvbiAoJHRoaXMpIHtcclxuICAgIG5ldyBTbGlkZXJDb25zdHJ1Y3RvcigkdGhpcykuaW5pdCgpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmZ1bmN0aW9uIHRocm90dGxlKGZ1bmMsIGludGVydmFsLCBjb250ZXh0KSB7XHJcbiAgdmFyIGlzQ29vbGRvd24gPSBmYWxzZTtcclxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKGlzQ29vbGRvd24pIHJldHVybjtcclxuICAgIGZ1bmMuYXBwbHkoY29udGV4dCB8fCB0aGlzLCBhcmd1bWVudHMpO1xyXG4gICAgaXNDb29sZG93biA9IHRydWU7XHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgcmV0dXJuIChpc0Nvb2xkb3duID0gZmFsc2UpO1xyXG4gICAgfSwgaW50ZXJ2YWwpO1xyXG4gIH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIGludGVydmFsLCBjb250ZXh0KSB7XHJcbiAgdmFyIHRpbWVvdXQgPSBmYWxzZTtcclxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIF9hcmd1bWVudHMgPSBhcmd1bWVudHMsXHJcbiAgICAgIF90aGlzID0gdGhpcztcclxuXHJcbiAgICBpZiAodGltZW91dCkgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xyXG4gICAgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICBmdW5jLmFwcGx5KGNvbnRleHQgfHwgX3RoaXMsIF9hcmd1bWVudHMpO1xyXG4gICAgfSwgaW50ZXJ2YWwpO1xyXG4gIH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhvbWVCYW5uZXIoKSB7XHJcbiAgdmFyICRzbGlkZXIgPSAkKFwiLmhvbWUtYmFubmVyIC5vd2wtY2Fyb3VzZWxcIiksXHJcbiAgICBhcnJvd1ByZXYgPVxyXG4gICAgICAnPHN2ZyBjbGFzcz1cImljb25cIiB2aWV3Qm94PVwiMCAwIDEwLjUgMTguMVwiPjxwYXRoIHN0cm9rZT1cIm5vbmVcIiBkPVwiTTksMGwxLjQsMS40TDIuOCw5bDcuNiw3LjZMOSwxOC4xTDAsOUMwLDksOS4xLDAsOSwwelwiPjwvcGF0aD48L3N2Zz4nLFxyXG4gICAgYXJyb3dOZXh0ID1cclxuICAgICAgJzxzdmcgY2xhc3M9XCJpY29uXCIgdmlld0JveD1cIjAgMCAxMC41IDE4LjFcIj48cGF0aCBzdHJva2U9XCJub25lXCIgZD1cIk0xLjQsMTguMUwwLDE2LjdsNy42LTcuNkwwLDEuNUwxLjQsMGw5LDkuMUMxMC40LDkuMSwxLjMsMTguMSwxLjQsMTguMXpcIj48L3BhdGg+PC9zdmc+JztcclxuXHJcbiAgaWYgKCRzbGlkZXIubGVuZ3RoKSB7XHJcbiAgICAkc2xpZGVyLm93bENhcm91c2VsKHtcclxuICAgICAgbG9vcDogdHJ1ZSxcclxuICAgICAgbmF2OiB0cnVlLFxyXG4gICAgICBzbWFydFNwZWVkOiA1MDAsXHJcbiAgICAgIGRvdHM6IHRydWUsXHJcbiAgICAgIGl0ZW1zOiAxLFxyXG4gICAgICBsYXp5TG9hZDogdHJ1ZSxcclxuICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgIGF1dG9wbGF5VGltZW91dDogKCskc2xpZGVyLmRhdGEoXCJhdXRvcGxheS10aW1lb3V0XCIpIHx8IDUpICogMTAwMCxcclxuICAgICAgbmF2VGV4dDogW2Fycm93UHJldiwgYXJyb3dOZXh0XSxcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaGVhZGVyKCkge1xyXG4gIHZhciAkaGVhZGVyID0gJChcImhlYWRlclwiKSxcclxuICAgIGhlaWdodCxcclxuICAgIHNjcm9sbDtcclxuICBsZXQgaXNUaHJvdHRsZWQgPSBmYWxzZTtcclxuICBjaGVjaygpO1xyXG4gICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKGlzVGhyb3R0bGVkKSByZXR1cm47XHJcbiAgICBpc1Rocm90dGxlZCA9IHRydWU7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgY2hlY2soKTtcclxuICAgICAgaXNUaHJvdHRsZWQgPSBmYWxzZTtcclxuICAgIH0sIDEwMCk7XHJcbiAgfSk7XHJcblxyXG4gIGZ1bmN0aW9uIGNoZWNrKCkge1xyXG4gICAgaWYgKCEkaGVhZGVyLmhhc0NsYXNzKFwiaGVhZGVyX2xhbmRpbmdcIikpIHtcclxuICAgICAgc2Nyb2xsID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpO1xyXG4gICAgICBoZWlnaHQgPSAkaGVhZGVyLmhlaWdodCgpO1xyXG5cclxuICAgICAgaWYgKHNjcm9sbCA+IGhlaWdodCkge1xyXG4gICAgICAgICRoZWFkZXIuYWRkQ2xhc3MoXCJmaXhlZFwiKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkaGVhZGVyLnJlbW92ZUNsYXNzKFwiZml4ZWRcIik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0gLy9nYWxsZXJ5XHJcblxyXG5mdW5jdGlvbiBnYWxsZXJ5KCkge1xyXG4gIGlmICgkLmZhbmN5Ym94KSB7XHJcbiAgICAkKFwiLm93bC1pdGVtIFtkYXRhLWZhbmN5Ym94XVwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgdmFyICRzZWxlY3RvciA9ICQodGhpcylcclxuICAgICAgLnBhcmVudHMoXCIub3dsLWNhcm91c2VsXCIpXHJcbiAgICAgIC5maW5kKFwiLm93bC1pdGVtOm5vdCguY2xvbmVkKSBbZGF0YS1mYW5jeWJveF1cIik7XHJcbiAgICAgICQuZmFuY3lib3gub3BlbihcclxuICAgICAgICAkc2VsZWN0b3IsXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgc2VsZWN0b3I6ICRzZWxlY3RvcixcclxuICAgICAgICAgIGJhY2tGb2N1czogZmFsc2UsXHJcbiAgICAgICAgfSxcclxuICAgICAgICAkc2VsZWN0b3IuaW5kZXgodGhpcylcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBsYW5kaW5nX3NsaWRlcnMoKSB7XHJcbiAgdmFyICRzbGlkZXJzID0gJChcIi5sYW5kaW5nLXNsaWRlciAub3dsLWNhcm91c2VsXCIpO1xyXG5cclxuICBpZiAoJHNsaWRlcnMubGVuZ3RoKSB7XHJcbiAgICAkc2xpZGVycy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcclxuICAgICAgdmFyIGNvdW50MSwgY291bnQyLCBjb3VudDMsIGNvdW50NDtcclxuXHJcbiAgICAgIGlmICgkdGhpcy5pcyhcIi5sYW5kaW5nLXNsaWRlcl8xIC5vd2wtY2Fyb3VzZWxcIikpIHtcclxuICAgICAgICBjb3VudDEgPSAyO1xyXG4gICAgICAgIGNvdW50MiA9IDI7XHJcbiAgICAgICAgY291bnQzID0gMztcclxuICAgICAgICBjb3VudDQgPSA0O1xyXG4gICAgICB9IGVsc2UgaWYgKCR0aGlzLmlzKFwiLmxhbmRpbmctc2xpZGVyXzIgLm93bC1jYXJvdXNlbFwiKSkge1xyXG4gICAgICAgIGNvdW50MSA9IDE7XHJcbiAgICAgICAgY291bnQyID0gMjtcclxuICAgICAgICBjb3VudDMgPSAzO1xyXG4gICAgICAgIGNvdW50NCA9IDQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICR0aGlzLm93bENhcm91c2VsKHtcclxuICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgIG1hcmdpbjogMjAsXHJcbiAgICAgICAgcmVzcG9uc2l2ZToge1xyXG4gICAgICAgICAgMDoge1xyXG4gICAgICAgICAgICBpdGVtczogY291bnQxLFxyXG4gICAgICAgICAgICBtYXJnaW46IDE2LFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIDU3Njoge1xyXG4gICAgICAgICAgICBpdGVtczogY291bnQyLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIDc2ODoge1xyXG4gICAgICAgICAgICBpdGVtczogY291bnQzLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIDk5Mjoge1xyXG4gICAgICAgICAgICBpdGVtczogY291bnQ0LFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gdG9nZ2xlKCkge1xyXG4gIHZhciAkc2VjdGlvbiA9ICQoXCIudG9nZ2xlLXNlY3Rpb25cIiksXHJcbiAgICBzcGVlZCA9IDI1MDtcclxuICAkc2VjdGlvbi5lYWNoKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciAkdGhpcyA9ICQodGhpcyksXHJcbiAgICAgICR0b2dnbGUgPSAkdGhpcy5jaGlsZHJlbihcIi50b2dnbGUtc2VjdGlvbl9fdHJpZ2dlclwiKSxcclxuICAgICAgJGNvbnRlbnQgPSAkdGhpcy5jaGlsZHJlbihcIi50b2dnbGUtc2VjdGlvbl9fY29udGVudFwiKSxcclxuICAgICAgJGNsb3NlID0gJGNvbnRlbnQuZmluZChcIi50b2dnbGUtc2VjdGlvbl9fY2xvc2VcIiksXHJcbiAgICAgIHN0YXRlID0gJHRoaXMuaGFzQ2xhc3MoXCJhY3RpdmVcIikgPyB0cnVlIDogZmFsc2UsXHJcbiAgICAgIGluaXRpYWxpemVkO1xyXG4gICAgJHRvZ2dsZS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgc3RhdGUgPSAhc3RhdGUgPyB0cnVlIDogZmFsc2U7XHJcbiAgICAgIGNoZWNrKCk7XHJcbiAgICB9KTtcclxuICAgICRjbG9zZS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgc3RhdGUgPSBmYWxzZTtcclxuICAgICAgY2hlY2soKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGlmICgkdGhpcy5pcyhcIltkYXRhLWhvdmVyXVwiKSkge1xyXG4gICAgICB2YXIgdGltZW91dDtcclxuICAgICAgJHRvZ2dsZS5hZGQoJGNvbnRlbnQpLm9uKFwibW91c2VlbnRlclwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBpZiAoIWlzVG91Y2gpIHtcclxuICAgICAgICAgIGlmICh0aW1lb3V0KSBjbGVhclRpbWVvdXQodGltZW91dCk7XHJcbiAgICAgICAgICBzdGF0ZSA9IHRydWU7XHJcbiAgICAgICAgICBjaGVjaygpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgICR0b2dnbGUuYWRkKCRjb250ZW50KS5vbihcIm1vdXNlbGVhdmVcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKCFpc1RvdWNoKSB7XHJcbiAgICAgICAgICB2YXIgZGVsYXk7XHJcblxyXG4gICAgICAgICAgaWYgKCQodGhpcykuaXMoJHRvZ2dsZSkpIHtcclxuICAgICAgICAgICAgZGVsYXkgPSA1MDA7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBkZWxheSA9IDEwMDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHN0YXRlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGNoZWNrKCk7XHJcbiAgICAgICAgICB9LCBkZWxheSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoJHRoaXMuaXMoXCJbZGF0YS1vdXQtaGlkZV1cIikgfHwgJHRoaXMuaXMoXCJbZGF0YS1ob3Zlcl1cIikpIHtcclxuICAgICAgJChkb2N1bWVudCkub24oXCJjbGljayB0b3VjaHN0YXJ0XCIsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgIHZhciAkdGFyZ2V0ID0gJChldmVudC50YXJnZXQpO1xyXG5cclxuICAgICAgICBpZiAoISR0YXJnZXQuY2xvc2VzdCgkY29udGVudCkubGVuZ3RoICYmICEkdGFyZ2V0LmNsb3Nlc3QoJHRvZ2dsZSkubGVuZ3RoICYmIHN0YXRlKSB7XHJcbiAgICAgICAgICBzdGF0ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgY2hlY2soKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNoZWNrKCkge1xyXG4gICAgICBpZiAoc3RhdGUpIHtcclxuICAgICAgICAkdGhpcy5hZGQoJGNvbnRlbnQpLmFkZCgkdG9nZ2xlKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuXHJcbiAgICAgICAgaWYgKCR0aGlzLmlzKFwiW2RhdGEtc2xpZGVdXCIpKSB7XHJcbiAgICAgICAgICAkY29udGVudC5zbGlkZURvd24oc3BlZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkdGhpcy5hZGQoJHRvZ2dsZSkuYWRkKCRjb250ZW50KS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcclxuXHJcbiAgICAgICAgaWYgKCR0aGlzLmlzKFwiW2RhdGEtc2xpZGVdXCIpKSB7XHJcbiAgICAgICAgICBpZiAoaW5pdGlhbGl6ZWQpIHtcclxuICAgICAgICAgICAgJGNvbnRlbnQuc3RvcCgpLnNsaWRlVXAoc3BlZWQpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJGNvbnRlbnQuaGlkZSgwKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjaGVjaygpO1xyXG4gICAgaW5pdGlhbGl6ZWQgPSB0cnVlO1xyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiB1cCgpIHtcclxuICB2YXIgJGJ0biA9ICQoXCIuanMtdXBcIik7XHJcblxyXG4gIGZ1bmN0aW9uIGNoZWNrKCkge1xyXG4gICAgdmFyIHNjcm9sbCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcclxuXHJcbiAgICBpZiAoc2Nyb2xsID4gNTApIHtcclxuICAgICAgJGJ0bi5hZGRDbGFzcyhcInZpc2libGVcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAkYnRuLnJlbW92ZUNsYXNzKFwidmlzaWJsZVwiKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGxldCBpc1Rocm90dGxlZCA9IGZhbHNlO1xyXG4gICQod2luZG93KS5vbihcInNjcm9sbFwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZiAoaXNUaHJvdHRsZWQpIHJldHVybjtcclxuICAgIGlzVGhyb3R0bGVkID0gdHJ1ZTtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBjaGVjaygpO1xyXG4gICAgICBpc1Rocm90dGxlZCA9IGZhbHNlO1xyXG4gICAgfSwgMTAwKTtcclxuICB9KTtcclxuICBjaGVjaygpO1xyXG4gICRidG4ub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAkKFwiaHRtbCwgYm9keVwiKS5hbmltYXRlKFxyXG4gICAgICB7XHJcbiAgICAgICAgc2Nyb2xsVG9wOiAwLFxyXG4gICAgICB9LFxyXG4gICAgICA1MDBcclxuICAgICk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNoYXRCbG9jaygpIHtcclxuICB2YXIgJGJsb2NrID0gJChcIi5jaGF0LWJsb2NrXCIpLFxyXG4gICAgJG9wZW4gPSAkKFwiW2RhdGEtY2hhdC1vcGVuXVwiKSxcclxuICAgICRjbG9zZSA9ICQoXCJbZGF0YS1jaGF0LWNsb3NlXVwiKTtcclxuICAkb3Blbi5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICRibG9jay5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICB9KTtcclxuICAkY2xvc2Uub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAkYmxvY2sucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgfSk7XHJcbn1cclxuXHJcbnZhciDQoXVzdG9tSW50ZXJhY3Rpb24gPSBmdW5jdGlvbiDQoXVzdG9tSW50ZXJhY3Rpb24oKSB7XHJcbiAgdmFyIF90aGlzMiA9IHRoaXM7XHJcblxyXG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcclxuXHJcbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsINChdXN0b21JbnRlcmFjdGlvbik7XHJcblxyXG4gIHRoaXMudGFyZ2V0cyA9IG9wdGlvbnMudGFyZ2V0cztcclxuICB0aGlzLnRvdWNoZW5kRGVsYXkgPSBvcHRpb25zLnRvdWNoZW5kRGVsYXkgfHwgMTAwOyAvL21zXHJcblxyXG4gIHZhciBldmVudHMgPSBmdW5jdGlvbiBldmVudHMoZXZlbnQpIHtcclxuICAgIHZhciAkdGFyZ2V0cyA9IFtdO1xyXG4gICAgJHRhcmdldHNbMF0gPSBldmVudC50YXJnZXQgIT09IGRvY3VtZW50ID8gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoX3RoaXMyLnRhcmdldHMpIDogbnVsbDtcclxuICAgIHZhciAkZWxlbWVudCA9ICR0YXJnZXRzWzBdLFxyXG4gICAgICBpID0gMDtcclxuXHJcbiAgICB3aGlsZSAoJHRhcmdldHNbMF0pIHtcclxuICAgICAgJGVsZW1lbnQgPSAkZWxlbWVudC5wYXJlbnROb2RlO1xyXG5cclxuICAgICAgaWYgKCRlbGVtZW50ICE9PSBkb2N1bWVudCkge1xyXG4gICAgICAgIGlmICgkZWxlbWVudC5tYXRjaGVzKCR0YXJnZXRzLnZhbHVlKSkge1xyXG4gICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgJHRhcmdldHNbaV0gPSAkZWxlbWVudDtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgIH0gLy90b3VjaHN0YXJ0XHJcblxyXG4gICAgaWYgKGV2ZW50LnR5cGUgPT0gXCJ0b3VjaHN0YXJ0XCIpIHtcclxuICAgICAgX3RoaXMyLnRvdWNoZWQgPSB0cnVlO1xyXG4gICAgICBpZiAoX3RoaXMyLnRpbWVvdXQpIGNsZWFyVGltZW91dChfdGhpczIudGltZW91dCk7XHJcblxyXG4gICAgICBpZiAoJHRhcmdldHNbMF0pIHtcclxuICAgICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoJHRhcmdldHMpLFxyXG4gICAgICAgICAgX3N0ZXA7XHJcblxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOyApIHtcclxuICAgICAgICAgICAgdmFyICR0YXJnZXQgPSBfc3RlcC52YWx1ZTtcclxuICAgICAgICAgICAgJHRhcmdldC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXRvdWNoXCIsIFwiXCIpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTtcclxuICAgICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgICAgX2l0ZXJhdG9yLmYoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC8vdG91Y2hlbmRcclxuICAgIGVsc2UgaWYgKGV2ZW50LnR5cGUgPT0gXCJ0b3VjaGVuZFwiIHx8IChldmVudC50eXBlID09IFwiY29udGV4dG1lbnVcIiAmJiBfdGhpczIudG91Y2hlZCkpIHtcclxuICAgICAgX3RoaXMyLnRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBfdGhpczIudG91Y2hlZCA9IGZhbHNlO1xyXG4gICAgICB9LCBfdGhpczIudG91Y2hlbmREZWxheSk7XHJcblxyXG4gICAgICBpZiAoJHRhcmdldHNbMF0pIHtcclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoJHRhcmdldHMpLFxyXG4gICAgICAgICAgICBfc3RlcDI7XHJcblxyXG4gICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTsgKSB7XHJcbiAgICAgICAgICAgICAgdmFyIF8kdGFyZ2V0ID0gX3N0ZXAyLnZhbHVlO1xyXG5cclxuICAgICAgICAgICAgICBfJHRhcmdldC5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLXRvdWNoXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7XHJcbiAgICAgICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgICAgICBfaXRlcmF0b3IyLmYoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9LCBfdGhpczIudG91Y2hlbmREZWxheSk7XHJcbiAgICAgIH1cclxuICAgIH0gLy9tb3VzZWVudGVyXHJcblxyXG4gICAgaWYgKFxyXG4gICAgICBldmVudC50eXBlID09IFwibW91c2VlbnRlclwiICYmXHJcbiAgICAgICFfdGhpczIudG91Y2hlZCAmJlxyXG4gICAgICAkdGFyZ2V0c1swXSAmJlxyXG4gICAgICAkdGFyZ2V0c1swXSA9PSBldmVudC50YXJnZXRcclxuICAgICkge1xyXG4gICAgICAkdGFyZ2V0c1swXS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWhvdmVyXCIsIFwiXCIpO1xyXG4gICAgfVxyXG4gICAgLy9tb3VzZWxlYXZlXHJcbiAgICBlbHNlIGlmIChcclxuICAgICAgZXZlbnQudHlwZSA9PSBcIm1vdXNlbGVhdmVcIiAmJlxyXG4gICAgICAhX3RoaXMyLnRvdWNoZWQgJiZcclxuICAgICAgJHRhcmdldHNbMF0gJiZcclxuICAgICAgJHRhcmdldHNbMF0gPT0gZXZlbnQudGFyZ2V0XHJcbiAgICApIHtcclxuICAgICAgJHRhcmdldHNbMF0ucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS1jbGlja1wiKTtcclxuICAgICAgJHRhcmdldHNbMF0ucmVtb3ZlQXR0cmlidXRlKFwiZGF0YS1ob3ZlclwiKTtcclxuICAgIH0gLy9tb3VzZWRvd25cclxuXHJcbiAgICBpZiAoZXZlbnQudHlwZSA9PSBcIm1vdXNlZG93blwiICYmICFfdGhpczIudG91Y2hlZCAmJiAkdGFyZ2V0c1swXSkge1xyXG4gICAgICAkdGFyZ2V0c1swXS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWNsaWNrXCIsIFwiXCIpO1xyXG4gICAgfVxyXG4gICAgLy9tb3VzZXVwXHJcbiAgICBlbHNlIGlmIChldmVudC50eXBlID09IFwibW91c2V1cFwiICYmICFfdGhpczIudG91Y2hlZCAmJiAkdGFyZ2V0c1swXSkge1xyXG4gICAgICAkdGFyZ2V0c1swXS5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLWNsaWNrXCIpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsIGV2ZW50cyk7XHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsIGV2ZW50cyk7XHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgZXZlbnRzLCB0cnVlKTtcclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLCBldmVudHMsIHRydWUpO1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgZXZlbnRzKTtcclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCBldmVudHMpO1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjb250ZXh0bWVudVwiLCBldmVudHMpO1xyXG59O1xyXG5cclxudmFyIFNsaWRlckNvbnN0cnVjdG9yID0gLyojX19QVVJFX18qLyAoZnVuY3Rpb24gKCkge1xyXG4gIGZ1bmN0aW9uIFNsaWRlckNvbnN0cnVjdG9yKGVsZW1lbnQpIHtcclxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTbGlkZXJDb25zdHJ1Y3Rvcik7XHJcblxyXG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuICB9XHJcblxyXG4gIF9jcmVhdGVDbGFzcyhTbGlkZXJDb25zdHJ1Y3RvciwgW1xyXG4gICAge1xyXG4gICAgICBrZXk6IFwiaW5pdFwiLFxyXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdCgpIHtcclxuICAgICAgICB2YXIgX3RoaXMzID0gdGhpcztcclxuXHJcbiAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcclxuICAgICAgICB0aGlzLnBhcmFtcy5hdXRvcGxheSA9IHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWF1dG9wbGF5LXRpbWVvdXRcIikgIT09IG51bGw7XHJcbiAgICAgICAgdGhpcy5wYXJhbXMuYXV0b3BsYXlUaW1lb3V0ID0gK3RoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWF1dG9wbGF5LXRpbWVvdXRcIikgfHwgNTAwMDtcclxuICAgICAgICB0aGlzLnBhcmFtcy5hcnJvd3MgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1uby1hcnJvd3NcIikgPT09IG51bGwgPyB0cnVlIDogZmFsc2U7XHJcblxyXG4gICAgICAgIGNvbnN0IG1lZGlhUXVlcnkgPSB3aW5kb3cubWF0Y2hNZWRpYShcIihtaW4td2lkdGg6IDU3NS45OHB4KVwiKTtcclxuICAgICAgICAvLyBDaGVjayBpZiB0aGUgbWVkaWEgcXVlcnkgaXMgdHJ1ZVxyXG4gICAgICAgIGlmIChtZWRpYVF1ZXJ5Lm1hdGNoZXMpIHtcclxuICAgICAgICAgIHRoaXMucGFyYW1zLmRvdHMgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1uby1kb3RzXCIpID09PSBudWxsID8gdHJ1ZSA6IGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLnBhcmFtcy5kb3RzID0gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMucGFyYW1zLmFkYXB0aXZlSGVpZ2h0ID0gdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtYWRhcHRpdmUtaGVpZ2h0XCIpICE9PSBudWxsO1xyXG4gICAgICAgIHRoaXMucGFyYW1zLmNlbnRlck1vZGUgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1jZW50ZXJcIikgPT09IG51bGwgPyBmYWxzZSA6IHRydWU7XHJcbiAgICAgICAgdGhpcy5wYXJhbXMuY291bnQgPSB7fTtcclxuICAgICAgICB0aGlzLnBhcmFtcy5jb3VudC54cyA9ICt0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1zbGlkZXNcIikgfHwgMTtcclxuICAgICAgICB0aGlzLnBhcmFtcy5jb3VudC5zbSA9ICt0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1zbS1zbGlkZXNcIikgfHwgdGhpcy5wYXJhbXMuY291bnQueHM7XHJcbiAgICAgICAgdGhpcy5wYXJhbXMuY291bnQubWQgPSArdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtbWQtc2xpZGVzXCIpIHx8IHRoaXMucGFyYW1zLmNvdW50LnNtO1xyXG4gICAgICAgIHRoaXMucGFyYW1zLmNvdW50LmxnID0gK3RoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWxnLXNsaWRlc1wiKSB8fCB0aGlzLnBhcmFtcy5jb3VudC5tZDtcclxuICAgICAgICB0aGlzLnBhcmFtcy5jb3VudC54bCA9ICt0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS14bC1zbGlkZXNcIikgfHwgdGhpcy5wYXJhbXMuY291bnQubGc7XHJcbiAgICAgICAgdGhpcy5wYXJhbXMucm93cyA9IHt9O1xyXG4gICAgICAgICh0aGlzLnBhcmFtcy5yb3dzLnhzID0gK3RoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXJvd3NcIikgfHwgMSksXHJcbiAgICAgICAgICAodGhpcy5wYXJhbXMucm93cy5zbSA9ICt0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS1zbS1yb3dzXCIpIHx8IHRoaXMucGFyYW1zLnJvd3MueHMpLFxyXG4gICAgICAgICAgKHRoaXMucGFyYW1zLnJvd3MubWQgPSArdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtbWQtcm93c1wiKSB8fCB0aGlzLnBhcmFtcy5yb3dzLnNtKSxcclxuICAgICAgICAgICh0aGlzLnBhcmFtcy5yb3dzLmxnID0gK3RoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWxnLXJvd3NcIikgfHwgdGhpcy5wYXJhbXMucm93cy5tZCksXHJcbiAgICAgICAgICAodGhpcy5wYXJhbXMucm93cy54bCA9ICt0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS14bC1yb3dzXCIpIHx8IHRoaXMucGFyYW1zLnJvd3MubGcpO1xyXG4gICAgICAgIHRoaXMucGFyYW1zLnN0YXRlID0ge307XHJcbiAgICAgICAgT2JqZWN0LmtleXMoYnJlYWtwb2ludHMpLmZvckVhY2goZnVuY3Rpb24gKGtleSwgaW5kZXgpIHtcclxuICAgICAgICAgIHZhciBicmVha3BvaW50ID0gaW5kZXggIT09IDAgPyBcIi1cIiArIGtleSArIFwiLVwiIDogXCItXCI7XHJcblxyXG4gICAgICAgICAgdmFyIGF0dHIgPSBfdGhpczMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJkYXRhXCIuY29uY2F0KGJyZWFrcG9pbnQsIFwibW91bnRlZFwiKSk7XHJcblxyXG4gICAgICAgICAgaWYgKGF0dHIgPT09IG51bGwgJiYgaW5kZXggIT09IDApIHtcclxuICAgICAgICAgICAgdmFyIHByZXZLZXkgPSBPYmplY3Qua2V5cyhicmVha3BvaW50cylbaW5kZXggLSAxXTtcclxuICAgICAgICAgICAgX3RoaXMzLnBhcmFtcy5zdGF0ZVtrZXldID0gX3RoaXMzLnBhcmFtcy5zdGF0ZVtwcmV2S2V5XTtcclxuICAgICAgICAgIH0gZWxzZSBpZiAoYXR0ciA9PT0gXCJ0cnVlXCIgfHwgKGluZGV4ID09PSAwICYmIGF0dHIgIT09IFwiZmFsc2VcIikpIHtcclxuICAgICAgICAgICAgX3RoaXMzLnBhcmFtcy5zdGF0ZVtrZXldID0gdHJ1ZTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIF90aGlzMy5wYXJhbXMuc3RhdGVba2V5XSA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc2xpZGVzID0gW107XHJcbiAgICAgICAgdGhpcy5jb250YWluc01vYmlsZUhpZGRlblNsaWRlcyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5jaGlsZE5vZGVzLmZvckVhY2goZnVuY3Rpb24gKHNsaWRlKSB7XHJcbiAgICAgICAgICBpZiAoIXNsaWRlLnRhZ05hbWUpIHJldHVybjtcclxuXHJcbiAgICAgICAgICBpZiAoc2xpZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1zbGlkZS1tb2JpbGUtaGlkZGVuXCIpICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIF90aGlzMy5jb250YWluc01vYmlsZUhpZGRlblNsaWRlcyA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgX3RoaXMzLnNsaWRlcy5wdXNoKHNsaWRlKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmNyZWF0ZUljb25zKCk7XHJcbiAgICAgICAgdGhpcy5jaGVja1NsaWRlclN0YXRlKCk7XHJcbiAgICAgICAgdGhpcy5jaGVja1NsaWRlclN0YXRlRGVib3VuY2VkID0gZGVib3VuY2UodGhpcy5jaGVja1NsaWRlclN0YXRlLCA1MDAsIHRoaXMpO1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHRoaXMuY2hlY2tTbGlkZXJTdGF0ZURlYm91bmNlZCk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBrZXk6IFwiY3JlYXRlSWNvbnNcIixcclxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZUljb25zKCkge1xyXG4gICAgICAgIHZhciBsZWZ0SWNvbiA9XHJcbiAgICAgICAgICAnXFxuICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDExIDE5XCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cXG4gICAgICAgIDxwYXRoIGQ9XCJNMS40IDE4LjFMMCAxNi43TDcuNiA5LjEwMDAxTDAgMS41TDEuNCAwTDEwLjQgOS4xMDAwMUMxMC40IDkuMTAwMDEgMS4zIDE4LjEgMS40IDE4LjFaXCIvPlxcbiAgICAgIDwvc3ZnPlxcbiAgICAnO1xyXG4gICAgICAgIHZhciByaWdodEljb24gPVxyXG4gICAgICAgICAgJ1xcbiAgICAgIDxzdmcgdmlld0JveD1cIjAgMCAxMSAxOVwiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XFxuICAgICAgICA8cGF0aCBkPVwiTTkuMDAwMzkgNy4yNDc5MmUtMDVMMTAuNDAwNCAxLjQwMDA3TDIuODAwMzkgOS4wMDAwOUwxMC40MDA0IDE2LjYwMDFMOS4wMDAzOSAxOC4xMDAxTDAuMDAwMzkxMDA2IDkuMDAwMDlDMC4wMDAzOTEwMDYgOS4wMDAwOSA5LjEwMDM5IDcuMjQ3OTJlLTA1IDkuMDAwMzkgNy4yNDc5MmUtMDVaXCIvPlxcbiAgICAgIDwvc3ZnPlxcbiAgICAnO1xyXG4gICAgICAgIHZhciBsZWZ0SWNvbkNsYXNzID0gXCJjdXN0b20taWNvbi1sZWZ0XCI7XHJcbiAgICAgICAgdmFyIHJpZ2h0SWNvbkNsYXNzID0gXCJjdXN0b20taWNvbi1yaWdodFwiO1xyXG4gICAgICAgIHZhciBjdXN0b21JY29ucyA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFxyXG4gICAgICAgICAgXCIuXCIuY29uY2F0KGxlZnRJY29uQ2xhc3MsIFwiLCAuXCIpLmNvbmNhdChyaWdodEljb25DbGFzcylcclxuICAgICAgICApO1xyXG4gICAgICAgIGN1c3RvbUljb25zLmZvckVhY2goZnVuY3Rpb24gKGljb24pIHtcclxuICAgICAgICAgIHZhciBpc0xlZnRJY29uID0gaWNvbi5jbGFzc0xpc3QuY29udGFpbnMobGVmdEljb25DbGFzcyk7XHJcbiAgICAgICAgICB2YXIgaXNSaWdodEljb24gPSBpY29uLmNsYXNzTGlzdC5jb250YWlucyhyaWdodEljb25DbGFzcyk7XHJcblxyXG4gICAgICAgICAgaWYgKGlzTGVmdEljb24pIHtcclxuICAgICAgICAgICAgaWNvbi5jbGFzc0xpc3QucmVtb3ZlKGxlZnRJY29uQ2xhc3MpO1xyXG4gICAgICAgICAgICBsZWZ0SWNvbiA9IGljb24ub3V0ZXJIVE1MO1xyXG4gICAgICAgICAgfSBlbHNlIGlmIChpc1JpZ2h0SWNvbikge1xyXG4gICAgICAgICAgICBpY29uLmNsYXNzTGlzdC5yZW1vdmUocmlnaHRJY29uQ2xhc3MpO1xyXG4gICAgICAgICAgICByaWdodEljb24gPSBpY29uLm91dGVySFRNTDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBpY29uLnJlbW92ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMubmV4dEFycm93ID0gJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnV0dG9uIGJ1dHRvbl9zdHlsZS0xIHNsaWNrLW5leHRcIj4nLmNvbmNhdChcclxuICAgICAgICAgIGxlZnRJY29uLFxyXG4gICAgICAgICAgXCI8L2J1dHRvbj5cIlxyXG4gICAgICAgICk7XHJcbiAgICAgICAgdGhpcy5wcmV2QXJyb3cgPSAnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidXR0b24gYnV0dG9uX3N0eWxlLTEgc2xpY2stcHJldlwiPicuY29uY2F0KFxyXG4gICAgICAgICAgcmlnaHRJY29uLFxyXG4gICAgICAgICAgXCI8L2J1dHRvbj5cIlxyXG4gICAgICAgICk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBrZXk6IFwiY2hlY2tTbGlkZXJTdGF0ZVwiLFxyXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gY2hlY2tTbGlkZXJTdGF0ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5tb3VudGVkICYmIHRoaXMuc2F2ZWRXaW5kb3dXaWR0aCA9PT0gd2luZG93LmlubmVyV2lkdGgpIHJldHVybjtcclxuICAgICAgICB0aGlzLnNhdmVkV2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMubW91bnRlZCkge1xyXG4gICAgICAgICAgdGhpcy51bm1vdW50KCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgc3RhdGU7XHJcblxyXG4gICAgICAgIGZvciAodmFyIGJyZWFrcG9pbnQgaW4gYnJlYWtwb2ludHMpIHtcclxuICAgICAgICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCA+PSBicmVha3BvaW50c1ticmVha3BvaW50XSkge1xyXG4gICAgICAgICAgICBzdGF0ZSA9IHRoaXMucGFyYW1zLnN0YXRlW2JyZWFrcG9pbnRdO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHN0YXRlKSB7XHJcbiAgICAgICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInZpc2libGVcIik7XHJcblxyXG4gICAgICAgICAgaWYgKHRoaXMuY29udGFpbnNNb2JpbGVIaWRkZW5TbGlkZXMpIHtcclxuICAgICAgICAgICAgdGhpcy5jaGVja1NsaWRlc1Zpc2liaWxpdHkoKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICB0aGlzLm1vdW50KCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwidmlzaWJsZVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBrZXk6IFwiY2hlY2tTbGlkZXNWaXNpYmlsaXR5XCIsXHJcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBjaGVja1NsaWRlc1Zpc2liaWxpdHkoKSB7XHJcbiAgICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XHJcblxyXG4gICAgICAgIHRoaXMuc2xpZGVzLmZvckVhY2goZnVuY3Rpb24gKHNsaWRlKSB7XHJcbiAgICAgICAgICBzbGlkZS5yZW1vdmUoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNsaWRlcy5mb3JFYWNoKGZ1bmN0aW9uIChzbGlkZSkge1xyXG4gICAgICAgICAgdmFyIHNob3VsZEJlSGlkZGVuID0gc2xpZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1zbGlkZS1tb2JpbGUtaGlkZGVuXCIpICE9PSBudWxsO1xyXG4gICAgICAgICAgdmFyIGJyZWFrcG9pbnQgPSB3aW5kb3cuaW5uZXJXaWR0aCA8IGJyZWFrcG9pbnRzLnNtO1xyXG5cclxuICAgICAgICAgIGlmICghKHNob3VsZEJlSGlkZGVuICYmIGJyZWFrcG9pbnQpKSB7XHJcbiAgICAgICAgICAgIF90aGlzNC5lbGVtZW50Lmluc2VydEFkamFjZW50RWxlbWVudChcImJlZm9yZWVuZFwiLCBzbGlkZSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBrZXk6IFwibW91bnRcIixcclxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50KCkge1xyXG4gICAgICAgICQodGhpcy5lbGVtZW50KS5zbGljayh7XHJcbiAgICAgICAgICBhdXRvcGxheTogdGhpcy5wYXJhbXMuYXV0b3BsYXksXHJcbiAgICAgICAgICBhdXRvcGxheVNwZWVkOiB0aGlzLnBhcmFtcy5hdXRvcGxheVRpbWVvdXQsXHJcbiAgICAgICAgICBtb2JpbGVGaXJzdDogdHJ1ZSxcclxuICAgICAgICAgIHNsaWRlc1RvU2hvdzogdGhpcy5wYXJhbXMuY291bnQueHMsXHJcbiAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogdGhpcy5wYXJhbXMuY291bnQueHMsXHJcbiAgICAgICAgICByb3dzOiB0aGlzLnBhcmFtcy5yb3dzLnhzLFxyXG4gICAgICAgICAgcHJldkFycm93OiB0aGlzLnByZXZBcnJvdyxcclxuICAgICAgICAgIG5leHRBcnJvdzogdGhpcy5uZXh0QXJyb3csXHJcbiAgICAgICAgICBhcnJvd3M6IHRoaXMucGFyYW1zLmFycm93cyxcclxuICAgICAgICAgIGFkYXB0aXZlSGVpZ2h0OiB0aGlzLnBhcmFtcy5hZGFwdGl2ZUhlaWdodCxcclxuICAgICAgICAgIGRvdHM6IHRoaXMucGFyYW1zLmRvdHMsXHJcbiAgICAgICAgICBjZW50ZXJNb2RlOiB0aGlzLnBhcmFtcy5jZW50ZXJNb2RlLFxyXG4gICAgICAgICAgYWNjZXNzaWJpbGl0eTogZmFsc2UsXHJcbiAgICAgICAgICByZXNwb25zaXZlOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBicmVha3BvaW50OiBicmVha3BvaW50cy5zbSAtIDEsXHJcbiAgICAgICAgICAgICAgc2V0dGluZ3M6IHtcclxuICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogdGhpcy5wYXJhbXMuY291bnQuc20sXHJcbiAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogdGhpcy5wYXJhbXMuY291bnQuc20sXHJcbiAgICAgICAgICAgICAgICByb3dzOiB0aGlzLnBhcmFtcy5yb3dzLnNtLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBicmVha3BvaW50OiBicmVha3BvaW50cy5tZCAtIDEsXHJcbiAgICAgICAgICAgICAgc2V0dGluZ3M6IHtcclxuICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogdGhpcy5wYXJhbXMuY291bnQubWQsXHJcbiAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogdGhpcy5wYXJhbXMuY291bnQubWQsXHJcbiAgICAgICAgICAgICAgICByb3dzOiB0aGlzLnBhcmFtcy5yb3dzLm1kLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBicmVha3BvaW50OiBicmVha3BvaW50cy5sZyAtIDEsXHJcbiAgICAgICAgICAgICAgc2V0dGluZ3M6IHtcclxuICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogdGhpcy5wYXJhbXMuY291bnQubGcsXHJcbiAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogdGhpcy5wYXJhbXMuY291bnQubGcsXHJcbiAgICAgICAgICAgICAgICByb3dzOiB0aGlzLnBhcmFtcy5yb3dzLmxnLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBicmVha3BvaW50OiBicmVha3BvaW50cy54bCAtIDEsXHJcbiAgICAgICAgICAgICAgc2V0dGluZ3M6IHtcclxuICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogdGhpcy5wYXJhbXMuY291bnQueGwsXHJcbiAgICAgICAgICAgICAgICBzbGlkZXNUb1Njcm9sbDogdGhpcy5wYXJhbXMuY291bnQueGwsXHJcbiAgICAgICAgICAgICAgICByb3dzOiB0aGlzLnBhcmFtcy5yb3dzLnhsLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICBdLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMubW91bnRlZCA9IHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBrZXk6IFwidW5tb3VudFwiLFxyXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gdW5tb3VudCgpIHtcclxuICAgICAgICAkKHRoaXMuZWxlbWVudCkuc2xpY2soXCJ1bnNsaWNrXCIpO1xyXG4gICAgICAgIHRoaXMubW91bnRlZCA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICBdKTtcclxuXHJcbiAgcmV0dXJuIFNsaWRlckNvbnN0cnVjdG9yO1xyXG59KSgpO1xyXG4iXX0=
