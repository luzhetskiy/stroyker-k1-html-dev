$(document).ready(function(){$(".category-slider .owl-carousel").owlCarousel({loop:!0,margin:20,nav:!0,items:5,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:3},768:{nav:!0,dots:!1,items:4},992:{nav:!0,items:5}}})}),$("#my-menu").mmenu({extensions:["position-front"]});var API=$("#my-menu").data("mmenu");function addButton(){$(".mm-panel .mm-navbar").append(`<button id='my-button-close'>
                                      <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none">
                                      <rect x="1.41406" width="17" height="2" rx="1" transform="rotate(45 1.41406 0)" fill="white"/>
                                      <rect y="12.0208" width="17" height="2" rx="1" transform="rotate(-45 0 12.0208)" fill="white"/>
                                      </svg></button>`)}function gid(t){return document.getElementById(t)}function close_all_mob(){var t=gid("search-result-mob"),e=gid("overlay_mob");for(i=0;i<7;i++){var o=gid("user_"+i);o&&(o.style.display="none")}t.style.display="none",e.classList.remove("show")}function find_my_div_mob(){close_all_mob();var t=gid("search-result-mob"),e=gid("overlay_mob"),o=edit_search_mob.value;if(""!=(o=o.toUpperCase()))for(i=0;i<7;i++){var n=gid("user_"+i);n&&-1!=n.innerHTML.toUpperCase().indexOf(o)&&(n.style.display="flex",t.style.display="block",e.classList.add("show"))}}function gid(t){return document.getElementById(t)}function close_all(){var t=gid("search-result");for(i=0;i<7;i++){var e=gid("user_"+i);e&&(e.style.display="none")}t.style.display="none",overlay.classList.remove("show")}function find_my_div(){close_all();var t=gid("search-result"),e=gid("overlay"),o=edit_search.value;if(""!=(o=o.toUpperCase()))for(i=0;i<7;i++){var n=gid("user_"+i);n&&-1!=n.innerHTML.toUpperCase().indexOf(o)&&(n.style.display="flex",t.style.display="block",e.classList.add("show"))}}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}$("#my-button").click(function(){API.open()}),$(".close_mm_menu").click(function(){API.close(),$(this).hide()}),addButton(),$(document).on("click",".mm-panel #my-button-close",function(){API.close()}),document.addEventListener("DOMContentLoaded",function(){document.addEventListener("click",function(t){t.target.matches(".contact-box p")&&t.target.classList.add("toggled")});var e=document.querySelector(".catalog-btn"),o=document.querySelector(".catalog-box"),n=document.querySelector(".menu-btn"),i=document.querySelector(".menu-box");document.addEventListener("click",function(t){t.target.matches(".catalog-btn")&&(e.classList.toggle("toggled"),o.classList.toggle("show"),n)&&(n.classList.remove("toggled"),i.classList.remove("show"))}),document.addEventListener("click",function(t){t.target.matches(".menu-btn")&&(n.classList.toggle("toggled"),i.classList.toggle("show"),e)&&(e.classList.remove("toggled"),o.classList.remove("show"))})}),$(document).ready(function(){$(".reveal").each(function(){var t=$(this),e=t.attr("data-reveal-delay");setTimeout(function(){t.addClass("item-revealed")},e)})}),$(document).ready(function(){$(".catalog-filter-accordion a.opener").click(function(){return $(this).parent().find("ul:first").slideToggle(),$(this).parent().toggleClass("active"),!1})}),$(".like-btn").on("click",function(t){t.preventDefault(),$(this).toggleClass("active")}),$(".city-selection__link").click(function(){$(".city-selection__list").toggle(0)}),$(window).click(function(t){t.target.classList.contains("city-selection__link")||$(".city-selection__list").toggle(!1)}),$(".burger-menu").click(function(){$(".mobile-menu").toggle(0)}),$(".catalog-inner-btn").click(function(t){t.preventDefault(),$(this).toggleClass("open"),$(".catalog-header-content").toggle(0)}),$(".catalog-inner-btn,.catalog-menu__head a").click(function(t){t.preventDefault(),$(".catalog-menu").toggle(0)}),$(".burger-catalog").click(function(t){t.preventDefault(),$(this).toggleClass("open")}),$(".share-btn").click(function(){$(".share-block__show").toggle(0)}),$(".close-panel").click(function(){$(".bottom-panel").toggle(0)}),$(".filter-btn, .close-btn-2").click(function(){$(".catalog-filter").toggle(0)}),$(".catalog-side__title").click(function(){$(".catalog-side__content").toggle(0),$(".catalog-side__content-accordeon").toggle(0)}),$(".catalog-opened").click(function(){$(".catalog-opened .submenu").toggle(0)}),$(".burger-menu").click(function(){$(this).toggleClass("menu-on")}),$(".catalog-inner").click(function(){$(this).toggleClass("open"),$(".catalog-inner-content").toggle(0)}),$(function(){$(".smoothScroll").click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var t=$(this.hash);if((t=t.length?t:$("[name="+this.hash.slice(1)+"]")).length)return $("html,body").animate({scrollTop:t.offset().top},1e3),!1}})});var bigSlides=$(".main-slider .owl-carousel"),autoPlayTimeoutSec=parseInt(bigSlides.data("autoplay-timeout")),radioButtons=(bigSlides.owlCarousel({loop:!0,margin:5,nav:!0,dots:!0,items:1,autoplay:!!autoPlayTimeoutSec,autoplayTimeout:1e3*autoPlayTimeoutSec,navText:['<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M9,0l1.4,1.4L2.8,9l7.6,7.6L9,18.1L0,9C0,9,9.1,0,9,0z"></path></svg>','<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M1.4,18.1L0,16.7l7.6-7.6L0,1.5L1.4,0l9,9.1C10.4,9.1,1.3,18.1,1.4,18.1z"></path></svg>']}),document.querySelectorAll('.delivery-selection input[type="radio"]')),choices=document.querySelectorAll(".delivery-choice"),button1=(radioButtons.forEach(function(t){t.addEventListener("change",function(){var e=this;choices.forEach(function(t){t.classList.contains(e.id)||t.classList.contains("delivery-type-"+e.value)?t.style.display="block":t.style.display="none"})})}),$(".shopping-cart-item__delete").click(function(){$(this).parent(".shopping-cart-item").remove()}),$(".slider .owl-carousel").owlCarousel({loop:!0,margin:0,items:1,nav:!0}),$(".news-slider .owl-carousel").owlCarousel({loop:!0,margin:0,items:4,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:2},768:{nav:!0,dots:!1,items:3},992:{items:4}}}),$(".action-slider .owl-carousel").owlCarousel({loop:!0,margin:20,nav:!0,dots:!1,items:3,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:2},768:{nav:!0,dots:!1,items:3}}}),$(".partners-slider .owl-carousel").owlCarousel({loop:!0,margin:0,nav:!0,dots:!1,items:5,responsive:{0:{dots:!0,nav:!1,items:1},566:{nav:!1,dots:!0,items:2},768:{nav:!1,dots:!0,items:3},900:{nav:!1,dots:!0,items:4},950:{dots:!1}}}),$(".input-number").each(function(){var e=$(this),o=e.find('input[type="number"]'),t=e.find(".order-up"),n=e.find(".order-down"),i=o.attr("min");o.attr("max");t.click(function(){var t=parseFloat(o.val())+1;e.find("input").val(t),e.find("input").trigger("change")}),o.change(function(){9<o.val()&&o.val()<=99?n.css("right",57):99<o.val()&&o.val()<=999?n.css("right",74):999<o.val()?n.css("right",90):n.css("right",45)}),n.click(function(){var t=parseFloat(o.val()),t=t<=i?t:t-1;e.find("input").val(t),e.find("input").trigger("change")})}),!function(s){s("select.custom-select").each(function(){var t=s(this),e=t.attr("id"),o=t.children("optgroup"),n="",i="";o.length?(o.each(function(){var t=s(this),e=t.attr("label");n+='<li class="optgroup">'+e+"</li>",t.children("option").each(function(){var t=s(this),e=t.attr("value"),o=t.html(),t=t.attr("selected");n+="selected"===t?'<li class="selected" data-value="'+e+'">'+(i=o)+"</li>":'<li data-value="'+e+'">'+o+"</li>"})}),t.children("option").each(function(){var t=s(this),e=t.attr("value"),o=t.html(),t=t.attr("selected");n="selected"===t?'<li class="selected" data-value="'+e+'">'+(i=o)+"</li>"+n:'<li data-value="'+e+'">'+o+"</li>"+n})):t.children("option").each(function(){var t=s(this),e=t.attr("value"),o=t.html(),t=t.attr("selected");n+="selected"===t?'<li class="selected" data-value="'+e+'">'+(i=o)+"</li>":'<li data-value="'+e+'">'+o+"</li>"}),s('<div class="dropdown-container"><div class="dropdown-select entypo-down-open-big"><svg class="icon"><use xlink:href="#tab-arrow"></use></svg><span>'+i+'</span></div><ul class="dropdown-select-ul" data-role="'+e+'">'+n+"</ul></div> \x3c!-- .custom-select-wrapper --\x3e").insertAfter(t)});var t=s(".dropdown-select"),e=s(".dropdown-select-ul"),o=s(".dropdown-select-ul li");t.on("click",function(){s(this).parent(".dropdown-container").toggleClass("active")}),e.on("mouseleave",function(){s(this).parent(".dropdown-container").removeClass("active")}),o.on("click",function(){var t,e,o,n,i,a=s(this);a.hasClass("optgroup")||(e=(t=a.parent("ul")).siblings(".dropdown-select"),o=a.html(),n=a.attr("data-value"),i="#"+t.attr("data-role"),t.parent(".dropdown-container").toggleClass("active"),a.siblings("li").removeClass("selected"),a.addClass("selected"),s(i).val(n),e.children("span").html(o))})}(jQuery),$(".tab-content").hide(),$(".tab-content:first").show(),$("ul.tabs li,.product-card__review-link a,.schedule-btn a").click(function(){$(".tab-content").hide();var t=$(this).attr("rel");$("#"+t).fadeIn(),$("ul.tabs li").removeClass("active"),$(this).addClass("active"),$(".tab_drawer_heading").removeClass("d_active"),$(".tab_drawer_heading[rel^='"+t+"']").addClass("d_active")}),$(".tab_drawer_heading").click(function(){var t=$(this).attr("rel"),e=$("#"+t+":hidden"),o=$(this).not(".d_active");$(".tab-content").hide(),e.fadeIn(),$(".tab_drawer_heading").removeClass("d_active"),o.addClass("d_active"),$("ul.tabs li").removeClass("active"),$("ul.tabs li[rel^='"+t+"']").addClass("active")}),$("ul.tabs li").last().addClass("tab_last"),jQuery(document).ready(function(){jQuery(".schedule-btn a").click(function(){jQuery(".schedule-link").toggleClass("active")})}),jQuery(document).ready(function(){jQuery(".product-card__review-link a").click(function(){jQuery(".review-tab-link").toggleClass("active")})}),$(document).ready(function(){var e=$("#sync1"),i=$("#sync2");e.owlCarousel({items:1,slideSpeed:2e3,nav:!0,autoplay:!1,dots:!0,loop:!0,responsiveRefreshRate:200,margin:10}).on("changed.owl.carousel",function(t){var e=t.item.count-1,t=Math.round(t.item.index-t.item.count/2-.5);t<0&&(t=e);e<t&&(t=0);i.find(".owl-item").removeClass("current").eq(t).addClass("current");var e=i.find(".owl-item.active").length-1,o=i.find(".owl-item.active").first().index(),n=i.find(".owl-item.active").last().index();n<t&&i.data("owl.carousel").to(t,100,!0);t<o&&i.data("owl.carousel").to(t-e,100,!0)}),i.on("initialized.owl.carousel",function(){i.find(".owl-item").eq(0).addClass("current")}).owlCarousel({items:3,dots:!0,nav:!0,margin:10,smartSpeed:200,slideSpeed:500,slideBy:3,responsiveRefreshRate:100}).on("changed.owl.carousel",function(t){{t=t.item.index;e.data("owl.carousel").to(t,100,!0)}}),i.on("click",".owl-item",function(t){t.preventDefault();t=$(this).index();e.data("owl.carousel").to(t,300,!0)})}),!function(L){var x="cscrlb";function i(t,o){var i,a,s,n,e,l=t,r=L(t),c=r.find(".cscrlb-content"),d=7/8,u="vert",h="scrollTop",m="height",p="top";function v(t){t.preventDefault();var e=t.pageY;"horiz"===u&&(e=t.pageX),n=e-s.offset()[p],L(document).on("mousemove",f),L(document).on("mouseup",g)}function f(t){t.preventDefault();var e=t.pageY,t=((e="horiz"===u?t.pageX:e)-a.offset()[p]-n)/a[m]()*c[m]();i[h](t)}function g(){L(document).off("mousemove",f),L(document).off("mouseup",g)}function w(t){var e;t.target!==s[0]&&(e=d*i[m](),t=("vert"===u?t.originalEvent.layerY:t.originalEvent.layerX)<s.position()[p]?i[h]()-e:i[h]()+e,i[h](t))}function b(t){$()}function y(){var t=c[m](),e=i[h](),o=a[m](),n=o/t,e=Math.round(n*e),n=Math.floor(n*(o+2));o<t?("vert"===u?s.css({top:e,height:n}):s.css({left:e,width:n}),a.show()):a.hide()}function $(){y(),k()}function k(){s.addClass("visible"),o.autoHide&&("number"==typeof e&&window.clearTimeout(e),e=window.setTimeout(function(){s.removeClass("visible"),"number"==typeof e&&window.clearTimeout(e)},1e3))}function _(){("vert"===u?(i.width(r.width()+C()),i):(i.width(r.width()),i.height(r.height()+C()),c)).height(r.height())}function C(){var t=L('<div class="scrollbar-width-tester" style="width:50px;height:50px;overflow-y:scroll;position:absolute;top:-200px;left:-200px;"><div style="height:100px;"></div>'),e=(L("body").append(t),L(t).innerWidth()),o=L("div",t).innerWidth();return t.remove(),e===o&&-1<navigator.userAgent.toLowerCase().indexOf("firefox")?17:e-o}function S(){_(),y()}return o=L.extend({},L.fn[x].defaults,o),window.onload=function(){c.focus()},r.hasClass("horizontal")&&(u="horiz",h="scrollLeft",m="width",p="left"),r.prepend('<div class="cscrlb-scrollbar"><div class="drag-handle"></div></div>'),a=r.find(".cscrlb-scrollbar"),s=r.find(".drag-handle"),o.wrapContent&&c.wrap('<div class="cscrlb-scroll-content" />'),i=r.find(".cscrlb-scroll-content"),_(),o.autoHide&&r.on("mouseenter",$),s.on("mousedown",v),a.on("mousedown",w),i.on("scroll",b),y(),L(window).on("resize",function(){S()}),o.autoHide||k(),{option:function(t,e){if(!e)return o[t];o[t]=e},destroy:function(){var t;c.insertBefore(a),a.remove(),i.remove(),c.css({height:r.height()+"px","overflow-y":"scroll"}),void 0!==o[t="onDestroy"]&&o[t].call(l),r.removeData("plugin_"+x)},recalculate:S}}L.fn[x]=function(t){var e,o,n;return"string"==typeof t?(e=t,o=Array.prototype.slice.call(arguments,1),this.each(function(){if(!L.data(this,"plugin_"+x)||"function"!=typeof L.data(this,"plugin_"+x)[e])throw new Error(" "+e+" "+x);n=L.data(this,"plugin_"+x)[e].apply(this,o)}),void 0!==n?n:this):"object"!==_typeof(t)&&t?void 0:this.each(function(){L.data(this,"plugin_"+x)||L.data(this,"plugin_"+x,new i(this,t))})},L.fn[x].defaults={onInit:function(){},onDestroy:function(){},wrapContent:!0,autoHide:!1}}(jQuery),$(function(){$(".cscrlb-scrollable").cscrlb()}),document.querySelector(".button1")),button2=document.querySelector(".button2"),button3=document.querySelector(".button3"),items=document.querySelectorAll(".product-item:not(.product-item--banner)"),tableHeader=document.querySelector(".product-items-header");function setActiveButton(e){[button1,button2,button3].forEach(function(t){t===e?t.classList.add("current"):t.classList.remove("current")})}function handleClickButton1(){setActiveButton(this),items.forEach(function(t){t.className="product-item"}),tableHeader.classList.remove("open")}function handleClickButton2(){setActiveButton(this),items.forEach(function(t){t.classList.add("product-item--wide"),t.classList.remove("product-item--line")}),tableHeader.classList.remove("open")}function handleClickButton3(){setActiveButton(this);var t=document.querySelectorAll(".catalog-body.catalog-body--wide");t.length&&t[0].classList.add("list-mode"),items.forEach(function(t){t.classList.add("product-item--line"),t.classList.remove("product-item--wide")}),tableHeader.classList.add("open")}button1&&button2&&button3&&(button1.addEventListener("click",handleClickButton1),button2.addEventListener("click",handleClickButton2),button3.addEventListener("click",handleClickButton3));var keypressSliders=$(".range-slider");function _defineProperties(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,o){return e&&_defineProperties(t.prototype,e),o&&_defineProperties(t,o),t}function _createForOfIteratorHelper(t,e){var o,n;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(o=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length)return o&&(t=o),n=0,{s:e=function(){},n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:e};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,s=!1;return{s:function(){o=t[Symbol.iterator]()},n:function(){var t=o.next();return a=t.done,t},e:function(t){s=!0,i=t},f:function(){try{a||null==o.return||o.return()}finally{if(s)throw i}}}}function _unsupportedIterableToArray(t,e){var o;if(t)return"string"==typeof t?_arrayLikeToArray(t,e):"Map"===(o="Object"===(o=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:o)||"Set"===o?Array.from(t):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(t,e):void 0}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var o=0,n=new Array(e);o<e;o++)n[o]=t[o];return n}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}$(keypressSliders).each(function(t,s){var e,o,n,i,a=$(s).data("name"),l=document.getElementById("id_"+a+"_0"),r=document.getElementById("id_"+a+"_1"),c=[l,r],l=(l&&r&&(e=parseInt(l.dataset.currentValue),o=parseInt(r.dataset.currentValue),n=parseInt(l.dataset.minValue),i=parseInt(r.dataset.maxValue)),"");function d(t,e){var o=[null,null];o[t]=e,s.noUiSlider.set(o)}"price_range"==a&&(l=" ₽"),"undefined"!=typeof noUiSlider&&noUiSlider.create(s,{start:[e,o],connect:!0,range:{min:n,max:i},format:wNumb({decimals:0,thousand:" ",postfix:l}),step:1}),null!==s&&s.noUiSlider&&s.noUiSlider.on("update",function(t,e){c[e].value=t[e]}),c.forEach(function(t,a){null!==t&&(t.addEventListener("change",function(){d(a,this.value)}),t.addEventListener("keydown",function(t){var e,o=s.noUiSlider.get(),n=Number(o[a]),i=s.noUiSlider.steps()[a];switch(t.which){case 13:d(a,this.value);break;case 38:null!==(e=!1===(e=i[1])?1:e)&&d(a,n+e);break;case 40:null!==(e=!1===(e=i[0])?1:e)&&d(a,n-e)}}))})}),$(".acc__toggle:not(.not_toggle)").click(function(t){var e=$(this);e.next().hasClass("show")?(e.next().removeClass("show"),e.removeClass("active"),e.next().slideUp(200)):(e.parent().parent().find("li .inner").removeClass("show"),e.parent().parent().find("li .acc__toggle").removeClass("active"),e.parent().parent().find("li .inner").slideUp(200),e.next().toggleClass("show"),e.toggleClass("active"),e.next().slideToggle(200))});var breakpoints={xs:0,sm:576,md:768,lg:1024,xl:1280};function throttle(t,e,o){var n=!1;return function(){n||(t.apply(o||this,arguments),n=!0,setTimeout(function(){return n=!1},e))}}function debounce(o,n,i){var a=!1;return function(){var t=arguments,e=this;a&&clearTimeout(a),a=setTimeout(function(){o.apply(i||e,t)},n)}}function homeBanner(){var t=$(".home-banner .owl-carousel");t.length&&t.owlCarousel({loop:!0,nav:!0,smartSpeed:500,dots:!0,items:1,lazyLoad:!0,autoplay:!0,autoplayTimeout:1e3*(+t.data("autoplay-timeout")||5),navText:['<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M9,0l1.4,1.4L2.8,9l7.6,7.6L9,18.1L0,9C0,9,9.1,0,9,0z"></path></svg>','<svg class="icon" viewBox="0 0 10.5 18.1"><path stroke="none" d="M1.4,18.1L0,16.7l7.6-7.6L0,1.5L1.4,0l9,9.1C10.4,9.1,1.3,18.1,1.4,18.1z"></path></svg>']})}function header(){var t,e=$("header");function o(){e.hasClass("header_landing")||(t=$(window).scrollTop(),e.height()<t?e.addClass("fixed"):e.removeClass("fixed"))}o(),$(window).scroll(function(){o()})}function gallery(){$.fancybox&&$(".owl-item [data-fancybox]").on("click",function(){var t=$(this).parents(".owl-carousel").find(".owl-item:not(.cloned) [data-fancybox]");return $.fancybox.open(t,{selector:t,backFocus:!1},t.index(this)),!1})}function landing_sliders(){var t=$(".landing-slider .owl-carousel");t.length&&t.each(function(){var t,e,o,n,i=$(this);i.is(".landing-slider_1 .owl-carousel")?(e=t=2,o=3,n=4):i.is(".landing-slider_2 .owl-carousel")&&(t=1,e=2,o=3,n=4),i.owlCarousel({loop:!0,margin:20,responsive:{0:{items:t,margin:16},576:{items:e},768:{items:o},992:{items:n}}})})}function toggle(){var t=$(".toggle-section");t.each(function(){var t,o,e=$(this),n=e.children(".toggle-section__trigger"),i=e.children(".toggle-section__content"),a=i.find(".toggle-section__close"),s=!!e.hasClass("active");function l(){s?(e.add(i).add(n).addClass("active"),e.is("[data-slide]")&&i.slideDown(250)):(e.add(n).add(i).removeClass("active"),e.is("[data-slide]")&&(t?i.stop().slideUp(250):i.hide(0)))}n.on("click",function(){s=!s,l()}),a.on("click",function(){s=!1,l()}),e.is("[data-hover]")&&(n.add(i).on("mouseenter",function(t){isTouch||(o&&clearTimeout(o),s=!0,l())}),n.add(i).on("mouseleave",function(t){var e;isTouch||(e=$(this).is(n)?500:100,o=setTimeout(function(){s=!1,l()},e))})),(e.is("[data-out-hide]")||e.is("[data-hover]"))&&$(document).on("click touchstart",function(t){t=$(t.target);t.closest(i).length||t.closest(n).length||!s||(s=!1,l())}),l(),t=!0})}function up(){var t=$(".js-up");function e(){50<$(window).scrollTop()?t.addClass("visible"):t.removeClass("visible")}$(window).on("scroll",function(){e()}),e(),t.on("click",function(t){t.preventDefault(),$("html, body").animate({scrollTop:0},500)})}function chatBlock(){var t=$(".chat-block"),e=$("[data-chat-open]"),o=$("[data-chat-close]");e.on("click",function(){t.addClass("active")}),o.on("click",function(){t.removeClass("active")})}$(document).ready(function(){homeBanner(),header(),gallery(),landing_sliders(),up(),chatBlock(),toggle(),new СustomInteraction({targets:"a, button, [data-custom-interaction], .image-zoom"}),document.querySelectorAll(".slider-constructor").forEach(function(t){new SliderConstructor(t).init()})});var СustomInteraction=function t(){function e(t){for(var o=[],e=(o[0]=t.target!==document?t.target.closest(s.targets):null,o[0]),n=0;o[0]&&(e=e.parentNode)!==document;)e.matches(o.value)&&(o[++n]=e);if("touchstart"==t.type){if(s.touched=!0,s.timeout&&clearTimeout(s.timeout),o[0]){var i,a=_createForOfIteratorHelper(o);try{for(a.s();!(i=a.n()).done;)i.value.setAttribute("data-touch","")}catch(t){a.e(t)}finally{a.f()}}}else("touchend"==t.type||"contextmenu"==t.type&&s.touched)&&(s.timeout=setTimeout(function(){s.touched=!1},s.touchendDelay),o[0])&&setTimeout(function(){var t,e=_createForOfIteratorHelper(o);try{for(e.s();!(t=e.n()).done;)t.value.removeAttribute("data-touch")}catch(t){e.e(t)}finally{e.f()}},s.touchendDelay);"mouseenter"==t.type&&!s.touched&&o[0]&&o[0]==t.target?o[0].setAttribute("data-hover",""):"mouseleave"==t.type&&!s.touched&&o[0]&&o[0]==t.target&&(o[0].removeAttribute("data-click"),o[0].removeAttribute("data-hover")),"mousedown"==t.type&&!s.touched&&o[0]?o[0].setAttribute("data-click",""):"mouseup"==t.type&&!s.touched&&o[0]&&o[0].removeAttribute("data-click")}var s=this,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};_classCallCheck(this,t),this.targets=o.targets,this.touchendDelay=o.touchendDelay||100;document.addEventListener("touchstart",e),document.addEventListener("touchend",e),document.addEventListener("mouseenter",e,!0),document.addEventListener("mouseleave",e,!0),document.addEventListener("mousedown",e),document.addEventListener("mouseup",e),document.addEventListener("contextmenu",e)},SliderConstructor=function(){function e(t){_classCallCheck(this,e),this.element=t}return _createClass(e,[{key:"init",value:function(){var i=this,t=(this.params={},this.params.autoplay=null!==this.element.getAttribute("data-autoplay-timeout"),this.params.autoplayTimeout=+this.element.getAttribute("data-autoplay-timeout")||5e3,this.params.arrows=null===this.element.getAttribute("data-no-arrows"),window.matchMedia("(min-width: 575.98px)"));t.matches?this.params.dots=null===this.element.getAttribute("data-no-dots"):this.params.dots=!0,this.params.adaptiveHeight=null!==this.element.getAttribute("data-adaptive-height"),this.params.centerMode=null!==this.element.getAttribute("data-center"),this.params.count={},this.params.count.xs=+this.element.getAttribute("data-slides")||1,this.params.count.sm=+this.element.getAttribute("data-sm-slides")||this.params.count.xs,this.params.count.md=+this.element.getAttribute("data-md-slides")||this.params.count.sm,this.params.count.lg=+this.element.getAttribute("data-lg-slides")||this.params.count.md,this.params.count.xl=+this.element.getAttribute("data-xl-slides")||this.params.count.lg,this.params.rows={},this.params.rows.xs=+this.element.getAttribute("data-rows")||1,this.params.rows.sm=+this.element.getAttribute("data-sm-rows")||this.params.rows.xs,this.params.rows.md=+this.element.getAttribute("data-md-rows")||this.params.rows.sm,this.params.rows.lg=+this.element.getAttribute("data-lg-rows")||this.params.rows.md,this.params.rows.xl=+this.element.getAttribute("data-xl-rows")||this.params.rows.lg,this.params.state={},Object.keys(breakpoints).forEach(function(t,e){var o,n=i.element.getAttribute("data".concat(0!==e?"-"+t+"-":"-","mounted"));null===n&&0!==e?(o=Object.keys(breakpoints)[e-1],i.params.state[t]=i.params.state[o]):i.params.state[t]="true"===n||0===e&&"false"!==n}),this.slides=[],this.containsMobileHiddenSlides=!1,this.element.childNodes.forEach(function(t){t.tagName&&(null!==t.getAttribute("data-slide-mobile-hidden")&&(i.containsMobileHiddenSlides=!0),i.slides.push(t))}),this.createIcons(),this.checkSliderState(),this.checkSliderStateDebounced=debounce(this.checkSliderState,500,this),window.addEventListener("resize",this.checkSliderStateDebounced)}},{key:"createIcons",value:function(){var n='\n      <svg viewBox="0 0 11 19" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n        <path d="M1.4 18.1L0 16.7L7.6 9.10001L0 1.5L1.4 0L10.4 9.10001C10.4 9.10001 1.3 18.1 1.4 18.1Z"/>\n      </svg>\n    ',i='\n      <svg viewBox="0 0 11 19" fill="currentColor" xmlns="http://www.w3.org/2000/svg">\n        <path d="M9.00039 7.24792e-05L10.4004 1.40007L2.80039 9.00009L10.4004 16.6001L9.00039 18.1001L0.000391006 9.00009C0.000391006 9.00009 9.10039 7.24792e-05 9.00039 7.24792e-05Z"/>\n      </svg>\n    ',a="custom-icon-left",s="custom-icon-right";this.element.querySelectorAll(".".concat(a,", .").concat(s)).forEach(function(t){var e=t.classList.contains(a),o=t.classList.contains(s);e?(t.classList.remove(a),n=t.outerHTML):o&&(t.classList.remove(s),i=t.outerHTML),t.remove()}),this.nextArrow='<button type="button" class="button button_style-1 slick-next">'.concat(n,"</button>"),this.prevArrow='<button type="button" class="button button_style-1 slick-prev">'.concat(i,"</button>")}},{key:"checkSliderState",value:function(){if(!this.mounted||this.savedWindowWidth!==window.innerWidth){var t,e;for(e in this.savedWindowWidth=window.innerWidth,this.mounted&&this.unmount(),breakpoints)window.innerWidth>=breakpoints[e]&&(t=this.params.state[e]);t?(this.element.classList.remove("visible"),this.containsMobileHiddenSlides&&this.checkSlidesVisibility(),this.mount()):this.element.classList.add("visible")}}},{key:"checkSlidesVisibility",value:function(){var n=this;this.slides.forEach(function(t){t.remove()}),this.slides.forEach(function(t){var e=null!==t.getAttribute("data-slide-mobile-hidden"),o=window.innerWidth<breakpoints.sm;e&&o||n.element.insertAdjacentElement("beforeend",t)})}},{key:"mount",value:function(){$(this.element).slick({autoplay:this.params.autoplay,autoplaySpeed:this.params.autoplayTimeout,mobileFirst:!0,slidesToShow:this.params.count.xs,slidesToScroll:this.params.count.xs,rows:this.params.rows.xs,prevArrow:this.prevArrow,nextArrow:this.nextArrow,arrows:this.params.arrows,adaptiveHeight:this.params.adaptiveHeight,dots:this.params.dots,centerMode:this.params.centerMode,accessibility:!1,responsive:[{breakpoint:breakpoints.sm-1,settings:{slidesToShow:this.params.count.sm,slidesToScroll:this.params.count.sm,rows:this.params.rows.sm}},{breakpoint:breakpoints.md-1,settings:{slidesToShow:this.params.count.md,slidesToScroll:this.params.count.md,rows:this.params.rows.md}},{breakpoint:breakpoints.lg-1,settings:{slidesToShow:this.params.count.lg,slidesToScroll:this.params.count.lg,rows:this.params.rows.lg}},{breakpoint:breakpoints.xl-1,settings:{slidesToShow:this.params.count.xl,slidesToScroll:this.params.count.xl,rows:this.params.rows.xl}}]}),this.mounted=!0}},{key:"unmount",value:function(){$(this.element).slick("unslick"),this.mounted=!1}}]),e}();function goTo(t){var e,t=document.querySelector(t);t&&(t=t.getBoundingClientRect(),e=document.body.getBoundingClientRect(),t=t.bottom-e.top,window.scrollTo(0,t))}function goTo(t){var e,t=document.querySelector(t);t&&(t=t.getBoundingClientRect(),e=document.body.getBoundingClientRect(),t=t.bottom-e.top,window.scrollTo(0,t))}$(".product-slider--5 .owl-carousel").owlCarousel({loop:!0,margin:11,nav:!0,dots:!1,responsive:{0:{items:1},768:{items:3},992:{items:4}}}),$(".product-slider--4:not(.product-slider--5) .owl-carousel").owlCarousel({loop:!0,margin:11,nav:!0,dots:!1,items:5,responsive:{0:{items:1},768:{items:3},992:{items:4},1240:{items:5}}}),$(".product-slider--3 .owl-carousel").owlCarousel({loop:!0,margin:11,nav:!0,dots:!1,responsive:{0:{items:1},768:{items:2},992:{items:3},1240:{items:4}}}),$(function(){$(".product-slider--3 .item").slice(0,2).show(),$(".btn-download-1").on("click",function(t){t.preventDefault(),$(".product-slider--3 .item:hidden").slice(0,2).show(),goTo(".product-slider--3 .item:nth-child(2)"),0==$(".product-slider--3 .item:hidden").length&&$("#load").show()})}),$(function(){$(".actions-content .item").slice(0,4).show(),$(".btn-download-4").on("click",function(t){t.preventDefault(),$(".actions-content .item:hidden").slice(0,3).show(),goTo(".actions-content .item:nth-child(3)"),0==$(".actions-content .item:hidden").length&&$("#load").show()})}),$(function(){$(".articles-block .item").slice(0,4).show(),$(".btn-download-5").on("click",function(t){t.preventDefault(),$(".articles-block .item:hidden").slice(0,3).show(),goTo(".articles-block .item:nth-child(5)"),0==$(".articles-block .item:hidden").length&&$("#load").show()})}),$(function(){$(".catalog-menu--search .catalog-menu-item").slice(0,4).show(),$(".btn-download-6").on("click",function(t){t.preventDefault(),$(".catalog-menu--search .catalog-menu-item:hidden").slice(0,2).show(),goTo(".catalog-menu--search .catalog-menu-item:nth-child(4)"),0==$(".catalog-menu--search .catalog-menu-item:hidden").length&&$("#load").show()})}),$(function(){$(".catalog-content--search-results .product-item").slice(0,4).show(),$(".btn-download-7").on("click",function(t){t.preventDefault(),$(".catalog-content--search-results .product-item:hidden").slice(0,2).show(),goTo(".catalog-content--search-results .product-item:nth-child(4)"),0==$(".catalog-content--search-results .product-item:hidden").length&&$("#load").show()})}),$(function(){$(".catalog-content .product-item").slice(0,4).show(),$(".btn-download-8").on("click",function(t){t.preventDefault(),$(".catalog-content .product-item:hidden").slice(0,4).show(),goTo(".catalog-content .product-item:nth-child(4)"),0==$(".catalog-content .product-item:hidden").length&&$("#load").show()})}),$(".city-selection__link").click(function(){$(".city-selection__list").toggle(0)});var $banners=$(".product-slider__banners.owl-carousel, .new-banners.owl-carousel");function moveBtnexitToLktop(){var t,e;document.querySelector(".page-head > .btn-exit")||(t=document.querySelector(".btn-exit"),(e=document.querySelector(".page-head"))&&t&&e.appendChild(t))}function moveCompareToHeadright(){var t,e;document.querySelector(".top-header__content-right > .header-compare")||(t=document.querySelector(".header-compare"),(e=document.querySelector(".top-header__content-right"))&&t&&e.appendChild(t))}function moveCartToHeadright(){var t,e;document.querySelector(".top-header__content-right > .header-cart")||(t=document.querySelector(".header-cart"),(e=document.querySelector(".top-header__content-right"))&&t&&e.appendChild(t))}function moveBtnToMobbtn(){var t,e;document.querySelector(".mobile-btn-container > .btn-form")||(t=document.querySelector(".btn-form"),(e=document.querySelector(".mobile-btn-container"))&&t&&e.appendChild(t))}function handleResize(){window.innerWidth<768&&(moveBtnexitToLktop(),moveCompareToHeadright(),moveCartToHeadright(),moveBtnToMobbtn())}$banners.each(function(){console.log($(this));var t=$(this);2<t.find(".item").length&&t.owlCarousel({loop:!0,nav:!1,dots:!0,items:2,responsive:{0:{nav:!1,dots:!0},768:{nav:!1,dots:!1}}})}),$(function(){$(".product-slider--4 .item").slice(0,4).show(),$(".btn-download-2").on("click",function(t){t.preventDefault(),$(".product-slider--4 .item:hidden").slice(0,4).show(),goTo(".product-slider--4 .item:nth-child(4)"),0==$(".product-slider--4 .item:hidden").length&&$("#load").show()})}),$(".actions-content .owl-carousel").owlCarousel({loop:!0,margin:20,nav:!0,dots:!1,items:3,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:2}}}),$(".articles-block .owl-carousel").owlCarousel({loop:!0,margin:0,nav:!0,dots:!1,items:3,responsive:{0:{nav:!1,dots:!0,items:1},479:{nav:!1,dots:!0,items:2}}}),window.addEventListener("resize",handleResize),handleResize();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
